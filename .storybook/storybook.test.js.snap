// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Core/ArcSlider Background color 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  max-width: 450px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 {
  display: block;
  width: 100%;
  height: 100%;
}

.c4 {
  position: relative;
}

.c7 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
  pointer-events: none;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <svg
        className="c5"
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "cursor": "grab",
          }
        }
        viewBox="0 0 600 600"
      >
        <defs>
          <linearGradient
            id="rendition-arc-slider-gradient"
            x1="0%"
            x2="100%"
            y1="0%"
            y2="0%"
          >
            <stop
              offset="0%"
              stopColor="hsl(46.30000000000001, 100%, 39.8%)"
            />
            <stop
              offset="100%"
              stopColor="#FEC400"
            />
          </linearGradient>
          <filter
            height="130%"
            id="rendition-arc-slider-dropshadow"
            xmlns="http://www.w3.org/2000/svg"
          >
            <feGaussianBlur
              in="SourceAlpha"
              stdDeviation="1.25"
            />
            <feOffset
              dx="0"
              dy="0"
              result="offsetblur"
            />
            <feMerge>
              <feMergeNode />
              <feMergeNode
                in="SourceGraphic"
              />
            </feMerge>
          </filter>
        </defs>
        <path
          d="M 441.4213562373095 441.4213562373095 A 200 200 0 1 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="#ff0000"
          strokeLinecap="round"
          strokeWidth="20.5"
        />
        <path
          d="M 158.57864376269046 441.4213562373095 A 200 200 0 0 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="url(#rendition-arc-slider-gradient)"
          strokeLinecap="round"
          strokeWidth="22"
        />
        <circle
          cx="300"
          cy="100"
          fill="white"
          filter="url(#rendition-arc-slider-dropshadow)"
          r="20"
          transform="rotate(-135, 300, 300)"
        />
        <circle
          cx="300"
          cy="100"
          fill="#FEC400"
          r="14"
          transform="rotate(-135, 300, 300)"
        />
      </svg>
      <div
        className="c2 c6 c7"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/ArcSlider Change handler 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  max-width: 450px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 {
  display: block;
  width: 100%;
  height: 100%;
}

.c4 {
  position: relative;
}

.c7 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
  pointer-events: none;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
      value={0.6}
    >
      <svg
        className="c5"
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "cursor": "grab",
          }
        }
        viewBox="0 0 600 600"
      >
        <defs>
          <linearGradient
            id="rendition-arc-slider-gradient"
            x1="0%"
            x2="100%"
            y1="0%"
            y2="0%"
          >
            <stop
              offset="0%"
              stopColor="hsl(46.30000000000001, 100%, 39.8%)"
            />
            <stop
              offset="100%"
              stopColor="#FEC400"
            />
          </linearGradient>
          <filter
            height="130%"
            id="rendition-arc-slider-dropshadow"
            xmlns="http://www.w3.org/2000/svg"
          >
            <feGaussianBlur
              in="SourceAlpha"
              stdDeviation="1.25"
            />
            <feOffset
              dx="0"
              dy="0"
              result="offsetblur"
            />
            <feMerge>
              <feMergeNode />
              <feMergeNode
                in="SourceGraphic"
              />
            </feMerge>
          </filter>
        </defs>
        <path
          d="M 441.4213562373095 441.4213562373095 A 200 200 0 1 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="#707274"
          strokeLinecap="round"
          strokeWidth="20.5"
        />
        <path
          d="M 390.79809994790935 121.79869516232645 A 200 200 0 0 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="url(#rendition-arc-slider-gradient)"
          strokeLinecap="round"
          strokeWidth="22"
        />
        <circle
          cx="300"
          cy="100"
          fill="white"
          filter="url(#rendition-arc-slider-dropshadow)"
          r="20"
          transform="rotate(27, 300, 300)"
        />
        <circle
          cx="300"
          cy="100"
          fill="#FEC400"
          r="14"
          transform="rotate(27, 300, 300)"
        />
      </svg>
      <div
        className="c2 c6 c7"
      >
        <h2>
          60
          %
        </h2>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/ArcSlider Fill color 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  max-width: 450px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 {
  display: block;
  width: 100%;
  height: 100%;
}

.c4 {
  position: relative;
}

.c7 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
  pointer-events: none;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <svg
        className="c5"
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "cursor": "grab",
          }
        }
        viewBox="0 0 600 600"
      >
        <defs>
          <linearGradient
            id="rendition-arc-slider-gradient"
            x1="0%"
            x2="100%"
            y1="0%"
            y2="0%"
          >
            <stop
              offset="0%"
              stopColor="hsl(0, 100%, 40%)"
            />
            <stop
              offset="100%"
              stopColor="#ff0000"
            />
          </linearGradient>
          <filter
            height="130%"
            id="rendition-arc-slider-dropshadow"
            xmlns="http://www.w3.org/2000/svg"
          >
            <feGaussianBlur
              in="SourceAlpha"
              stdDeviation="1.25"
            />
            <feOffset
              dx="0"
              dy="0"
              result="offsetblur"
            />
            <feMerge>
              <feMergeNode />
              <feMergeNode
                in="SourceGraphic"
              />
            </feMerge>
          </filter>
        </defs>
        <path
          d="M 441.4213562373095 441.4213562373095 A 200 200 0 1 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="#707274"
          strokeLinecap="round"
          strokeWidth="20.5"
        />
        <path
          d="M 158.57864376269046 441.4213562373095 A 200 200 0 0 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="url(#rendition-arc-slider-gradient)"
          strokeLinecap="round"
          strokeWidth="22"
        />
        <circle
          cx="300"
          cy="100"
          fill="white"
          filter="url(#rendition-arc-slider-dropshadow)"
          r="20"
          transform="rotate(-135, 300, 300)"
        />
        <circle
          cx="300"
          cy="100"
          fill="#ff0000"
          r="14"
          transform="rotate(-135, 300, 300)"
        />
      </svg>
      <div
        className="c2 c6 c7"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/ArcSlider Label 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  max-width: 450px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 {
  display: block;
  width: 100%;
  height: 100%;
}

.c4 {
  position: relative;
}

.c7 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
  pointer-events: none;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <svg
        className="c5"
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "cursor": "grab",
          }
        }
        viewBox="0 0 600 600"
      >
        <defs>
          <linearGradient
            id="rendition-arc-slider-gradient"
            x1="0%"
            x2="100%"
            y1="0%"
            y2="0%"
          >
            <stop
              offset="0%"
              stopColor="hsl(46.30000000000001, 100%, 39.8%)"
            />
            <stop
              offset="100%"
              stopColor="#FEC400"
            />
          </linearGradient>
          <filter
            height="130%"
            id="rendition-arc-slider-dropshadow"
            xmlns="http://www.w3.org/2000/svg"
          >
            <feGaussianBlur
              in="SourceAlpha"
              stdDeviation="1.25"
            />
            <feOffset
              dx="0"
              dy="0"
              result="offsetblur"
            />
            <feMerge>
              <feMergeNode />
              <feMergeNode
                in="SourceGraphic"
              />
            </feMerge>
          </filter>
        </defs>
        <path
          d="M 441.4213562373095 441.4213562373095 A 200 200 0 1 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="#707274"
          strokeLinecap="round"
          strokeWidth="20.5"
        />
        <path
          d="M 158.57864376269046 441.4213562373095 A 200 200 0 0 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="url(#rendition-arc-slider-gradient)"
          strokeLinecap="round"
          strokeWidth="22"
        />
        <circle
          cx="300"
          cy="100"
          fill="white"
          filter="url(#rendition-arc-slider-dropshadow)"
          r="20"
          transform="rotate(-135, 300, 300)"
        />
        <circle
          cx="300"
          cy="100"
          fill="#FEC400"
          r="14"
          transform="rotate(-135, 300, 300)"
        />
      </svg>
      <div
        className="c2 c6 c7"
      >
        <h2>
          A label
        </h2>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/ArcSlider Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  max-width: 450px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 {
  display: block;
  width: 100%;
  height: 100%;
}

.c4 {
  position: relative;
}

.c7 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
  pointer-events: none;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <svg
        className="c5"
        onMouseDown={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "cursor": "grab",
          }
        }
        viewBox="0 0 600 600"
      >
        <defs>
          <linearGradient
            id="rendition-arc-slider-gradient"
            x1="0%"
            x2="100%"
            y1="0%"
            y2="0%"
          >
            <stop
              offset="0%"
              stopColor="hsl(46.30000000000001, 100%, 39.8%)"
            />
            <stop
              offset="100%"
              stopColor="#FEC400"
            />
          </linearGradient>
          <filter
            height="130%"
            id="rendition-arc-slider-dropshadow"
            xmlns="http://www.w3.org/2000/svg"
          >
            <feGaussianBlur
              in="SourceAlpha"
              stdDeviation="1.25"
            />
            <feOffset
              dx="0"
              dy="0"
              result="offsetblur"
            />
            <feMerge>
              <feMergeNode />
              <feMergeNode
                in="SourceGraphic"
              />
            </feMerge>
          </filter>
        </defs>
        <path
          d="M 441.4213562373095 441.4213562373095 A 200 200 0 1 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="#707274"
          strokeLinecap="round"
          strokeWidth="20.5"
        />
        <path
          d="M 158.57864376269046 441.4213562373095 A 200 200 0 0 0 158.57864376269046 441.4213562373095"
          fill="none"
          stroke="url(#rendition-arc-slider-gradient)"
          strokeLinecap="round"
          strokeWidth="22"
        />
        <circle
          cx="300"
          cy="100"
          fill="white"
          filter="url(#rendition-arc-slider-dropshadow)"
          r="20"
          transform="rotate(-135, 300, 300)"
        />
        <circle
          cx="300"
          cy="100"
          fill="#FEC400"
          r="14"
          transform="rotate(-135, 300, 300)"
        />
      </svg>
      <div
        className="c2 c6 c7"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Banner BackgoundImage 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c4 {
  background-size: cover;
  background-position: center;
  background-image: none;
}

.c5 {
  padding: 16px;
  min-height: 80vh;
  color: white;
}

.c6 {
  font-weight: normal;
}

.c7 {
  margin: 0;
  font-size: 58px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media screen and (min-width:576px) {
  .c5 {
    padding: 38px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4 c5"
  >
    <h1
      className="c6 c7"
    >
      balena
    </h1>
    <div
      className=""
    >
      Balena brings the benefits of Linux containers to the IoT. Develop iteratively, deploy safely, and manage at scale.
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Container Center Text 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  max-width: 1184px;
}

.c6 {
  font-weight: normal;
}

.c7 {
  margin: 0;
  font-size: 18px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  text-align: center;
}

.c5 {
  margin-left: auto;
  margin-right: auto;
  padding-left: 16px;
  padding-right: 16px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4 c5"
  >
    <h3
      className="c6 c7"
    >
      I am in a container
    </h3>
  </div>
</div>
`;

exports[`Storyshots Core/Container Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  max-width: 1184px;
}

.c5 {
  font-weight: normal;
}

.c6 {
  margin: 0;
  font-size: 18px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  margin-left: auto;
  margin-right: auto;
  padding-left: 16px;
  padding-right: 16px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
  >
    <h3
      className="c5 c6"
    >
      I am in a container
    </h3>
  </div>
</div>
`;

exports[`Storyshots Core/Fixed Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 0;
  background: red;
}

.c3 {
  background-color: red;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  />
</div>
`;

exports[`Storyshots Core/Img Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  background-color: #666;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  display: block;
  max-width: 100%;
  height: auto;
  padding: 48px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <img
      className="c4"
      src={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots Core/Link Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c4:active,
.c4:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c6 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: not-allowed;
  opacity: 0.65;
  display: inline-block;
}

.c5 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div>
      <a
        className="c4 c5"
        color="primary.main"
        href="#"
      >
        Internal Link
      </a>
    </div>
    <div>
      <a
        className="c4 c5"
        color="primary.main"
        href="https://balena.io"
        rel="noopener"
        target="_blank"
      >
        External Link
      </a>
    </div>
    <div>
      <a
        className="c6 c5"
        color="primary.main"
        disabled={true}
        rel="noopener"
        target="_blank"
      >
        Disabled Link
      </a>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/ProgressBar Emphasized 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #00AEEF;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c9 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #2A506F;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c10 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #527699;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c11 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #FF423D;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c12 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #FCA321;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c13 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #1AC135;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c14 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #1496E1;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c16 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: purple;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c6 {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  text-align: center;
  color: #000;
  text-shadow: 0 0 3px rgba(255,255,255,0.5);
}

.c8 {
  text-align: center;
  position: absolute;
  left: 0;
  bottom: 0;
  top: 0;
  text-shadow: 0 0 3px rgba(0,0,0,0.5);
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
}

.c4 {
  position: relative;
  border-radius: 3px;
  height: 38px;
  line-height: 38px;
  background: #DDE1f0;
  font-size: 1em;
  overflow: hidden;
}

.c5 {
  margin-bottom: 16px;
  color: #fff;
}

.c15 {
  margin-bottom: 16px;
  color: red;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
      color="#fff"
      type="primary"
    >
      <div
        className="c6"
      >
        50
        %
      </div>
      <div
        className="c7"
        style={
          Object {
            "width": "50%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "200%",
            }
          }
        >
          50
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="secondary"
    >
      <div
        className="c6"
      >
        45
        %
      </div>
      <div
        className="c9"
        style={
          Object {
            "width": "45%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "222.22222222222223%",
            }
          }
        >
          45
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="tertiary"
    >
      <div
        className="c6"
      >
        40
        %
      </div>
      <div
        className="c10"
        style={
          Object {
            "width": "40%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "250%",
            }
          }
        >
          40
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="danger"
    >
      <div
        className="c6"
      >
        35
        %
      </div>
      <div
        className="c11"
        style={
          Object {
            "width": "35%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "285.7142857142857%",
            }
          }
        >
          35
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="warning"
    >
      <div
        className="c6"
      >
        30
        %
      </div>
      <div
        className="c12"
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "333.3333333333333%",
            }
          }
        >
          30
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="success"
    >
      <div
        className="c6"
      >
        25
        %
      </div>
      <div
        className="c13"
        style={
          Object {
            "width": "25%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "400%",
            }
          }
        >
          25
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="info"
    >
      <div
        className="c6"
      >
        20
        %
      </div>
      <div
        className="c14"
        style={
          Object {
            "width": "20%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "500%",
            }
          }
        >
          20
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c15"
      color="red"
    >
      <div
        className="c6"
      >
        15
        %
      </div>
      <div
        className="c16"
        style={
          Object {
            "width": "15%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "666.6666666666666%",
            }
          }
        >
          15
          %
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/ProgressBar Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #00AEEF;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c9 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #2A506F;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c10 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #527699;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c11 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #FF423D;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c12 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #FCA321;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c13 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #1AC135;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c14 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: #1496E1;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c16 {
  position: relative;
  height: 38px;
  overflow: hidden;
  background: purple;
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
  text-align: center;
}

.c6 {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  text-align: center;
  color: #000;
  text-shadow: 0 0 3px rgba(255,255,255,0.5);
}

.c8 {
  text-align: center;
  position: absolute;
  left: 0;
  bottom: 0;
  top: 0;
  text-shadow: 0 0 3px rgba(0,0,0,0.5);
  -webkit-transition: width linear 250ms;
  transition: width linear 250ms;
}

.c4 {
  position: relative;
  border-radius: 3px;
  height: 16px;
  line-height: 16px;
  background: #DDE1f0;
  font-size: 0.6em;
  overflow: hidden;
}

.c5 {
  margin-bottom: 16px;
  color: #fff;
}

.c15 {
  margin-bottom: 16px;
  color: red;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
      color="#fff"
    >
      <div
        className="c6"
      >
        50
        %
      </div>
      <div
        className="c7"
        style={
          Object {
            "width": "50%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "200%",
            }
          }
        >
          50
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="secondary"
    >
      <div
        className="c6"
      >
        45
        %
      </div>
      <div
        className="c9"
        style={
          Object {
            "width": "45%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "222.22222222222223%",
            }
          }
        >
          45
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="tertiary"
    >
      <div
        className="c6"
      >
        40
        %
      </div>
      <div
        className="c10"
        style={
          Object {
            "width": "40%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "250%",
            }
          }
        >
          40
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="danger"
    >
      <div
        className="c6"
      >
        35
        %
      </div>
      <div
        className="c11"
        style={
          Object {
            "width": "35%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "285.7142857142857%",
            }
          }
        >
          35
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="warning"
    >
      <div
        className="c6"
      >
        30
        %
      </div>
      <div
        className="c12"
        style={
          Object {
            "width": "30%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "333.3333333333333%",
            }
          }
        >
          30
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="success"
    >
      <div
        className="c6"
      >
        25
        %
      </div>
      <div
        className="c13"
        style={
          Object {
            "width": "25%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "400%",
            }
          }
        >
          25
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c5"
      color="#fff"
      type="info"
    >
      <div
        className="c6"
      >
        20
        %
      </div>
      <div
        className="c14"
        style={
          Object {
            "width": "20%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "500%",
            }
          }
        >
          20
          %
        </div>
      </div>
    </div>
    <div
      className="c4 c15"
      color="red"
    >
      <div
        className="c6"
      >
        15
        %
      </div>
      <div
        className="c16"
        style={
          Object {
            "width": "15%",
          }
        }
      >
        <div
          className="c8"
          style={
            Object {
              "width": "666.6666666666666%",
            }
          }
        >
          15
          %
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Search Dark 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  width: 500px;
  background-color: rgb(52,52,52);
}

.c4 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c4 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c4 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input:hover {
  box-shadow: none;
}

.c4 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

@media only screen and (max-width:768px) {

}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 "
    >
      <input
        placeholder="Search entries..."
        style={
          Object {
            "color": "#fff",
          }
        }
      />
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-search fa-w-16 search-icon"
        data-icon="search"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Search Placeholder 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  width: 500px;
}

.c4 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c4 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c4 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input:hover {
  box-shadow: none;
}

.c4 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c4 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 "
    >
      <input
        placeholder="Placeholder Text"
        style={
          Object {
            "color": undefined,
          }
        }
      />
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-search fa-w-16 search-icon"
        data-icon="search"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Anchor Rows 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: pointer;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c9 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Anchor Rows with Checkboxes 1`] = `
.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: solid 1px #DDE1f0;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 20px;
  width: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4px;
}

.c13 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c13:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus > circle,
.c13:focus > ellipse,
.c13:focus > line,
.c13:focus > path,
.c13:focus > polygon,
.c13:focus > polyline,
.c13:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  cursor: pointer;
}

.c8:hover input:not([disabled]) + div,
.c8:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c11 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c11:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c10 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c14 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c14 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c14:disabled {
  cursor: not-allowed;
}

.c15 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c7 > label > div > div,
.c7 > label > div > span {
  background-color: white;
}

.c7 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c7 label[disabled] {
  opacity: 0.4;
}

.c7 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c7 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c6 {
  display: inline-block;
  vertical-align: middle;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 20px;
  width: 60px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 20px;
  width: 60px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: pointer;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c16 {
  display: block;
}

@media only screen and (max-width:768px) {
  .c12 {
    border: solid 1px #DDE1f0;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                  >
                    <input
                      checked={false}
                      className="c11"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                    />
                  </div>
                </label>
              </div>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={1}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              href="https://www.pokemon.com/uk/pokedex/Bulbasaur"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={2}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              href="https://www.pokemon.com/uk/pokedex/Ivysaur"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={3}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              href="https://www.pokemon.com/uk/pokedex/Venusaur"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={4}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              href="https://www.pokemon.com/uk/pokedex/Charmander"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={5}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              href="https://www.pokemon.com/uk/pokedex/Charmeleon"
              onClick={[Function]}
              target="_blank"
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={6}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              href="https://www.pokemon.com/uk/pokedex/Charizard"
              onClick={[Function]}
              target="_blank"
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={7}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              href="https://www.pokemon.com/uk/pokedex/Squirtle"
              onClick={[Function]}
              target="_blank"
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={8}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              href="https://www.pokemon.com/uk/pokedex/Wartortle"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={9}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              href="https://www.pokemon.com/uk/pokedex/Blastoise"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={10}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              href="https://www.pokemon.com/uk/pokedex/Caterpie"
              onClick={[Function]}
              target="_blank"
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={120}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={120}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              href="https://www.pokemon.com/uk/pokedex/Staryu"
              onClick={[Function]}
              target="_blank"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Checkboxes 1`] = `
.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: solid 1px #DDE1f0;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 20px;
  width: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4px;
}

.c13 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c13:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus > circle,
.c13:focus > ellipse,
.c13:focus > line,
.c13:focus > path,
.c13:focus > polygon,
.c13:focus > polyline,
.c13:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  cursor: pointer;
}

.c8:hover input:not([disabled]) + div,
.c8:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c11 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c11:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c10 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c14 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c14 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c14:disabled {
  cursor: not-allowed;
}

.c15 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c7 > label > div > div,
.c7 > label > div > span {
  background-color: white;
}

.c7 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c7 label[disabled] {
  opacity: 0.4;
}

.c7 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c7 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c6 {
  display: inline-block;
  vertical-align: middle;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 20px;
  width: 60px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 20px;
  width: 60px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c16 {
  display: block;
}

@media only screen and (max-width:768px) {
  .c12 {
    border: solid 1px #DDE1f0;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                  >
                    <input
                      checked={false}
                      className="c11"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                    />
                  </div>
                </label>
              </div>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c13 c14 c15 c16"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={1}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={2}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={3}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={4}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={5}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={6}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={7}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={8}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={9}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={10}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <div
              className="c6"
              data-display="table-cell"
            >
              <div
                className="c7 "
              >
                <label
                  checked={false}
                  className="c8"
                  disabled={false}
                  onClick={[Function]}
                >
                  <div
                    checked={false}
                    className="c9 c10"
                    disabled={false}
                  >
                    <input
                      checked={false}
                      className="c11"
                      data-key={120}
                      disabled={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="checkbox"
                    />
                    <div
                      checked={false}
                      className="c12 "
                      disabled={false}
                    />
                  </div>
                </label>
              </div>
            </div>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Conditional classes 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c9 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className="pokemon pokemon--caught pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            />
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            />
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className="pokemon pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className="pokemon pokemon--caught pokemon--one-dimensional"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
          <div
            className="pokemon pokemon--caught"
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Highlighted rows 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c9 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={true}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={true}
          >
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Multiple Row Prefix 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c9 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <tr>
            <td
              colSpan={4}
            >
              <p
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                Row 1
              </p>
            </td>
          </tr>
          <tr>
            <td
              colSpan={4}
            >
              <p
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                Row 2
              </p>
            </td>
          </tr>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Pager 1`] = `
.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus > circle,
.c9:focus > ellipse,
.c9:focus > line,
.c9:focus > path,
.c9:focus > polygon,
.c9:focus > polyline,
.c9:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  margin-bottom: 8px;
}

.c18 {
  margin-top: 8px;
}

.c10 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c10 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c10:disabled {
  cursor: not-allowed;
}

.c11 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c11 svg {
  color: #527699 !important;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: #2A506F !important;
}

.c16 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  margin-right: 8px;
}

.c8 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c8 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c8 > *:not(:last-child) {
  border-right: 0;
}

.c8 > *:not(:last-child):not(:first-child) {
  border-radius: 0;
}

.c8 > *:hover {
  z-index: 1;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c13 {
  overflow-x: auto;
  max-width: 100%;
}

.c14 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c14 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c14 > [data-display='table-body'] {
  display: table-row-group;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c14 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c14 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c14 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c14 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c17 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <div
        className="c6"
      >
        <strong>
          1
           - 
          3
        </strong>
         
        of 
        <strong>
          11
        </strong>
      </div>
      <div
        className="c2 c7"
      >
        <div
          className="c2 c7 c8"
        >
          <button
            className="c9 c10 c11 rendition-pager__btn--prev"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-left fa-w-10 "
              data-icon="chevron-left"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
          <button
            className="c12 c10 c11 rendition-pager__btn--next"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-right fa-w-10 "
              data-icon="chevron-right"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
    <div
      className="c13"
    >
      <div
        className="c14"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="c2 c18 c5"
    >
      <div
        className="c6"
      >
        <strong>
          1
           - 
          3
        </strong>
         
        of 
        <strong>
          11
        </strong>
      </div>
      <div
        className="c2 c7"
      >
        <div
          className="c2 c7 c8"
        >
          <button
            className="c9 c10 c11 rendition-pager__btn--prev"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-left fa-w-10 "
              data-icon="chevron-left"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
          <button
            className="c12 c10 c11 rendition-pager__btn--next"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-right fa-w-10 "
              data-icon="chevron-right"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Pager callback 1`] = `
.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus > circle,
.c9:focus > ellipse,
.c9:focus > line,
.c9:focus > path,
.c9:focus > polygon,
.c9:focus > polyline,
.c9:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  margin-bottom: 8px;
}

.c18 {
  margin-top: 8px;
}

.c10 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c10 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c10:disabled {
  cursor: not-allowed;
}

.c11 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c11 svg {
  color: #527699 !important;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: #2A506F !important;
}

.c16 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  margin-right: 8px;
}

.c8 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c8 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c8 > *:not(:last-child) {
  border-right: 0;
}

.c8 > *:not(:last-child):not(:first-child) {
  border-radius: 0;
}

.c8 > *:hover {
  z-index: 1;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c13 {
  overflow-x: auto;
  max-width: 100%;
}

.c14 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c14 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c14 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c14 > [data-display='table-body'] {
  display: table-row-group;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c14 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c14 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c14 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c14 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c14 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c17 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <div
        className="c6"
      >
        <strong>
          1
           - 
          3
        </strong>
         
        of 
        <strong>
          11
        </strong>
      </div>
      <div
        className="c2 c7"
      >
        <div
          className="c2 c7 c8"
        >
          <button
            className="c9 c10 c11 rendition-pager__btn--prev"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-left fa-w-10 "
              data-icon="chevron-left"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
          <button
            className="c12 c10 c11 rendition-pager__btn--next"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-right fa-w-10 "
              data-icon="chevron-right"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
    <div
      className="c13"
    >
      <div
        className="c14"
        onPageChange={[Function]}
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c15 c10 c16 c17"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="c2 c18 c5"
    >
      <div
        className="c6"
      >
        <strong>
          1
           - 
          3
        </strong>
         
        of 
        <strong>
          11
        </strong>
      </div>
      <div
        className="c2 c7"
      >
        <div
          className="c2 c7 c8"
        >
          <button
            className="c9 c10 c11 rendition-pager__btn--prev"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-left fa-w-10 "
              data-icon="chevron-left"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
          <button
            className="c12 c10 c11 rendition-pager__btn--next"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-right fa-w-10 "
              data-icon="chevron-right"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 320 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Row Click 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: pointer;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c9 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={120}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Row Prefix 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c9 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <tr>
            <td
              colSpan={4}
            >
              <p
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                This row will always appear at the top of the table
              </p>
            </td>
          </tr>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Standard 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c11 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c9 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
        onSort={[Function]}
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c6 c7 c8 c9"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color="#1496E1"
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c10 c7 c11 c9"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c10 c7 c11 c9"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c10 c7 c11 c9"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Table Updating data in a table 1`] = `
.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c5::-webkit-input-placeholder {
  color: #abb9c5;
}

.c5::-moz-placeholder {
  color: #abb9c5;
}

.c5:-ms-input-placeholder {
  color: #abb9c5;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c11 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c11 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c11:disabled {
  cursor: not-allowed;
}

.c12 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c12:hover:enabled,
.c12:focus:enabled,
.c12:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c12:hover:enabled svg,
.c12:focus:enabled svg,
.c12:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c6 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c6:focus {
  border-color: #527699;
}

.c7 {
  margin-bottom: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c8 {
  overflow-x: auto;
  max-width: 100%;
}

.c9 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c9 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c9 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c9 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c9 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c9 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c9 > [data-display='table-body'] {
  display: table-row-group;
}

.c9 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c9 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c9 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c9 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c9 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c9 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c9 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c9 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c9 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

.c13 {
  display: block;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c6 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        value="Bulbasaur"
      />
    </div>
    <div
      className="c8"
    >
      <div
        className="c9"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              <button
                className="c10 c11 c12 c13"
                data-field="Name"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Name
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c10 c11 c12 c13"
                data-field="pokedex_number"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                National Pokedex Number
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c10 c11 c12 c13"
                data-field="Category"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                Category
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
            <div
              data-display="table-cell"
            >
              <button
                className="c10 c11 c12 c13"
                data-field="first_seen"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                First Seen
                 
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-sort fa-w-10 "
                  color=""
                  data-icon="sort"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 320 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Bulbasaur
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              <code>
                1
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Ivysaur
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              <code>
                2
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Venusaur
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              <code>
                3
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            >
              Seed
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Charmander
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              <code>
                4
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            >
              Lizard
            </a>
            <a
              data-display="table-cell"
              data-key={3}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Charmeleon
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <code>
                5
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={4}
              onClick={[Function]}
            >
              <span>
                2012
                -
                01
                -
                01
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Charizard
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <code>
                6
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              Flame
            </a>
            <a
              data-display="table-cell"
              data-key={5}
              onClick={[Function]}
            >
              <span>
                2013
                -
                04
                -
                04
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Squirtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <code>
                7
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              Tiny Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={6}
              onClick={[Function]}
            >
              <span>
                2017
                -
                11
                -
                06
              </span>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Wartortle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              <code>
                8
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            >
              Turtle
            </a>
            <a
              data-display="table-cell"
              data-key={7}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Blastoise
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              <code>
                9
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            >
              Shellfish
            </a>
            <a
              data-display="table-cell"
              data-key={8}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Caterpie
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              <code>
                10
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            >
              Worm
            </a>
            <a
              data-display="table-cell"
              data-key={9}
              onClick={[Function]}
            />
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Staryu
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              <code>
                120
              </code>
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            >
              Star Shape
            </a>
            <a
              data-display="table-cell"
              data-key={10}
              onClick={[Function]}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Terminal Non interactive 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  padding: 48px;
}

.c5 {
  height: 100%;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c7 {
  position: relative;
}

.c7 .xterm {
  font-feature-settings: 'liga' 0;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
}

.c7 .xterm.focus,
.c7 .xterm:focus {
  outline: none;
}

.c7 .xterm .xterm-helpers {
  position: absolute;
  top: 0;
  z-index: 5;
}

.c7 .xterm .xterm-helper-textarea {
  padding: 0;
  border: 0;
  margin: 0;
  position: absolute;
  opacity: 0;
  left: -9999em;
  top: 0;
  width: 0;
  height: 0;
  z-index: -5;
  white-space: nowrap;
  overflow: hidden;
  resize: none;
}

.c7 .xterm .composition-view {
  background: #000;
  color: #fff;
  display: none;
  position: absolute;
  white-space: nowrap;
  z-index: 1;
}

.c7 .xterm .composition-view.active {
  display: block;
}

.c7 .xterm .xterm-viewport {
  background-color: #000;
  overflow-y: scroll;
  cursor: default;
  position: absolute;
  right: 0;
  left: 0;
  top: 0;
  bottom: 0;
}

.c7 .xterm .xterm-screen {
  position: relative;
}

.c7 .xterm .xterm-screen canvas {
  position: absolute;
  left: 0;
  top: 0;
}

.c7 .xterm .xterm-scroll-area {
  visibility: hidden;
}

.c7 .xterm-char-measure-element {
  display: inline-block;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: -9999em;
  line-height: normal;
}

.c7 .xterm {
  cursor: text;
}

.c7 .xterm.enable-mouse-events {
  cursor: default;
}

.c7 .xterm.xterm-cursor-pointer {
  cursor: pointer;
}

.c7 .xterm.column-select.focus {
  cursor: crosshair;
}

.c7 .xterm .xterm-accessibility,
.c7 .xterm .xterm-message {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  z-index: 10;
  color: transparent;
}

.c7 .xterm .live-region {
  position: absolute;
  left: -9999px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.c7 .xterm-dim {
  opacity: 0.5;
}

.c7 .xterm-underline {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c7 .xterm-viewport::-webkit-scrollbar-track {
  background-color: transparent;
  border-bottom-right-radius: 0;
}

.c7 .xterm-viewport::-webkit-scrollbar {
  width: 10px;
  background-color: transparent;
  border-radius: 0;
}

.c7 .xterm-viewport::-webkit-scrollbar-thumb {
  background-color: #e9e9e9;
}

.c9 {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
    style={
      Object {
        "height": 500,
      }
    }
  >
    <div
      className="c4 c5 c6 c7"
    >
      <div
        className="c4 c8 c9"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Terminal Persistent 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  padding: 48px;
}

.c5 {
  height: 100%;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c7 {
  position: relative;
}

.c7 .xterm {
  font-feature-settings: 'liga' 0;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
}

.c7 .xterm.focus,
.c7 .xterm:focus {
  outline: none;
}

.c7 .xterm .xterm-helpers {
  position: absolute;
  top: 0;
  z-index: 5;
}

.c7 .xterm .xterm-helper-textarea {
  padding: 0;
  border: 0;
  margin: 0;
  position: absolute;
  opacity: 0;
  left: -9999em;
  top: 0;
  width: 0;
  height: 0;
  z-index: -5;
  white-space: nowrap;
  overflow: hidden;
  resize: none;
}

.c7 .xterm .composition-view {
  background: #000;
  color: #fff;
  display: none;
  position: absolute;
  white-space: nowrap;
  z-index: 1;
}

.c7 .xterm .composition-view.active {
  display: block;
}

.c7 .xterm .xterm-viewport {
  background-color: #000;
  overflow-y: scroll;
  cursor: default;
  position: absolute;
  right: 0;
  left: 0;
  top: 0;
  bottom: 0;
}

.c7 .xterm .xterm-screen {
  position: relative;
}

.c7 .xterm .xterm-screen canvas {
  position: absolute;
  left: 0;
  top: 0;
}

.c7 .xterm .xterm-scroll-area {
  visibility: hidden;
}

.c7 .xterm-char-measure-element {
  display: inline-block;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: -9999em;
  line-height: normal;
}

.c7 .xterm {
  cursor: text;
}

.c7 .xterm.enable-mouse-events {
  cursor: default;
}

.c7 .xterm.xterm-cursor-pointer {
  cursor: pointer;
}

.c7 .xterm.column-select.focus {
  cursor: crosshair;
}

.c7 .xterm .xterm-accessibility,
.c7 .xterm .xterm-message {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  z-index: 10;
  color: transparent;
}

.c7 .xterm .live-region {
  position: absolute;
  left: -9999px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.c7 .xterm-dim {
  opacity: 0.5;
}

.c7 .xterm-underline {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c7 .xterm-viewport::-webkit-scrollbar-track {
  background-color: transparent;
  border-bottom-right-radius: 0;
}

.c7 .xterm-viewport::-webkit-scrollbar {
  width: 10px;
  background-color: transparent;
  border-radius: 0;
}

.c7 .xterm-viewport::-webkit-scrollbar-thumb {
  background-color: #e9e9e9;
}

.c9 {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 "
    >
      <select
        onChange={[Function]}
        value="terminal 1"
      >
        <option>
          terminal 1
        </option>
        <option>
          terminal 2
        </option>
        <option>
          terminal 3
        </option>
      </select>
      <div
        className="c2 "
        style={
          Object {
            "height": 500,
          }
        }
      >
        <div
          className="c4 c5 c6 c7"
        >
          <div
            className="c4 c8 c9"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Terminal Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  padding: 48px;
}

.c5 {
  height: 100%;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c7 {
  position: relative;
}

.c7 .xterm {
  font-feature-settings: 'liga' 0;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
}

.c7 .xterm.focus,
.c7 .xterm:focus {
  outline: none;
}

.c7 .xterm .xterm-helpers {
  position: absolute;
  top: 0;
  z-index: 5;
}

.c7 .xterm .xterm-helper-textarea {
  padding: 0;
  border: 0;
  margin: 0;
  position: absolute;
  opacity: 0;
  left: -9999em;
  top: 0;
  width: 0;
  height: 0;
  z-index: -5;
  white-space: nowrap;
  overflow: hidden;
  resize: none;
}

.c7 .xterm .composition-view {
  background: #000;
  color: #fff;
  display: none;
  position: absolute;
  white-space: nowrap;
  z-index: 1;
}

.c7 .xterm .composition-view.active {
  display: block;
}

.c7 .xterm .xterm-viewport {
  background-color: #000;
  overflow-y: scroll;
  cursor: default;
  position: absolute;
  right: 0;
  left: 0;
  top: 0;
  bottom: 0;
}

.c7 .xterm .xterm-screen {
  position: relative;
}

.c7 .xterm .xterm-screen canvas {
  position: absolute;
  left: 0;
  top: 0;
}

.c7 .xterm .xterm-scroll-area {
  visibility: hidden;
}

.c7 .xterm-char-measure-element {
  display: inline-block;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: -9999em;
  line-height: normal;
}

.c7 .xterm {
  cursor: text;
}

.c7 .xterm.enable-mouse-events {
  cursor: default;
}

.c7 .xterm.xterm-cursor-pointer {
  cursor: pointer;
}

.c7 .xterm.column-select.focus {
  cursor: crosshair;
}

.c7 .xterm .xterm-accessibility,
.c7 .xterm .xterm-message {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  z-index: 10;
  color: transparent;
}

.c7 .xterm .live-region {
  position: absolute;
  left: -9999px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.c7 .xterm-dim {
  opacity: 0.5;
}

.c7 .xterm-underline {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c7 .xterm-viewport::-webkit-scrollbar-track {
  background-color: transparent;
  border-bottom-right-radius: 0;
}

.c7 .xterm-viewport::-webkit-scrollbar {
  width: 10px;
  background-color: transparent;
  border-radius: 0;
}

.c7 .xterm-viewport::-webkit-scrollbar-thumb {
  background-color: #e9e9e9;
}

.c9 {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
    style={
      Object {
        "height": 500,
      }
    }
  >
    <div
      className="c4 c5 c6 c7"
    >
      <div
        className="c4 c8 c9"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Core/Tooltips Click 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #1AC135;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #1AC135;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #1AC135;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c11 {
  color: white;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: hsl(129.7,76.3%,34.4%);
  border-color: hsl(129.7,76.3%,34.4%);
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c13 {
  color: white;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on top
    </button>
    <button
      className="c8 c5 c9 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on right
    </button>
    <button
      className="c10 c5 c11 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on bottom
    </button>
    <button
      className="c12 c5 c13 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on left
    </button>
  </div>
</div>
`;

exports[`Storyshots Core/Tooltips Standard 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #1AC135;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #1AC135;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #1AC135;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c11 {
  color: white;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: hsl(129.7,76.3%,34.4%);
  border-color: hsl(129.7,76.3%,34.4%);
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c13 {
  color: white;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c15 {
  color: #2A506F;
  border-color: #2A506F;
}

.c15 svg {
  color: #527699 !important;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on top
    </button>
    <button
      className="c8 c5 c9 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on right
    </button>
    <button
      className="c10 c5 c11 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on bottom
    </button>
    <button
      className="c12 c5 c13 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on left
    </button>
    <button
      className="c14 c5 c15 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tooltip on disabled button
    </button>
  </div>
</div>
`;

exports[`Storyshots Core/Tooltips Styled tooltips 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Styled tooltip container
    </button>
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Styled tooltip arrow
    </button>
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Styled tooltip inner
    </button>
  </div>
</div>
`;

exports[`Storyshots Core/Tooltips Supported Elements 1`] = `
.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c22 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c22:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c22:focus > circle,
.c22:focus > ellipse,
.c22:focus > line,
.c22:focus > path,
.c22:focus > polygon,
.c22:focus > polyline,
.c22:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c22:focus::-moz-focus-inner {
  border: 0;
}

.c25 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c25:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c25:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c25:focus > circle,
.c25:focus > ellipse,
.c25:focus > line,
.c25:focus > path,
.c25:focus > polygon,
.c25:focus > polyline,
.c25:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c25:focus::-moz-focus-inner {
  border: 0;
}

.c28 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c28:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c28:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c28:focus > circle,
.c28:focus > ellipse,
.c28:focus > line,
.c28:focus > path,
.c28:focus > polygon,
.c28:focus > polyline,
.c28:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c28:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c10 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  margin: 16px;
}

.c6 {
  color: #FCA321;
}

.c11 {
  color: #ad6800;
}

.c31 {
  background-color: red;
}

.c19 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c19 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c19:disabled {
  cursor: not-allowed;
}

.c26 {
  color: white;
}

.c26:hover:enabled,
.c26:focus:enabled,
.c26:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c26:hover:enabled svg,
.c26:focus:enabled svg,
.c26:active:enabled svg {
  color: white !important;
}

.c20 {
  color: #2A506F;
  border-color: #2A506F;
}

.c20 svg {
  color: #527699 !important;
}

.c20:hover:enabled,
.c20:focus:enabled,
.c20:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c20:hover:enabled svg,
.c20:focus:enabled svg,
.c20:active:enabled svg {
  color: white !important;
}

.c21 {
  margin-bottom: 8px;
  margin-right: 8px;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #FCA321;
}

.c12 {
  font-weight: 600;
}

.c9 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FCA321;
}

.c13 {
  margin-right: 4px;
}

.c14 {
  color: #2A506F;
}

.c16 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #007171;
  background-color: #C7FFFF;
}

.c17 {
  display: inline-block;
  border-radius: 1em;
  line-height: 1;
}

.c4 {
  font-weight: normal;
}

.c32 {
  margin: 0;
  font-size: 34px;
}

.c5 {
  margin: 0;
  font-size: 24px;
}

.c15 {
  margin: 0;
  margin-top: 30px;
  font-size: 24px;
}

.c30 {
  position: fixed;
  top: auto;
  right: 30px;
  bottom: auto;
  left: auto;
  z-index: 0;
  background: none;
}

.c29 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c27 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c23 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c23 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c24 {
  margin-left: 8px;
  margin-right: 8px;
}

.c33 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c33:active,
.c33:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c34 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <h3
      className="c4 c5"
    >
      Alert
    </h3>
    <div
      className="c2 c6 c7 c8 "
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <div
        className="c9"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-exclamation-triangle fa-w-18 "
          data-icon="exclamation-triangle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 576 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c10 c11"
      >
        <span
          className="c12 c13"
        >
          Warning!
        </span>
        <span
          className="c14"
        >
          Lorem ipsum dolor sit amet.
        </span>
      </div>
    </div>
    <h3
      className="c4 c15"
    >
      Badge
    </h3>
    <span
      className="c16 c17 "
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      Lorem
    </span>
    <h3
      className="c4 c15"
    >
      Box
    </h3>
    <div
      className="c2 "
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      Lorem ipsum dolor sit amet.
    </div>
    <h3
      className="c4 c15"
    >
      Button
    </h3>
    <button
      className="c18 c19 c20 c21"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Lorem ipsum
    </button>
    <button
      className="c18 c19 c20 c21"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Lorem ipsum
    </button>
    <button
      className="c22 c19 c20 c21"
      disabled={true}
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Lorem ipsum
    </button>
    <button
      className="c22 c19 c20 c21"
      disabled={true}
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      <div
        className=""
      >
        Lorem ipsum
      </div>
    </button>
    <h3
      className="c4 c15"
    >
      DropDownButton
    </h3>
    <div
      className="c2 c23 c24"
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <span>
        <button
          className="c25 c19 c26 c27"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c28 c19 c26 c29"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c30 "
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      <h3
        className="c4 c15"
      >
        Fixed
      </h3>
    </div>
    <h3
      className="c4 c15"
    >
      Flex
    </h3>
    <div
      className="c2 c31 c7"
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      style={
        Object {
          "height": 30,
        }
      }
    />
    <h3
      className="c4 c15"
    >
      Heading
    </h3>
    <h2
      className="c4 c32"
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      Hello world!
    </h2>
    <h3
      className="c4 c15"
    >
      Link
    </h3>
    <a
      className="c33 c34"
      color="primary.main"
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      Lorem ipsum dolor sit amet
    </a>
    <h3
      className="c4 c15"
    >
      Txt
    </h3>
    <div
      className=""
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
    >
      Lorem ipsum dolor sit amet
    </div>
  </div>
</div>
`;

exports[`Storyshots Extra/JsonSchemaRenderer Simple 1`] = `
.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: solid 1px #DDE1f0;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 20px;
  width: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  cursor: pointer;
}

.c10:hover input:not([disabled]) + div,
.c10:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c13 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c13:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c12 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin-bottom: 4px;
  min-width: 0;
  min-height: 0;
}

.c6 {
  margin-right: 8px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c7 {
  font-weight: 600;
}

.c8 {
  font-size: 85%;
  color: #527699;
}

.c9 > label > div > div,
.c9 > label > div > span {
  background-color: white;
}

.c9 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c9 label[disabled] {
  opacity: 0.4;
}

.c9 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c9 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c5 {
  padding: 8px;
}

@media only screen and (max-width:768px) {
  .c14 {
    border: solid 1px #DDE1f0;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4 c5"
  >
    <div
      className="c2 c6"
    >
      <div
        className="c7 "
      >
        Field Title
      </div>
      <div
        className="c8"
      >
        Field description
      </div>
    </div>
    <div
      className="c2 c3 c4 "
    >
      <div
        className="c2 c6"
      >
        <div
          className="c7 "
        >
          A String Field
        </div>
      </div>
      <div
        className=""
      >
        The string value
      </div>
    </div>
    <div
      className="c2 c3 c4 "
    >
      <div
        className="c2 c6"
      >
        <div
          className="c7 "
        >
          A Number Field
        </div>
      </div>
      <div
        className=""
      >
        12.345
      </div>
    </div>
    <div
      className="c2 c3 c4 "
    >
      <div
        className="c2 c6"
      >
        <div
          className="c7 "
        >
          An Integer Field
        </div>
      </div>
      <div
        className=""
      >
        5000
      </div>
    </div>
    <div
      className="c2 c3 c4 "
    >
      <div
        className="c2 c6"
      >
        <div
          className="c7 "
        >
          A Boolean Field
        </div>
      </div>
      <div
        className="c9 "
      >
        <label
          checked={false}
          className="c10"
          onClick={[Function]}
        >
          <div
            checked={false}
            className="c11 c12"
          >
            <input
              checked={false}
              className="c13"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="checkbox"
            />
            <div
              checked={false}
              className="c14 "
            />
          </div>
        </label>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Extra/Markdown Customized 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c9 {
  width: 100%;
}

.c10 {
  font-size: 14px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c7 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c12 {
  font-weight: normal;
}

.c13 {
  margin: 0;
  font-size: 58px;
}

.c8 {
  padding: 24px;
}

.c11 * {
  box-sizing: border-box;
}

.c11 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c11 pre {
  background-color: #f4f4f4;
}

.c11 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c11 code,
.c11 kbd,
.c11 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c11 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c11 dl {
  padding: 0;
}

.c11 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c11 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c11 td,
.c11 th {
  padding: 0;
}

.c11 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c11 table th {
  font-weight: 600;
}

.c11 table th,
.c11 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c11 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c11 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c11 blockquote {
  margin: 0;
}

.c11 blockquote,
.c11 dl,
.c11 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c11 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c11 blockquote > :first-child {
  margin-top: 0;
}

.c11 blockquote > :last-child {
  margin-bottom: 0;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  overflow-x: auto;
  max-width: 100%;
}

.c5 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c5 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] {
  display: table-row-group;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c5 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c5 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c5 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          data-display="table-head"
        >
          <div
            data-display="table-row"
          >
            <div
              data-display="table-cell"
            >
              Specific Sanitizer Options
            </div>
            <div
              data-display="table-cell"
            >
              Original
            </div>
            <div
              data-display="table-cell"
            >
              Customized
            </div>
          </div>
        </div>
        <div
          data-display="table-body"
        >
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <pre>
                {
  "tagNames": [
    "p"
  ]
}
              </pre>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <div
                className="c2 c6 c7 c8 "
              >
                <div
                  className="c2 c9"
                >
                  <div
                    className="c2 c10"
                  >
                    <div
                      className="c11"
                    >
                      <div>
                        <h1
                          className="c12 c13"
                        >
                          A title
                        </h1>
                        <img
                          src="https://via.placeholder.com/150"
                        />
                        <p
                          className=""
                        >
                          A paragraph
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </a>
            <a
              data-display="table-cell"
              data-key={0}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <div
                className="c2 c6 c7 c8 "
              >
                <div
                  className="c2 c9"
                >
                  <div
                    className="c2 c10"
                  >
                    <div
                      className="c11"
                    >
                      <div>
                        A title
                        <p
                          className=""
                        >
                          A paragraph
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <pre>
                {
  "tagNames": [
    "img"
  ],
  "attributes": {
    "*": [
      "src"
    ]
  }
}
              </pre>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <div
                className="c2 c6 c7 c8 "
              >
                <div
                  className="c2 c9"
                >
                  <div
                    className="c2 c10"
                  >
                    <div
                      className="c11"
                    >
                      <div>
                        <h1
                          className="c12 c13"
                        >
                          A title
                        </h1>
                        <img
                          src="https://via.placeholder.com/150"
                        />
                        <p
                          className=""
                        >
                          A paragraph
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </a>
            <a
              data-display="table-cell"
              data-key={1}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <div
                className="c2 c6 c7 c8 "
              >
                <div
                  className="c2 c9"
                >
                  <div
                    className="c2 c10"
                  >
                    <div
                      className="c11"
                    >
                      <div>
                        A title
                        <img
                          src="https://via.placeholder.com/150"
                        />
                        A paragraph
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </a>
          </div>
          <div
            className=""
            data-display="table-row"
            data-highlight={false}
          >
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <pre>
                {
  "tagNames": [
    "h1"
  ]
}
              </pre>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <div
                className="c2 c6 c7 c8 "
              >
                <div
                  className="c2 c9"
                >
                  <div
                    className="c2 c10"
                  >
                    <div
                      className="c11"
                    >
                      <div>
                        <h1
                          className="c12 c13"
                        >
                          A title
                        </h1>
                        <img
                          src="https://via.placeholder.com/150"
                        />
                        <p
                          className=""
                        >
                          A paragraph
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </a>
            <a
              data-display="table-cell"
              data-key={2}
              onClick={[Function]}
              style={
                Object {
                  "verticalAlign": "top",
                }
              }
            >
              <div
                className="c2 c6 c7 c8 "
              >
                <div
                  className="c2 c9"
                >
                  <div
                    className="c2 c10"
                  >
                    <div
                      className="c11"
                    >
                      <div>
                        <h1
                          className="c12 c13"
                        >
                          A title
                        </h1>
                        A paragraph
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Extra/Markdown Decorators 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c5:active,
.c5:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c6 {
  color: #00AEEF;
}

.c4 * {
  box-sizing: border-box;
}

.c4 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c4 pre {
  background-color: #f4f4f4;
}

.c4 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c4 code,
.c4 kbd,
.c4 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c4 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c4 dl {
  padding: 0;
}

.c4 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c4 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c4 td,
.c4 th {
  padding: 0;
}

.c4 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c4 table th {
  font-weight: 600;
}

.c4 table th,
.c4 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c4 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c4 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c4 blockquote {
  margin: 0;
}

.c4 blockquote,
.c4 dl,
.c4 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c4 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c4 blockquote > :first-child {
  margin-top: 0;
}

.c4 blockquote > :last-child {
  margin-bottom: 0;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div>
        <p
          className=""
        >
          <span>
            
            <span
              style={
                Object {
                  "color": "green",
                }
              }
            >
              @good
            </span>
             foo @bad@bad 
          </span>
          <a
            className="c5 c6"
            color="primary.main"
            href="https://github.com"
          >
            <span>
              
              <span
                style={
                  Object {
                    "color": "green",
                  }
                }
              >
                @good
              </span>
            </span>
          </a>
           bar@bad baz qux. 
          <code>
            Is @bad inside code
          </code>
          <span>
             
            <span
              style={
                Object {
                  "color": "green",
                }
              }
            >
              @good
            </span>
          </span>
        </p>
        

        <p
          className=""
        >
          <span>
            
            <span
              style={
                Object {
                  "color": "green",
                }
              }
            >
              @good
            </span>
          </span>
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Extra/Markdown Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: normal;
}

.c8 {
  font-weight: normal;
  font-weight: 600;
}

.c6 {
  margin: 0;
  font-size: 58px;
}

.c7 {
  margin: 0;
  font-size: 34px;
}

.c10 {
  margin: 0;
  font-size: 24px;
}

.c9 {
  margin: 0;
  font-size: 14px;
}

.c11 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c11:active,
.c11:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c12 {
  color: #00AEEF;
}

.c4 * {
  box-sizing: border-box;
}

.c4 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c4 pre {
  background-color: #f4f4f4;
}

.c4 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c4 code,
.c4 kbd,
.c4 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c4 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c4 dl {
  padding: 0;
}

.c4 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c4 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c4 td,
.c4 th {
  padding: 0;
}

.c4 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c4 table th {
  font-weight: 600;
}

.c4 table th,
.c4 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c4 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c4 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c4 blockquote {
  margin: 0;
}

.c4 blockquote,
.c4 dl,
.c4 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c4 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c4 blockquote > :first-child {
  margin-top: 0;
}

.c4 blockquote > :last-child {
  margin-bottom: 0;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div>
        <h1
          className="c5 c6"
        >
          Markdown
        </h1>
        

        <p
          className=""
        >
          A simple component for rendering 
          <em>
            GitHub flavored markdown
          </em>
          .
        </p>
        

        <h2
          className="c5 c7"
        >
          Headers
        </h2>
        

        <h1
          className="c5 c6"
        >
          This is an 
          <code>
            &lt;h1&gt;
          </code>
           tag
        </h1>
        

        <h2
          className="c5 c7"
        >
          This is an 
          <code>
            &lt;h2&gt;
          </code>
           tag
        </h2>
        

        <h6
          className="c8 c9"
        >
          This is an 
          <code>
            &lt;h6&gt;
          </code>
           tag
        </h6>
        

        <h2
          className="c5 c7"
        >
          Emphasis
        </h2>
        

        <p
          className=""
        >
          <em>
            This text will be italic
          </em>
          

          <em>
            This will also be italic
          </em>
        </p>
        

        <p
          className=""
        >
          <strong>
            This text will be bold
          </strong>
          

          <strong>
            This will also be bold
          </strong>
        </p>
        

        <p
          className=""
        >
          <em>
            You 
            <strong>
              can
            </strong>
             combine them
          </em>
        </p>
        

        <h2
          className="c5 c7"
        >
          Lists
        </h2>
        

        <h3
          className="c5 c10"
        >
          Unordered
        </h3>
        

        <ul>
          

          <li>
            Item 1
          </li>
          

          <li>
            Item 2

            <ul>
              

              <li>
                Item 2a
              </li>
              

              <li>
                Item 2b
              </li>
              

            </ul>
            

          </li>
          

        </ul>
        

        <h3
          className="c5 c10"
        >
          Ordered
        </h3>
        

        <ol>
          

          <li>
            Item 1
          </li>
          

          <li>
            Item 2
          </li>
          

          <li>
            Item 3

            <ol>
              

              <li>
                Item 3a
              </li>
              

              <li>
                Item 3b
              </li>
              

            </ol>
            

          </li>
          

        </ol>
        

        <h2
          className="c5 c7"
        >
          Images
        </h2>
        

        <p
          className=""
        >
          <img
            alt="Example Image"
            src=""
          />
        </p>
        

        <h2
          className="c5 c7"
        >
          Links
        </h2>
        

        <p
          className=""
        >
          <a
            className="c11 c12"
            color="primary.main"
            href="http://github.com"
          >
            http://github.com
          </a>
           - automatic!
        </p>
        

        <p
          className=""
        >
          <a
            className="c11 c12"
            color="primary.main"
            href="http://github.com"
          >
            GitHub
          </a>
        </p>
        

        <h2
          className="c5 c7"
        >
          Blockquotes
        </h2>
        

        <p
          className=""
        >
          As Ash Ketchum said:
        </p>
        

        <blockquote>
          

          <p
            className=""
          >
            Do you always need a reason to help somebody?
          </p>
          

        </blockquote>
        

        <h2
          className="c5 c7"
        >
          Inline code
        </h2>
        

        <p
          className=""
        >
          I think you should use an

          <code>
            &lt;addr&gt;
          </code>
           element here instead.
        </p>
        

        <h2
          className="c5 c7"
        >
          Code blocks
        </h2>
        

        <pre>
          <code>
            // This is plaintext with a very long line that won't wrap but should cause a horizontal scrollbar to appear so that the code block doesn't overflow it's container and make a mockery of your website. It really needs to be a very long line to ensure it forces the scrollbar to appear on the React Storybook display, especially on large monitor resolutions which can display a super-wide code block!
const foo = () =&gt; {
  return 'bar'
}

          </code>
        </pre>
        

        <pre
          className="language-javascript"
        >
          <code
            className="language-javascript"
          >
            <span
              className="token comment"
            >
              // This is javascript
            </span>
            

            <span
              className="token keyword"
            >
              const
            </span>
             
            <span
              className="token function-variable function"
            >
              foo
            </span>
             
            <span
              className="token operator"
            >
              =
            </span>
             
            <span
              className="token punctuation"
            >
              (
            </span>
            <span
              className="token punctuation"
            >
              )
            </span>
             
            <span
              className="token arrow operator"
            >
              =&gt;
            </span>
             
            <span
              className="token punctuation"
            >
              {
            </span>
            
  
            <span
              className="token keyword control-flow"
            >
              return
            </span>
             
            <span
              className="token string"
            >
              'bar'
            </span>
            

            <span
              className="token punctuation"
            >
              }
            </span>
            

          </code>
        </pre>
        

        <h2
          className="c5 c7"
        >
          Task Lists
        </h2>
        

        <ul
          className="contains-task-list"
        >
          

          <li
            className="task-list-item"
          >
            <input
              checked={true}
              disabled={true}
              type="checkbox"
            />
             list syntax required (any unordered or ordered list supported)
          </li>
          

          <li
            className="task-list-item"
          >
            <input
              checked={true}
              disabled={true}
              type="checkbox"
            />
             this is a complete item
          </li>
          

          <li
            className="task-list-item"
          >
            <input
              disabled={true}
              type="checkbox"
            />
             this is an incomplete item
          </li>
          

        </ul>
        

        <h2
          className="c5 c7"
        >
          Tables
        </h2>
        


















        <table>
          <thead>
            <tr>
              <th>
                First Header
              </th>
              <th>
                Second Header
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                Content from cell 1
              </td>
              <td>
                Content from cell 2
              </td>
            </tr>
            <tr>
              <td>
                Content in the first column
              </td>
              <td>
                Content in the second column
              </td>
            </tr>
          </tbody>
        </table>
        

        <h2
          className="c5 c7"
        >
          Strikethrough
        </h2>
        

        <p
          className=""
        >
          <del>
            Crossed out
          </del>
        </p>
        

        <p
          className=""
        >
          Any word wrapped with two tildes (like 
          <code>
            ~~this~~
          </code>
          ) will appear crossed out.
        </p>
        

        <h2
          className="c5 c7"
        >
          Inline HTML
        </h2>
        

        <p
          className=""
        >
          <strong>
            An image:
          </strong>
          

          <br />
          

          <img
            src=""
          />
          

          <br />
          

          <em>
            A link:
          </em>
          

          <a
            className="c11 c12"
            color="primary.main"
            href="http://github.com/"
          >
            http://github.com/
          </a>
        </p>
        

        <h2
          className="c5 c7"
        >
          Keyboard keys
        </h2>
        

        <p
          className=""
        >
          <kbd>
            cmd
          </kbd>
           + 
          <kbd>
            alt
          </kbd>
           + 
          <kbd>
            shift
          </kbd>
           + 
          <kbd>
            a
          </kbd>
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Extra/Mermaid Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 "
    >
      <div />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Accordion Standard 1`] = `
.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  border-bottom: solid 1px rgba(0,0,0,0.33);
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  -webkit-transition: max-height 200ms,opacity 200ms;
  transition: max-height 200ms,opacity 200ms;
  opacity: 0;
  overflow: hidden;
  max-height: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c8 {
  padding-left: 16px;
  padding-right: 16px;
}

.c12 {
  padding-right: 16px;
}

.c16 {
  margin-top: 10px;
  margin-bottom: 24px;
  padding-left: 16px;
  padding-right: 16px;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c10 {
  font-weight: 600;
}

.c11 {
  margin-top: 24px;
  margin-bottom: 24px;
  font-size: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c14 {
    border-bottom: solid 1px rgba(0,0,0,0.33);
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
      role="tablist"
    >
      <div
        className="c5"
      >
        <button
          aria-expanded={false}
          aria-selected={false}
          className="c6"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c2 c7"
          >
            <div
              className="c2 c8 c9"
            >
              <div
                className="c10 c11"
              >
                Heading one
              </div>
            </div>
            <div
              className="c2 c12 c13"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-plus fa-w-14 "
                color="#c6c8c9"
                data-icon="plus"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 448 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </button>
        <div
          className="c14"
        >
          <div
            aria-hidden={true}
            className="c4 c15"
            open={false}
          >
            <div
              className="c2 c16"
            >
              First Panel
            </div>
          </div>
        </div>
      </div>
      <div
        className="c5"
      >
        <button
          aria-expanded={false}
          aria-selected={false}
          className="c6"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c2 c7"
          >
            <div
              className="c2 c8 c9"
            >
              <div
                className="c10 c11"
              >
                Second Heading
              </div>
            </div>
            <div
              className="c2 c12 c13"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-plus fa-w-14 "
                color="#c6c8c9"
                data-icon="plus"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 448 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
        </button>
        <div
          className="c14"
        >
          <div
            aria-hidden={true}
            className="c4 c15"
            open={false}
          >
            <div
              className="c2 c16"
            >
              Second Panel
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Alert Emphasized 1`] = `
.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c9 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  margin: 16px;
}

.c4 {
  color: #1AC135;
}

.c10 {
  color: #138b27;
}

.c19 {
  color: #FF423D;
}

.c22 {
  color: #eb0800;
}

.c25 {
  color: #FCA321;
}

.c28 {
  color: #ad6800;
}

.c31 {
  color: #1496E1;
}

.c34 {
  color: #107dbc;
}

.c15 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c15 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c15:disabled {
  cursor: not-allowed;
}

.c16 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c17 {
  color: #138b27;
}

.c24 {
  color: #eb0800;
}

.c30 {
  color: #ad6800;
}

.c36 {
  color: #107dbc;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #1AC135;
  background-color: #e8f8ea;
  color: #138b27;
}

.c20 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #FF423D;
  background-color: #feebeb;
  color: #eb0800;
}

.c26 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #FCA321;
  background-color: #fef3e5;
  color: #ad6800;
}

.c32 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #1496E1;
  background-color: #e8f5fc;
  color: #107dbc;
}

.c18 {
  position: absolute;
  font-size: 14px;
  padding: 8px;
  top: 26.5px;
  right: 8px;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
}

.c18 svg {
  height: 14px;
  width: 14px;
}

.c11 {
  font-weight: 600;
}

.c8 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #1AC135;
}

.c21 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FF423D;
}

.c27 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FCA321;
}

.c33 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #1496E1;
}

.c12 {
  margin-right: 4px;
}

.c13 {
  color: #138b27;
}

.c23 {
  color: #eb0800;
}

.c29 {
  color: #ad6800;
}

.c35 {
  color: #107dbc;
}

.c7 {
  margin-top: 8px;
  margin-bottom: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5 c6 c7"
    >
      <div
        className="c8"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-check-circle fa-w-16 "
          data-icon="check-circle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c10"
      >
        <span
          className="c11 c12"
        >
          Success!
        </span>
        <span
          className="c13"
        >
          This is a success message
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c17 c18"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c19 c5 c20 c7"
    >
      <div
        className="c21"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-ban fa-w-16 "
          data-icon="ban"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c22"
      >
        <span
          className="c11 c12"
        >
          Danger!
        </span>
        <span
          className="c23"
        >
          This is an alert message
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c24 c18"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c25 c5 c26 c7"
    >
      <div
        className="c27"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-exclamation-triangle fa-w-18 "
          data-icon="exclamation-triangle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 576 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c28"
      >
        <span
          className="c11 c12"
        >
          Warning!
        </span>
        <span
          className="c29"
        >
          This is an alert message
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c30 c18"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c31 c5 c32 c7"
    >
      <div
        className="c33"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-lightbulb fa-w-11 "
          data-icon="lightbulb"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c34"
      >
        <span
          className="c11 c12"
        >
          Note!
        </span>
        <span
          className="c35"
        >
          This is a general balena announcement
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c36 c18"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c31 c5 c32 c7"
    >
      <div
        className="c33"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-lightbulb fa-w-11 "
          data-icon="lightbulb"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c34"
      >
        <span
          className="c11 c12"
        >
          Note!
        </span>
        <span
          className="c35"
        >
          This is an a multi line text: Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. This is an a multi line text: Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. This is an a multi line text: Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c36 c18"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Alert Plaintext 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #1AC135;
}

.c8 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #1496E1;
}

.c10 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FF423D;
}

.c12 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FCA321;
}

.c7 {
  color: #138b27;
}

.c9 {
  color: #107dbc;
}

.c11 {
  color: #eb0800;
}

.c13 {
  color: #ad6800;
}

.c5 {
  margin-top: 8px;
  margin-bottom: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <div
        className="c6"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-check-circle fa-w-16 "
          data-icon="check-circle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <span
        className="c7"
      >
        It's a success
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c8"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-lightbulb fa-w-11 "
          data-icon="lightbulb"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <span
        className="c9"
      >
        General text goes here
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c10"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-ban fa-w-16 "
          data-icon="ban"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <span
        className="c11"
      >
        There was an error
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c12"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-exclamation-triangle fa-w-18 "
          data-icon="exclamation-triangle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 576 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <span
        className="c13"
      >
        Warning text
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c6"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-check-circle fa-w-16 "
          data-icon="check-circle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <span
        className="c7"
      >
        <span>
          This is inline.
        </span>
        <span>
           As well as this.
        </span>
        <div>
          This is not
        </div>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Alert Standard 1`] = `
.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c9 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  margin: 16px;
}

.c4 {
  color: #1AC135;
}

.c10 {
  color: #138b27;
}

.c18 {
  color: #FF423D;
}

.c21 {
  color: #eb0800;
}

.c22 {
  color: #FCA321;
}

.c25 {
  color: #ad6800;
}

.c26 {
  color: #1496E1;
}

.c29 {
  color: #107dbc;
}

.c15 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c15 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c15:disabled {
  cursor: not-allowed;
}

.c16 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #1AC135;
}

.c19 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #FF423D;
}

.c23 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #FCA321;
}

.c27 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #1496E1;
}

.c17 {
  position: absolute;
  font-size: 14px;
  padding: 8px;
  top: 26.5px;
  right: 8px;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
}

.c17 svg {
  height: 14px;
  width: 14px;
}

.c11 {
  font-weight: 600;
}

.c8 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #1AC135;
}

.c20 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FF423D;
}

.c24 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FCA321;
}

.c28 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #1496E1;
}

.c12 {
  margin-right: 4px;
}

.c13 {
  color: #2A506F;
}

.c7 {
  margin-top: 8px;
  margin-bottom: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5 c6 c7"
    >
      <div
        className="c8"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-check-circle fa-w-16 "
          data-icon="check-circle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c10"
      >
        <span
          className="c11 c12"
        >
          Success!
        </span>
        <span
          className="c13"
        >
          This is a success message
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c17"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c18 c5 c19 c7"
    >
      <div
        className="c20"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-ban fa-w-16 "
          data-icon="ban"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c21"
      >
        <span
          className="c11 c12"
        >
          Danger!
        </span>
        <span
          className="c13"
        >
          This is an alert message
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c17"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c22 c5 c23 c7"
    >
      <div
        className="c24"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-exclamation-triangle fa-w-18 "
          data-icon="exclamation-triangle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 576 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c25"
      >
        <span
          className="c11 c12"
        >
          Warning!
        </span>
        <span
          className="c13"
        >
          This is an alert message
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c17"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c26 c5 c27 c7"
    >
      <div
        className="c28"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-lightbulb fa-w-11 "
          data-icon="lightbulb"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c29"
      >
        <span
          className="c11 c12"
        >
          Note!
        </span>
        <span
          className="c13"
        >
          This is a general balena announcement
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c17"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c26 c5 c27 c7"
    >
      <div
        className="c28"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-lightbulb fa-w-11 "
          data-icon="lightbulb"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M96.06 454.35c.01 6.29 1.87 12.45 5.36 17.69l17.09 25.69a31.99 31.99 0 0 0 26.64 14.28h61.71a31.99 31.99 0 0 0 26.64-14.28l17.09-25.69a31.989 31.989 0 0 0 5.36-17.69l.04-38.35H96.01l.05 38.35zM0 176c0 44.37 16.45 84.85 43.56 115.78 16.52 18.85 42.36 58.23 52.21 91.45.04.26.07.52.11.78h160.24c.04-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45C335.55 260.85 352 220.37 352 176 352 78.61 272.91-.3 175.45 0 73.44.31 0 82.97 0 176zm176-80c-44.11 0-80 35.89-80 80 0 8.84-7.16 16-16 16s-16-7.16-16-16c0-61.76 50.24-112 112-112 8.84 0 16 7.16 16 16s-7.16 16-16 16z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c9 c29"
      >
        <span
          className="c11 c12"
        >
          Note!
        </span>
        <span
          className="c13"
        >
          This is an a multi line text: Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. This is an a multi line text: Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. This is an a multi line text: Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c14 c15 c16 c17"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Alert Variants 1`] = `
.c21 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c21:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus > circle,
.c21:focus > ellipse,
.c21:focus > line,
.c21:focus > path,
.c21:focus > polygon,
.c21:focus > polyline,
.c21:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c8 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  margin: 16px;
}

.c4 {
  color: #1AC135;
}

.c9 {
  color: #138b27;
}

.c14 {
  color: #FCA321;
}

.c17 {
  color: #ad6800;
}

.c22 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c22 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c22:disabled {
  cursor: not-allowed;
}

.c23 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c23:hover:enabled,
.c23:focus:enabled,
.c23:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c23:hover:enabled svg,
.c23:focus:enabled svg,
.c23:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #1AC135;
}

.c15 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #FCA321;
}

.c18 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: #FCA321;
}

.c24 {
  position: absolute;
  font-size: 14px;
  padding: 8px;
  top: 26.5px;
  right: 8px;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
}

.c24 svg {
  height: 14px;
  width: 14px;
}

.c12 {
  font-weight: 600;
}

.c11 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #1AC135;
}

.c16 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FCA321;
}

.c10 {
  color: #2A506F;
}

.c13 {
  margin-right: 4px;
}

.c7 {
  margin-top: 8px;
  margin-bottom: 8px;
}

.c19 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c19:active,
.c19:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c20 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5 c6 c7"
    >
      <div
        className="c8 c9"
      >
        <span
          className="c10"
        >
          Without a prefix
        </span>
      </div>
    </div>
    <div
      className="c2 c4 c5 c6 c7"
    >
      <div
        className="c11"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-check-circle fa-w-16 "
          data-icon="check-circle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c8 c9"
      >
        <span
          className="c12 c13"
        >
          Success!
        </span>
        <span
          className="c10"
        >
          Without dismiss
        </span>
      </div>
    </div>
    <div
      className="c2 c14 c5 c15 c7"
    >
      <div
        className="c16"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-exclamation-triangle fa-w-18 "
          data-icon="exclamation-triangle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 576 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <div
        className="c8 c17"
      >
        <span
          className="c12 c13"
        >
          Warning!
        </span>
        <span
          className="c10"
        >
          Custom prefix
        </span>
      </div>
    </div>
    <div
      className="c2 c14 c5 c18 c7"
    >
      <div
        className="c8 c17"
      >
        <span
          className="c12 c13"
        >
          Custom prefix!
        </span>
        <span
          className="c10"
        >
          With a link element 
          <a
            className="c19 c20"
            color="primary.main"
            href="test"
          >
            link
          </a>
        </span>
      </div>
      <button
        aria-label="Dismiss Alert"
        className="c21 c22 c23 c24"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        title="Dismiss Alert"
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Avatar Image url 1`] = `
.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #b7bed3;
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 24px;
  width: 24px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 100%;
  overflow: hidden;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: url(https://dashboard.balena-cloud.com/img/logo.svg) no-repeat center center;
  background-size: cover;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 24px;
  width: 24px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 100%;
  overflow: hidden;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  padding: 8px;
}

.c5 {
  padding: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 250px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  color: white;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
  >
    <div
      className="c2 c5 c6"
    >
      <div
        className="c7 StyledAvatar-sc-1suyamb-1"
      >
        <div
          className="c8"
        >
          TU
        </div>
      </div>
      <span>
        firstName and lastName with null src
      </span>
    </div>
    <div
      className="c2 c5 c6"
    >
      <div
        className="c9 StyledAvatar-sc-1suyamb-1"
      />
      
      <span>
        Image url
      </span>
    </div>
    <div
      className="c2 c5 c6"
    >
      
      <div
        className="c7 StyledAvatar-sc-1suyamb-1"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-user-circle fa-w-16 fa-2x "
          data-icon="user-circle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={
            Object {
              "background": "white",
              "color": "#b7bed3",
            }
          }
          viewBox="0 0 496 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 96c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88zm0 344c-58.7 0-111.3-26.6-146.5-68.2 18.8-35.4 55.6-59.8 98.5-59.8 2.4 0 4.8.4 7.1 1.1 13 4.2 26.6 6.9 40.9 6.9 14.3 0 28-2.7 40.9-6.9 2.3-.7 4.7-1.1 7.1-1.1 42.9 0 79.7 24.4 98.5 59.8C359.3 421.4 306.7 448 248 448z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <span>
        no props and no children
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Avatar Initials 1`] = `
.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #b7bed3;
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 24px;
  width: 24px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 100%;
  overflow: hidden;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #b7bed3;
  color: #444444;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 34px;
  width: 34px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 100%;
  overflow: hidden;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  padding: 8px;
}

.c5 {
  padding: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 250px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  color: white;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
  >
    <div
      className="c2 c5 c6"
    >
      <div
        className="c7 StyledAvatar-sc-1suyamb-1"
      >
        <div
          className="c8"
        >
          TU
        </div>
      </div>
      <span>
        Firstname and LastName : test user
      </span>
    </div>
    <div
      className="c2 c5 c6"
    >
      <div
        className="c9 StyledAvatar-sc-1suyamb-1"
      >
        <div
          className="c8"
        >
          T
        </div>
      </div>
      <span>
        Emphasized firstname only : test
      </span>
    </div>
    <div
      className="c2 c5 c6"
    >
      <div
        className="c7 StyledAvatar-sc-1suyamb-1"
      >
        <div
          className="c8"
        >
          U
        </div>
      </div>
      <span>
        lastName only : user
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Badge Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #007171;
  background-color: #C7FFFF;
}

.c7 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #1B6327;
  background-color: #BAECC2;
}

.c8 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #BB007E;
  background-color: #FFD4F1;
}

.c9 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #9D2C71;
  background-color: #F1CDE3;
}

.c10 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #0650E5;
  background-color: #D7E4FE;
}

.c11 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #BA0C00;
  background-color: #FFD5D2;
}

.c12 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #4A6625;
  background-color: #CAE1AC;
}

.c13 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #3C2DE7;
  background-color: #D6D3FA;
}

.c14 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #4A5054;
  background-color: #C3C7CA;
}

.c15 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #794F00;
  background-color: #FFDA93;
}

.c16 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #3B6748;
  background-color: #E1EEE5;
}

.c17 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #4E5C64;
  background-color: #DBE0E3;
}

.c18 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #695D01;
  background-color: #FEEC63;
}

.c19 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #BB1E86;
  background-color: #FBE6F4;
}

.c20 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #816300;
  background-color: #FFECAE;
}

.c21 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #9500CF;
  background-color: #F1CDFF;
}

.c22 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #006387;
  background-color: #C3EFFF;
}

.c23 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #8A1FEC;
  background-color: #F3E8FD;
}

.c24 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #406B01;
  background-color: #E0FEB4;
}

.c25 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #C91911;
  background-color: #FDE8E7;
}

.c26 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #027008;
  background-color: #CAFECD;
}

.c27 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #5B6312;
  background-color: #D7E46C;
}

.c28 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 12px;
  padding-right: 12px;
  font-size: 12px;
  color: #884B10;
  background-color: #F7D8BA;
}

.c5 {
  display: inline-block;
  border-radius: 1em;
  line-height: 1;
}

.c6 {
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <span
      className="c4 c5 c6"
    >
      Badge 0
    </span>
    <span
      className="c7 c5 c6"
    >
      Badge 1
    </span>
    <span
      className="c8 c5 c6"
    >
      Badge 2
    </span>
    <span
      className="c9 c5 c6"
    >
      Badge 3
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c10 c5 c6"
    >
      Badge 4
    </span>
    <span
      className="c11 c5 c6"
    >
      Badge 5
    </span>
    <span
      className="c12 c5 c6"
    >
      Badge 6
    </span>
    <span
      className="c13 c5 c6"
    >
      Badge 7
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c14 c5 c6"
    >
      Badge 8
    </span>
    <span
      className="c15 c5 c6"
    >
      Badge 9
    </span>
    <span
      className="c16 c5 c6"
    >
      Badge 10
    </span>
    <span
      className="c17 c5 c6"
    >
      Badge 11
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c18 c5 c6"
    >
      Badge 12
    </span>
    <span
      className="c19 c5 c6"
    >
      Badge 13
    </span>
    <span
      className="c20 c5 c6"
    >
      Badge 14
    </span>
    <span
      className="c21 c5 c6"
    >
      Badge 15
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c22 c5 c6"
    >
      Badge 16
    </span>
    <span
      className="c23 c5 c6"
    >
      Badge 17
    </span>
    <span
      className="c24 c5 c6"
    >
      Badge 18
    </span>
    <span
      className="c25 c5 c6"
    >
      Badge 19
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c26 c5 c6"
    >
      Badge 20
    </span>
    <span
      className="c27 c5 c6"
    >
      Badge 21
    </span>
    <span
      className="c28 c5 c6"
    >
      Badge 22
    </span>
  </div>
</div>
`;

exports[`Storyshots Next/Box Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  padding: 16px;
  color: white;
  background-color: #909090;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className=""
    >
      I'm in a Box!
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Button Active 1`] = `
.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c5:focus > circle,
.c5:focus > ellipse,
.c5:focus > line,
.c5:focus > path,
.c5:focus > polygon,
.c5:focus > polyline,
.c5:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c5:focus::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c9:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus > circle,
.c9:focus > ellipse,
.c9:focus > line,
.c9:focus > path,
.c9:focus > polygon,
.c9:focus > polyline,
.c9:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus::-moz-focus-inner {
  border: 0;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c11:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus > circle,
.c11:focus > ellipse,
.c11:focus > line,
.c11:focus > path,
.c11:focus > polygon,
.c11:focus > polyline,
.c11:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  background-color: rgba(221,225,240,1);
  color: inherit;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  margin-bottom: 8px;
}

.c6 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c6 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c6:disabled {
  cursor: not-allowed;
}

.c10 {
  color: white;
}

.c10:hover:enabled,
.c10:focus:enabled,
.c10:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c10:hover:enabled svg,
.c10:focus:enabled svg,
.c10:active:enabled svg {
  color: white !important;
}

.c17 {
  color: white;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: white !important;
}

.c7 {
  color: #2A506F;
  border-color: #2A506F;
}

.c7 svg {
  color: #527699 !important;
}

.c7:hover:enabled,
.c7:focus:enabled,
.c7:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c7:hover:enabled svg,
.c7:focus:enabled svg,
.c7:active:enabled svg {
  color: white !important;
}

.c19 {
  color: #2A506F;
  border-color: #00AEEF;
}

.c19 svg {
  color: #527699 !important;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: #00AEEF;
  border-color: #00AEEF;
  color: white;
  opacity: initial;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: white !important;
}

.c12 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c12:hover:enabled,
.c12:focus:enabled,
.c12:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c12:hover:enabled svg,
.c12:focus:enabled svg,
.c12:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c13 {
  border-bottom: 1px solid;
  background: none;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  color: #2A506F;
  background: none;
  box-shadow: 0px -1px 0 0px inset;
}

.c15 {
  border-bottom: 1px solid;
  background: none;
}

.c15 {
  color: #2A506F;
  background: none;
  box-shadow: 0px -1px 0 0px inset;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  color: #2A506F;
  background: none;
  box-shadow: 0px -1px 0 0px inset;
}

.c8 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <button
        className="c5 c6 c7 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Outline
      </button>
      <button
        className="c9 c6 c10 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Outline active
      </button>
    </div>
    <div
      className="c2 c4"
    >
      <button
        className="c11 c6 c12 c13 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Underline
      </button>
      <button
        className="c14 c6 c12 c15 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Underline active
      </button>
    </div>
    <div
      className="c2 c4"
    >
      <button
        className="c5 c6 c7 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Default
      </button>
      <button
        className="c9 c6 c10 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Default active
      </button>
    </div>
    <div
      className="c2 c4"
    >
      <button
        className="c16 c6 c17 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Primary
      </button>
      <button
        className="c18 c6 c19 c8"
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Primary active
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Button Confirmation 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #FF423D;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(1.5,100%,49.6%);
  border-color: hsl(1.5,100%,49.6%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 "
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Dangerous action
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/Button Disabled 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #1AC135;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #1AC135;
  color: #444444;
  border-radius: 20px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #FF423D;
  color: #f8f8f8;
  border-radius: 20px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c19 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c19:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus > circle,
.c19:focus > ellipse,
.c19:focus > line,
.c19:focus > path,
.c19:focus > polygon,
.c19:focus > polyline,
.c19:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c18 {
  background-color: lightgray;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c11 {
  color: white;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c13 {
  color: #2A506F;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c15 {
  color: white;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: hsl(129.7,76.3%,34.4%);
  border-color: hsl(129.7,76.3%,34.4%);
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c17 {
  color: white;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: hsl(1.5,100%,49.6%);
  border-color: hsl(1.5,100%,49.6%);
  color: white;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: white !important;
}

.c21 {
  color: #2A506F;
  border-color: #2A506F;
}

.c21 svg {
  color: #527699 !important;
}

.c21:hover:enabled,
.c21:focus:enabled,
.c21:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c21:hover:enabled svg,
.c21:focus:enabled svg,
.c21:active:enabled svg {
  color: white !important;
}

.c20 {
  color: #2A506F;
  border-color: #2A506F;
  background: white;
  border: none;
}

.c20:hover:enabled,
.c20:focus:enabled,
.c20:active:enabled {
  box-shadow: none;
  background: white;
  border-color: white;
  color: #2A506F;
  opacity: 0.9;
}

.c20:hover:enabled svg,
.c20:focus:enabled svg,
.c20:active:enabled svg {
  color: #2A506F !important;
}

.c20:disabled {
  opacity: 1;
  color: #c6c8c9;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Primary
    </button>
    <button
      className="c8 c5 c9 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Secondary
    </button>
    <button
      className="c10 c5 c11 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tertiary
    </button>
    <button
      className="c12 c5 c13 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Quartenary
    </button>
    <button
      className="c14 c5 c15 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Success
    </button>
    <button
      className="c16 c5 c17 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Danger
    </button>
    <div
      className="c2 c18"
      style={
        Object {
          "display": "inline-block",
        }
      }
    >
      <button
        className="c19 c5 c20 c7"
        disabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Light
      </button>
    </div>
    <button
      className="c19 c5 c21 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Default
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/Button Icon only 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c8:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: #2A506F;
  border-color: #2A506F;
}

.c9 svg {
  color: #527699 !important;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-expand fa-w-14 "
        color="#f8f8f8"
        data-icon="expand"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 448 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </button>
    <button
      className="c8 c5 c9 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-recycle fa-w-16 "
        data-icon="recycle"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 512 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/Button Link 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #1AC135;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #1AC135;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #1AC135;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #FF423D;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c20:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus > circle,
.c20:focus > ellipse,
.c20:focus > line,
.c20:focus > path,
.c20:focus > polygon,
.c20:focus > polyline,
.c20:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus::-moz-focus-inner {
  border: 0;
}

.c23 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c23:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus > circle,
.c23:focus > ellipse,
.c23:focus > line,
.c23:focus > path,
.c23:focus > polygon,
.c23:focus > polyline,
.c23:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c11 {
  color: white;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c13 {
  color: #2A506F;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c15 {
  color: white;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: hsl(129.7,76.3%,34.4%);
  border-color: hsl(129.7,76.3%,34.4%);
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c17 {
  color: white;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: hsl(1.5,100%,49.6%);
  border-color: hsl(1.5,100%,49.6%);
  color: white;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: white !important;
}

.c19 {
  color: #2A506F;
  border-color: #2A506F;
}

.c19 svg {
  color: #527699 !important;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: white !important;
}

.c21 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c21:hover:enabled,
.c21:focus:enabled,
.c21:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c21:hover:enabled svg,
.c21:focus:enabled svg,
.c21:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c24 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c24:hover:enabled,
.c24:focus:enabled,
.c24:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c24:hover:enabled svg,
.c24:focus:enabled svg,
.c24:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c22 {
  border-bottom: 1px solid;
  background: none;
}

.c22:hover:enabled,
.c22:focus:enabled,
.c22:active:enabled {
  color: #00AEEF;
  background: none;
  box-shadow: 0px -1px 0 0px inset;
}

.c25 {
  border-bottom: 1px solid;
  background: none;
}

.c25:hover:enabled,
.c25:focus:enabled,
.c25:active:enabled {
  color: #2A506F;
  background: none;
  box-shadow: 0px -1px 0 0px inset;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <a
      className="c4 c5 c6 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Primary
    </a>
    <a
      className="c8 c5 c9 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Secondary
    </a>
    <a
      className="c10 c5 c11 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Tertiary
    </a>
    <a
      className="c12 c5 c13 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Quartenary
    </a>
    <a
      className="c14 c5 c15 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Success
    </a>
    <a
      className="c16 c5 c17 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Danger
    </a>
    <a
      className="c18 c5 c19 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Default
    </a>
  </div>
  <div
    className="c2 c3"
  >
    <a
      className="c20 c5 c21 c22 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Link Button
    </a>
    <a
      className="c23 c5 c24 c25 c7"
      href="#"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      Link Button
    </a>
  </div>
</div>
`;

exports[`Storyshots Next/Button Outline 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #1AC135;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #1AC135;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c18 {
  background-color: lightgray;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: #2A506F;
  border-color: #00AEEF;
}

.c6 svg {
  color: #527699 !important;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: #00AEEF;
  border-color: #00AEEF;
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: #2A506F;
  border-color: #2A506F;
}

.c9 svg {
  color: #527699 !important;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c11 {
  color: #2A506F;
  border-color: #527699;
}

.c11 svg {
  color: #527699 !important;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: #527699;
  border-color: #527699;
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c13 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c13 svg {
  color: #527699 !important;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: #2A506F !important;
}

.c15 {
  color: #2A506F;
  border-color: #1AC135;
}

.c15 svg {
  color: #527699 !important;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: #1AC135;
  border-color: #1AC135;
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c17 {
  color: #2A506F;
  border-color: #FF423D;
}

.c17 svg {
  color: #527699 !important;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: #FF423D;
  border-color: #FF423D;
  color: white;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: white !important;
}

.c19 {
  color: #2A506F;
  border-color: #2A506F;
  background: white;
  border: none;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: white;
  border-color: white;
  color: #2A506F;
  opacity: 0.9;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: #2A506F !important;
}

.c19:disabled {
  opacity: 1;
  color: #c6c8c9;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Primary
    </button>
    <button
      className="c8 c5 c9 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Secondary
    </button>
    <button
      className="c10 c5 c11 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tertiary
    </button>
    <button
      className="c12 c5 c13 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Quartenary
    </button>
    <button
      className="c14 c5 c15 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Success
    </button>
    <button
      className="c16 c5 c17 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Danger
    </button>
    <div
      className="c2 c18"
      style={
        Object {
          "display": "inline-block",
        }
      }
    >
      <button
        className="c8 c5 c19 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Light
      </button>
    </div>
    <button
      className="c8 c5 c9 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Default
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/Button Plain 1`] = `
.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c15 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #FF423D;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c11:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus > circle,
.c11:focus > ellipse,
.c11:focus > line,
.c11:focus > path,
.c11:focus > polygon,
.c11:focus > polyline,
.c11:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #FF423D;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c13:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus > circle,
.c13:focus > ellipse,
.c13:focus > line,
.c13:focus > path,
.c13:focus > polygon,
.c13:focus > polyline,
.c13:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c9 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c12 {
  color: #FF423D;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c12:hover:enabled,
.c12:focus:enabled,
.c12:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(1.5,100%,49.6%);
  opacity: initial;
}

.c12:hover:enabled svg,
.c12:focus:enabled svg,
.c12:active:enabled svg {
  color: hsl(1.5,100%,49.6%) !important;
}

.c7 {
  margin: 8px;
}

.c10 {
  margin: 8px;
  color: green;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Button
    </button>
    <button
      className="c8 c5 c9 c10"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Button
    </button>
    <button
      className="c11 c5 c12 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Button
    </button>
    <button
      className="c13 c5 c12 c7"
      disabled={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Button
    </button>
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      <div
        className="c14"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-spinner fa-w-16 "
          data-icon="spinner"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
        <div
          className="c15"
        />
        Button
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/Button Standard 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #1AC135;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #1AC135;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #1AC135;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #FF423D;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c19 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c19:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c19:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus > circle,
.c19:focus > ellipse,
.c19:focus > line,
.c19:focus > path,
.c19:focus > polygon,
.c19:focus > polyline,
.c19:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c18 {
  background-color: lightgray;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c11 {
  color: white;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c13 {
  color: #2A506F;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c15 {
  color: white;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: hsl(129.7,76.3%,34.4%);
  border-color: hsl(129.7,76.3%,34.4%);
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c17 {
  color: white;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: hsl(1.5,100%,49.6%);
  border-color: hsl(1.5,100%,49.6%);
  color: white;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: white !important;
}

.c21 {
  color: #2A506F;
  border-color: #2A506F;
}

.c21 svg {
  color: #527699 !important;
}

.c21:hover:enabled,
.c21:focus:enabled,
.c21:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c21:hover:enabled svg,
.c21:focus:enabled svg,
.c21:active:enabled svg {
  color: white !important;
}

.c20 {
  color: #2A506F;
  border-color: #2A506F;
  background: white;
  border: none;
}

.c20:hover:enabled,
.c20:focus:enabled,
.c20:active:enabled {
  box-shadow: none;
  background: white;
  border-color: white;
  color: #2A506F;
  opacity: 0.9;
}

.c20:hover:enabled svg,
.c20:focus:enabled svg,
.c20:active:enabled svg {
  color: #2A506F !important;
}

.c20:disabled {
  opacity: 1;
  color: #c6c8c9;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Primary
    </button>
    <button
      className="c8 c5 c9 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Secondary
    </button>
    <button
      className="c10 c5 c11 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Tertiary
    </button>
    <button
      className="c12 c5 c13 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Quartenary
    </button>
    <button
      className="c14 c5 c15 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Success
    </button>
    <button
      className="c16 c5 c17 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Danger
    </button>
    <div
      className="c2 c18"
      style={
        Object {
          "display": "inline-block",
        }
      }
    >
      <button
        className="c19 c5 c20 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Light
      </button>
    </div>
    <button
      className="c19 c5 c21 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Default
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/Button Underline 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus > circle,
.c9:focus > ellipse,
.c9:focus > line,
.c9:focus > path,
.c9:focus > polygon,
.c9:focus > polyline,
.c9:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c10 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c10:hover:enabled,
.c10:focus:enabled,
.c10:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c10:hover:enabled svg,
.c10:focus:enabled svg,
.c10:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c7 {
  border-bottom: 1px solid;
  background: none;
}

.c7:hover:enabled,
.c7:focus:enabled,
.c7:active:enabled {
  color: #00AEEF;
  background: none;
  box-shadow: 0px -1px 0 0px inset;
}

.c11 {
  border-bottom: 1px solid;
  background: none;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  color: #2A506F;
  background: none;
  box-shadow: 0px -1px 0 0px inset;
}

.c8 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7 c8"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Button
    </button>
    <button
      className="c9 c5 c10 c11 c8"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Button
    </button>
    <button
      className="c12 c5 c10 c11 c8"
      disabled={true}
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Underline disabled
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/Button Width 1`] = `
.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c11:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c11:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus > circle,
.c11:focus > ellipse,
.c11:focus > line,
.c11:focus > path,
.c11:focus > polygon,
.c11:focus > polyline,
.c11:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  width: 100%;
  height: 100%;
  max-width: none;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c12 {
  color: white;
}

.c12:hover:enabled,
.c12:focus:enabled,
.c12:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c12:hover:enabled svg,
.c12:focus:enabled svg,
.c12:active:enabled svg {
  color: white !important;
}

.c15 {
  color: #2A506F;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c17 {
  color: #2A506F;
  border-color: #2A506F;
}

.c17 svg {
  color: #527699 !important;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: white !important;
}

.c7 {
  margin: 8px;
  width: 120px;
}

.c10 {
  margin: 8px;
  width: 180px;
}

.c13 {
  margin: 8px;
  width: 240px;
}

.c18 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
      width={120}
    >
      Button
    </button>
    <button
      className="c8 c5 c9 c10"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
      width={180}
    >
      Button
    </button>
    <button
      className="c11 c5 c12 c13"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
      width={240}
    >
      Button
    </button>
    <button
      className="c14 c5 c15 c13"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
      width={240}
    >
      Button
    </button>
    <div
      style={
        Object {
          "width": 300,
        }
      }
    >
      <button
        className="c16 c5 c17 c18"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Button
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Button With icon 1`] = `
.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c9 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c4:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus > circle,
.c4:focus > ellipse,
.c4:focus > line,
.c4:focus > path,
.c4:focus > polygon,
.c4:focus > polyline,
.c4:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c4:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c5 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c5:disabled {
  cursor: not-allowed;
}

.c6 {
  color: white;
}

.c6:hover:enabled,
.c6:focus:enabled,
.c6:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c6:hover:enabled svg,
.c6:focus:enabled svg,
.c6:active:enabled svg {
  color: white !important;
}

.c11 {
  color: #2A506F;
  border-color: #2A506F;
}

.c11 svg {
  color: #527699 !important;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <button
      className="c4 c5 c6 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      <div
        className="c8"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-expand fa-w-14 "
          color="#f8f8f8"
          data-icon="expand"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
        <div
          className="c9"
        />
        Expand
      </div>
    </button>
    <button
      className="c10 c5 c11 c7"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      <div
        className="c8"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-recycle fa-w-16 "
          data-icon="recycle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
        <div
          className="c9"
        />
        Recycle
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots Next/ButtonGroup Standard 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c9 {
  margin-top: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  border-color: #2A506F;
}

.c8 svg {
  color: #527699 !important;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c5 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c5 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c5 > *:not(:last-child) {
  border-right: 0;
}

.c5 > *:not(:last-child):not(:first-child) {
  border-radius: 0;
}

.c5 > *:hover {
  z-index: 1;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <button
        className="c6 c7 c8 "
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        First
      </button>
      <button
        className="c6 c7 c8 "
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Second
      </button>
      <button
        className="c6 c7 c8 "
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        Third
      </button>
    </div>
    <div
      className="c2 c9 c4 c5"
    >
      <button
        className="c10 c7 c8 "
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-expand fa-w-14 fa-fw "
          data-icon="expand"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
      <button
        className="c10 c7 c8 "
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-recycle fa-w-16 fa-fw "
          data-icon="recycle"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
      <button
        className="c10 c7 c8 "
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-spinner fa-w-16 fa-fw "
          data-icon="spinner"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Card Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 8px;
}

.c9 {
  width: 100%;
}

.c10 {
  font-size: 14px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c7 {
  padding: 32px 44px;
}

.c11 {
  padding: 24px;
}

.c8 {
  margin: 8px;
  width: 350px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
  >
    <div
      className="c2 c5 c6 c7 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam scelerisque euismod risus at gravida. Pellentesque a nunc semper, ultrices lacus nec, mattis mauris
        </div>
      </div>
    </div>
    <div
      className="c2 c5 c6 c11 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam scelerisque euismod risus at gravida. Pellentesque a nunc semper, ultrices lacus nec, mattis mauris
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Card With Header 1`] = `
.c13 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c13:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c13:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus > circle,
.c13:focus > ellipse,
.c13:focus > line,
.c13:focus > path,
.c13:focus > polygon,
.c13:focus > polyline,
.c13:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 8px;
}

.c9 {
  width: 100%;
}

.c18 {
  font-size: 14px;
}

.c14 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c14 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c14:disabled {
  cursor: not-allowed;
}

.c15 {
  color: white;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c6 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c16 {
  border: 0 none;
  border-top: 1px solid #DDE1f0;
  width: 100%;
  height: 0;
}

.c17 {
  margin-top: 8px;
  margin-bottom: 8px;
}

.c11 {
  font-weight: normal;
  font-weight: 600;
}

.c12 {
  margin: 0;
  font-size: 18px;
}

.c7 {
  padding: 32px 44px;
}

.c19 {
  padding: 24px;
}

.c8 {
  margin: 8px;
  width: 350px;
}

.c20 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c20:active,
.c20:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c21 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
  >
    <div
      className="c2 c5 c6 c7 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          <h5
            className="c11 c12"
          >
            Card with Button
          </h5>
          <button
            className="c13 c14 c15 "
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            Update
          </button>
        </div>
        <hr
          className="c16 c17"
        />
        <div
          className="c2 c18"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam scelerisque euismod risus at gravida. Pellentesque a nunc semper, ultrices lacus nec, mattis mauris
        </div>
      </div>
    </div>
    <div
      className="c2 c5 c6 c19 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          <h5
            className="c11 c12"
          >
            Card with Button
          </h5>
          <button
            className="c13 c14 c15 "
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            Update
          </button>
        </div>
        <hr
          className="c16 c17"
        />
        <div
          className="c2 c18"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam scelerisque euismod risus at gravida. Pellentesque a nunc semper, ultrices lacus nec, mattis mauris
        </div>
      </div>
    </div>
    <div
      className="c2 c5 c6 c7 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          <h5
            className="c11 c12"
          >
            Card with Link
          </h5>
          <a
            className="c20 c21"
            color="primary.main"
            href="https://balena.io"
          >
            Link
          </a>
        </div>
        <hr
          className="c16 c17"
        />
        <div
          className="c2 c18"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam scelerisque euismod risus at gravida. Pellentesque a nunc semper, ultrices lacus nec, mattis mauris
        </div>
      </div>
    </div>
    <div
      className="c2 c5 c6 c19 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          <h5
            className="c11 c12"
          >
            Card with Link
          </h5>
          <a
            className="c20 c21"
            color="primary.main"
            href="https://balena.io"
          >
            Link
          </a>
        </div>
        <hr
          className="c16 c17"
        />
        <div
          className="c2 c18"
        >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam scelerisque euismod risus at gravida. Pellentesque a nunc semper, ultrices lacus nec, mattis mauris
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Card With rows 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 8px;
}

.c9 {
  width: 100%;
}

.c17 {
  font-size: 14px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c6 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c15 {
  border: 0 none;
  border-top: 1px solid #DDE1f0;
  width: 100%;
  height: 0;
}

.c16 {
  margin-top: 8px;
  margin-bottom: 8px;
}

.c11 {
  font-weight: normal;
  font-weight: 600;
}

.c12 {
  margin: 0;
  font-size: 18px;
}

.c7 {
  padding: 32px 44px;
}

.c20 {
  padding: 24px;
}

.c8 {
  margin: 8px;
  width: 350px;
}

.c13 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c13:active,
.c13:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c14 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c18 {
  display: inline-block;
  white-space: nowrap;
}

.c18 .text-with-copy__content {
  white-space: normal;
  word-wrap: break-word;
  margin-right: 4px;
}

.c18 > .text-with-copy__copy_wrapper {
  display: inline-block;
}

.c18 .text-with-copy__copy {
  cursor: pointer;
  visibility: visible;
}

.c18 code {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 2px;
  white-space: normal;
  word-wrap: break-word;
  font-size: 1em;
  margin-right: 4px;
  display: inline-block;
}

.c18:hover .text-with-copy__copy {
  visibility: visible;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
  >
    <div
      className="c2 c5 c6 c7 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          <h5
            className="c11 c12"
          >
            Title
          </h5>
          <a
            className="c13 c14"
            color="primary.main"
            href="https://balena.io"
          >
            Link
          </a>
        </div>
        <hr
          className="c15 c16"
        />
        <div
          className="c2 c17"
        >
          <div>
            Lorem Ipsum dolor si amet
          </div>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <a
            className="c13 c14"
            color="primary.main"
            href="www.balena.io"
          >
            Link
          </a>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <span
            className="c18 text-with-copy"
            title="This value has been copied to your clipboard!"
          >
            <span
              className="text-with-copy__content"
            >
              Row with Copy component
            </span>
            <span
              className="text-with-copy__copy_wrapper"
              onClick={[Function]}
            >
              <div
                className="c2 text-with-copy__copy"
                onClick={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-copy fa-w-14 "
                  data-icon="copy"
                  data-prefix="far"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 448 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </span>
          </span>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <div
            className="c2 c19"
          >
            <div>
              Row with
            </div>
            <div>
              Flex
            </div>
          </div>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <div>
            Lorem Ipsum dolor si amet
          </div>
        </div>
      </div>
    </div>
    <div
      className="c2 c5 c6 c20 c8"
    >
      <div
        className="c2 c9"
      >
        <div
          className="c2 c10"
        >
          <h5
            className="c11 c12"
          >
            Title
          </h5>
          <a
            className="c13 c14"
            color="primary.main"
            href="https://balena.io"
          >
            Link
          </a>
        </div>
        <hr
          className="c15 c16"
        />
        <div
          className="c2 c17"
        >
          <div>
            Lorem Ipsum dolor si amet
          </div>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <a
            className="c13 c14"
            color="primary.main"
            href="www.balena.io"
          >
            Link
          </a>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <span
            className="c18 text-with-copy"
            title="This value has been copied to your clipboard!"
          >
            <span
              className="text-with-copy__content"
            >
              Row with Copy component
            </span>
            <span
              className="text-with-copy__copy_wrapper"
              onClick={[Function]}
            >
              <div
                className="c2 text-with-copy__copy"
                onClick={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-copy fa-w-14 "
                  data-icon="copy"
                  data-prefix="far"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 448 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </span>
          </span>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <div
            className="c2 c19"
          >
            <div>
              Row with
            </div>
            <div>
              Flex
            </div>
          </div>
        </div>
        <div
          className="c2 c17"
        >
          <hr
            className="c15 "
          />
          <div>
            Lorem Ipsum dolor si amet
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Checkbox Standard 1`] = `
.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: solid 1px #DDE1f0;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 20px;
  width: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4px;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: solid 1px #00AEEF;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 20px;
  width: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4px;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-right: 12px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c18 {
  box-sizing: border-box;
  stroke-width: 2px;
  stroke: #00AEEF;
  width: 20px;
  height: 20px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  cursor: pointer;
}

.c10:hover input:not([disabled]) + div,
.c10:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c21 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  opacity: 0.5;
  cursor: default;
}

.c21:hover input:not([disabled]) + div,
.c21:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c13 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c13:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c22 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
}

.c22:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c12 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  margin-bottom: 16px;
}

.c8 {
  padding: 8px;
}

.c15 {
  padding: 8px;
  background-color: #c6c8c9;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-weight: normal;
  font-weight: 600;
}

.c5 {
  margin: 0;
  font-size: 14px;
}

.c9 > label > div > div,
.c9 > label > div > span {
  background-color: white;
}

.c9 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c9 label[disabled] {
  opacity: 0.4;
}

.c9 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c9 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c16 > label > div > div,
.c16 > label > div > span {
  background-color: white;
}

.c16 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c16 label input + div {
  border-color: #00AEEF;
  background: #00AEEF;
}

.c16 label input + div > svg {
  stroke: #fff;
}

.c16 label[disabled] {
  opacity: 0.4;
}

.c16 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c16 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c16 label:hover input:not([disabled]) + div {
  border-color: #009dd7 !important;
  background: #009dd7;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c14 {
    border: solid 1px #DDE1f0;
  }
}

@media only screen and (max-width:768px) {
  .c17 {
    border: solid 1px #00AEEF;
  }
}

@media only screen and (max-width:768px) {
  .c19 {
    margin-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c20 {
    margin-left: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <label>
      <h6
        className="c4 c5"
      >
        Default
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
              >
                <input
                  checked={false}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={false}
                  className="c14 "
                />
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c15"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
              >
                <input
                  checked={false}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={false}
                  className="c14 "
                />
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
    <label>
      <h6
        className="c4 c5"
      >
        Checked
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                >
                  <svg
                    checked={true}
                    className="c18"
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c15"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                >
                  <svg
                    checked={true}
                    className="c18"
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
    <label>
      <h6
        className="c4 c5"
      >
        With Label
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c19 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                >
                  <svg
                    checked={true}
                    className="c18"
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
              </div>
              <span>
                Checkbox Label
              </span>
            </label>
          </div>
        </div>
        <div
          className="c2 c15"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c19 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                >
                  <svg
                    checked={true}
                    className="c18"
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
              </div>
              <span>
                Checkbox Label
              </span>
            </label>
          </div>
        </div>
      </div>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <span>
                Checkbox Label
              </span>
              <div
                checked={true}
                className="c20 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                >
                  <svg
                    checked={true}
                    className="c18"
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c15"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <span>
                Checkbox Label
              </span>
              <div
                checked={true}
                className="c20 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                >
                  <svg
                    checked={true}
                    className="c18"
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
    <label>
      <h6
        className="c4 c5"
      >
        Disabled
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c21"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={false}
                  className="c22"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={false}
                  className="c14 "
                  disabled={true}
                />
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c15"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c21"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={false}
                  className="c22"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={false}
                  className="c14 "
                  disabled={true}
                />
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c8"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c21"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={true}
                  className="c22"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                  disabled={true}
                >
                  <svg
                    checked={true}
                    className="c18"
                    disabled={true}
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
                <input
                  type="hidden"
                  value="true"
                />
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c15"
        >
          <div
            className="c16 "
          >
            <label
              checked={true}
              className="c21"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={true}
                  className="c22"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <div
                  checked={true}
                  className="c17 "
                  disabled={true}
                >
                  <svg
                    checked={true}
                    className="c18"
                    disabled={true}
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M6,11.3 L10.3,16 L18,6.2"
                      fill="none"
                    />
                  </svg>
                </div>
                <input
                  type="hidden"
                  value="true"
                />
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
  </div>
</div>
`;

exports[`Storyshots Next/Checkbox Toggle 1`] = `
.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-right: 12px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  cursor: pointer;
}

.c10:hover input:not([disabled]) + div,
.c10:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  opacity: 0.5;
  cursor: default;
}

.c20:hover input:not([disabled]) + div,
.c20:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c13 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c13:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c21 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
}

.c21:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c14 {
  box-sizing: border-box;
  vertical-align: middle;
  display: inline-block;
  width: 40px;
  height: 20px;
  border: 1px solid;
  border-color: #DDE1f0;
  border-radius: 20px;
  background-color: transparent;
}

.c15 {
  box-sizing: border-box;
  position: relative;
  display: inherit;
  top: -1px;
  left: -1px;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  width: 20px;
  height: 20px;
  background: #DDE1f0;
  border-radius: 20px;
}

.c12 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  margin-bottom: 16px;
}

.c8 {
  padding: 8px;
}

.c16 {
  padding: 8px;
  background-color: #c6c8c9;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-weight: normal;
  font-weight: 600;
}

.c5 {
  margin: 0;
  font-size: 14px;
}

.c9 > label > div > div,
.c9 > label > div > span {
  background-color: white;
}

.c9 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c9 label[disabled] {
  opacity: 0.4;
}

.c9 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c9 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c17 > label > div > div,
.c17 > label > div > span {
  background-color: white;
}

.c17 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c17 label input + div {
  border-color: #00AEEF;
  background: #00AEEF;
}

.c17 label input + div > svg {
  stroke: #fff;
}

.c17 label[disabled] {
  opacity: 0.4;
}

.c17 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c17 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c17 label:hover input:not([disabled]) + div {
  border-color: #009dd7 !important;
  background: #009dd7;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c18 {
    margin-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c19 {
    margin-left: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <label>
      <h6
        className="c4 c5"
      >
        Default
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
              >
                <input
                  checked={false}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={false}
                  className="c14"
                >
                  <span
                    checked={false}
                    className="c15"
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c16"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
              >
                <input
                  checked={false}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={false}
                  className="c14"
                >
                  <span
                    checked={false}
                    className="c15"
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
    <label>
      <h6
        className="c4 c5"
      >
        Checked
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                >
                  <span
                    checked={true}
                    className="c15"
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c16"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                >
                  <span
                    checked={true}
                    className="c15"
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
    <label>
      <h6
        className="c4 c5"
      >
        With Label
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c18 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                >
                  <span
                    checked={true}
                    className="c15"
                  />
                </span>
              </div>
              <span>
                Toggle Label
              </span>
            </label>
          </div>
        </div>
        <div
          className="c2 c16"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c18 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                >
                  <span
                    checked={true}
                    className="c15"
                  />
                </span>
              </div>
              <span>
                Toggle Label
              </span>
            </label>
          </div>
        </div>
      </div>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <span>
                Toggle Label
              </span>
              <div
                checked={true}
                className="c19 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                >
                  <span
                    checked={true}
                    className="c15"
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c16"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c10"
              onClick={[Function]}
            >
              <span>
                Toggle Label
              </span>
              <div
                checked={true}
                className="c19 c12"
              >
                <input
                  checked={true}
                  className="c13"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                >
                  <span
                    checked={true}
                    className="c15"
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
    <label>
      <h6
        className="c4 c5"
      >
        Disabled
      </h6>
      <div
        className="c2 c6 c7"
      >
        <div
          className="c2 c8"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c20"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={false}
                  className="c21"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={false}
                  className="c14"
                  disabled={true}
                >
                  <span
                    checked={false}
                    className="c15"
                    disabled={true}
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c16"
        >
          <div
            className="c9 "
          >
            <label
              checked={false}
              className="c20"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={false}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={false}
                  className="c21"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={false}
                  className="c14"
                  disabled={true}
                >
                  <span
                    checked={false}
                    className="c15"
                    disabled={true}
                  />
                </span>
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c8"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c20"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={true}
                  className="c21"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                  disabled={true}
                >
                  <span
                    checked={true}
                    className="c15"
                    disabled={true}
                  />
                </span>
                <input
                  type="hidden"
                  value="true"
                />
              </div>
            </label>
          </div>
        </div>
        <div
          className="c2 c16"
        >
          <div
            className="c17 "
          >
            <label
              checked={true}
              className="c20"
              disabled={true}
              onClick={[Function]}
            >
              <div
                checked={true}
                className="c11 c12"
                disabled={true}
              >
                <input
                  checked={true}
                  className="c21"
                  disabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                />
                <span
                  checked={true}
                  className="c14"
                  disabled={true}
                >
                  <span
                    checked={true}
                    className="c15"
                    disabled={true}
                  />
                </span>
                <input
                  type="hidden"
                  value="true"
                />
              </div>
            </label>
          </div>
        </div>
      </div>
    </label>
  </div>
</div>
`;

exports[`Storyshots Next/Copy Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  margin-left: 8px;
  margin-right: 8px;
}

.c10 {
  margin-right: 16px;
}

.c12 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c14 {
  white-space: pre;
}

.c16 {
  font-weight: 600;
}

.c15 {
  font-size: 12px;
  color: #1496E1;
}

.c8 {
  cursor: pointer;
  font-size: 0.875em;
  line-height: 21px;
}

.c5 .c7 {
  display: none;
}

.c5:hover .c7 {
  display: inline;
}

.c17 .c7 {
  display: inline;
}

.c17:hover .c7 {
  display: inline;
}

.c13 {
  background-color: #e8f5fc;
  border: 1px solid #1496E1;
  border-radius: 2px;
  line-height: 1.5;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c18 {
  overflow-x: auto;
  max-width: 100%;
}

.c19 {
  display: table;
  width: 100%;
  border-spacing: 0;
  border-bottom: 1px solid #DDE1f0;
}

.c19 > [data-display='table-head'] {
  display: table-header-group;
  background-color: #f8f9fd;
}

.c19 > [data-display='table-head'] > [data-display='table-row'] {
  display: table-row;
}

.c19 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  border-bottom: 1px solid #DDE1f0;
  text-align: left;
  vertical-align: middle;
  padding: 10px 20px;
  font-size: 14px;
}

.c19 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c19 > [data-display='table-head'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c19 > [data-display='table-body'] {
  display: table-row-group;
}

.c19 > [data-display='table-body'] > [data-display='table-row'] {
  display: table-row;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #2A506F;
  font-size: 14px;
}

.c19 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell'] {
  display: table-cell;
  text-align: left;
  vertical-align: middle;
  padding: 14px 20px;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c19 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:first-child {
  padding-left: 40px;
}

.c19 > [data-display='table-body'] > [data-display='table-row'] > [data-display='table-cell']:last-child {
  padding-right: 40px;
}

.c19 > [data-display='table-body'] > [data-display='table-row'] > a[data-display='table-cell'] {
  cursor: auto;
}

.c19 > [data-display='table-body'] > [data-display='table-row']:nth-of-type(even) {
  background-color: #f8f9fd;
}

.c19 > [data-display='table-body'] > [data-display='table-row']:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c19 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] {
  background-color: #e8f5fc;
}

.c19 > [data-display='table-body'] > [data-display='table-row'][data-highlight='true'] > [data-display="table-cell"]:first-child {
  box-shadow: inset 3px 0px 0 #1496E1;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <div
        className=""
      >
        Hover me and click on icon to copy
      </div>
      <div
        className="c2 c6 c7 c8"
        onClick={[Function]}
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-copy fa-w-14 "
          data-icon="copy"
          data-prefix="far"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
    </div>
  </div>
  <div
    className="c2 c3 c9"
  >
    <div
      className="c2 c10 c11 c5"
    >
      <div
        className="c2 c9 "
      >
        <div
          className="c2 c12 c9 c13"
        >
          <div
            className="c14 c15"
          >
            Type: 
          </div>
          <div
            className="c16 c15"
          >
            Beginner
          </div>
        </div>
      </div>
      <div
        className="c2 c6 c7 c8"
        onClick={[Function]}
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-copy fa-w-14 "
          data-icon="copy"
          data-prefix="far"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
    </div>
    <div
      className="c2 c11 c5"
    >
      <div
        className="c2 c9 "
      >
        <div
          className="c2 c12 c9 c13"
        >
          <div
            className="c14 c15"
          >
            Type: 
          </div>
          <div
            className="c16 c15"
          >
            Advanced
          </div>
        </div>
      </div>
      <div
        className="c2 c6 c7 c8"
        onClick={[Function]}
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-copy fa-w-14 "
          data-icon="copy"
          data-prefix="far"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
    </div>
  </div>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c17"
    >
      <div
        className="c18"
      >
        <div
          className="c19"
        >
          <div
            data-display="table-head"
          >
            <div
              data-display="table-row"
            >
              <div
                data-display="table-cell"
              >
                Name
              </div>
              <div
                data-display="table-cell"
              >
                Value
              </div>
            </div>
          </div>
          <div
            data-display="table-body"
          >
            <div
              className=""
              data-display="table-row"
              data-highlight={false}
            >
              <a
                data-display="table-cell"
                data-key={0}
                onClick={[Function]}
              >
                Type
              </a>
              <a
                data-display="table-cell"
                data-key={0}
                onClick={[Function]}
              >
                Beginner
              </a>
            </div>
            <div
              className=""
              data-display="table-row"
              data-highlight={false}
            >
              <a
                data-display="table-cell"
                data-key={1}
                onClick={[Function]}
              >
                Type
              </a>
              <a
                data-display="table-cell"
                data-key={1}
                onClick={[Function]}
              >
                Advanced
              </a>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c2 c6 c7 c8"
        onClick={[Function]}
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-copy fa-w-14 "
          data-icon="copy"
          data-prefix="far"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
    </div>
  </div>
  <div
    className="c2 c3"
  >
    Only copy icon that can be placed anywhere.
    <div
      className="c2 c4 c17"
    >
      <div
        className="c2 c6 c7 c8"
        onClick={[Function]}
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-copy fa-w-14 "
          data-icon="copy"
          data-prefix="far"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DataGrid Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c9 {
  width: 100%;
}

.c10 {
  font-size: 14px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c7 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c11 {
  text-align: center;
}

.c12 {
  font-size: 18px;
}

.c8 {
  padding: 32px 44px;
}

.c4 {
  display: grid;
  -webkit-box-pack: left;
  -webkit-justify-content: left;
  -ms-flex-pack: left;
  justify-content: left;
  grid-gap: 38px;
  grid-template-columns: repeat(auto-fill,minmax(320px,1fr));
}

.c5 {
  min-width: 320px;
  max-width: 640px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <div
          className="c2 c6 c7 c8 "
        >
          <div
            className="c2 c9"
          >
            <div
              className="c2 c10"
            >
              <div
                className="c11 c12"
              >
                1
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c5"
      >
        <div
          className="c2 c6 c7 c8 "
        >
          <div
            className="c2 c9"
          >
            <div
              className="c2 c10"
            >
              <div
                className="c11 c12"
              >
                2
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c5"
      >
        <div
          className="c2 c6 c7 c8 "
        >
          <div
            className="c2 c9"
          >
            <div
              className="c2 c10"
            >
              <div
                className="c11 c12"
              >
                3
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c5"
      >
        <div
          className="c2 c6 c7 c8 "
        >
          <div
            className="c2 c9"
          >
            <div
              className="c2 c10"
            >
              <div
                className="c11 c12"
              >
                4
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c5"
      >
        <div
          className="c2 c6 c7 c8 "
        >
          <div
            className="c2 c9"
          >
            <div
              className="c2 c10"
            >
              <div
                className="c11 c12"
              >
                5
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c5"
      >
        <div
          className="c2 c6 c7 c8 "
        >
          <div
            className="c2 c9"
          >
            <div
              className="c2 c10"
            >
              <div
                className="c11 c12"
              >
                6
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Divider Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c9 {
  width: 100%;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  padding-left: 16px;
  padding-right: 16px;
  color: #527699;
}

.c4 {
  border: 0 none;
  border-top: 1px solid #ccc;
  width: 100%;
  height: 0;
}

.c6 {
  border: 0 none;
  border-top: 1px solid #DDE1f0;
  width: 100%;
  height: 0;
}

.c8 {
  border: 0 none;
  border-top: 1px dashed #DDE1f0;
  width: 100%;
  height: 0;
}

.c11 {
  -webkit-flex: 1 1 0;
  -ms-flex: 1 1 0;
  flex: 1 1 0;
  margin: auto;
}

.c5 {
  color: #ccc;
}

.c7 {
  margin-top: 38px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <hr
      className="c4 c5"
      color="#ccc"
    />
    <hr
      className="c6 c7"
    />
    <hr
      className="c8 c7"
      type="dashed"
    />
    <div
      className="c2 c9 c10 c7"
    >
      <hr
        className="c8 c11"
        type="dashed"
      />
      <span
        className="c12"
      >
        some textual context
      </span>
      <hr
        className="c8 c11"
        type="dashed"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Alignment 1`] = `
.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus > circle,
.c7:focus > ellipse,
.c7:focus > line,
.c7:focus > path,
.c7:focus > polygon,
.c7:focus > polyline,
.c7:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c11:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c11:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus > circle,
.c11:focus > ellipse,
.c11:focus > line,
.c11:focus > path,
.c11:focus > polygon,
.c11:focus > polyline,
.c11:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c13:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c13:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus > circle,
.c13:focus > ellipse,
.c13:focus > line,
.c13:focus > path,
.c13:focus > polygon,
.c13:focus > polyline,
.c13:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c15:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c8 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c8 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c8:disabled {
  cursor: not-allowed;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c14 {
  color: white;
}

.c14:hover:enabled,
.c14:focus:enabled,
.c14:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c14:hover:enabled svg,
.c14:focus:enabled svg,
.c14:active:enabled svg {
  color: white !important;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c12 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c10 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c5 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c5 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c6 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <div
        className="c2 c5 c6"
      >
        <span>
          <button
            className="c7 c8 c9 c10"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <div>
              DropDown
            </div>
          </button>
          <button
            className="c11 c8 c9 c12"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-down fa-w-14 "
              color="#444444"
              data-icon="chevron-down"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 448 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
        </span>
      </div>
      <div
        className="c2 c5 c6"
      >
        <span>
          <button
            className="c13 c8 c14 c10"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <div>
              DropDown
            </div>
          </button>
          <button
            className="c15 c8 c14 c12"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-chevron-down fa-w-14 "
              color="#f8f8f8"
              data-icon="chevron-down"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 448 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Bordered List 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c15:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c20:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c20:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus > circle,
.c20:focus > ellipse,
.c20:focus > line,
.c20:focus > path,
.c20:focus > polygon,
.c20:focus > polyline,
.c20:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus::-moz-focus-inner {
  border: 0;
}

.c21 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c21:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c21:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus > circle,
.c21:focus > ellipse,
.c21:focus > line,
.c21:focus > path,
.c21:focus > polygon,
.c21:focus > polyline,
.c21:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus::-moz-focus-inner {
  border: 0;
}

.c23 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c23:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c23:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus > circle,
.c23:focus > ellipse,
.c23:focus > line,
.c23:focus > path,
.c23:focus > polygon,
.c23:focus > polyline,
.c23:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: white;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c13 {
  color: white;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c16 {
  color: white;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: white !important;
}

.c19 {
  color: #2A506F;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: white !important;
}

.c22 {
  color: #2A506F;
  border-color: #2A506F;
}

.c22 svg {
  color: #527699 !important;
}

.c22:hover:enabled,
.c22:focus:enabled,
.c22:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c22:hover:enabled svg,
.c22:focus:enabled svg,
.c22:active:enabled svg {
  color: white !important;
}

.c11 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c9 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c6 c7 c8 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c10 c7 c8 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c12 c7 c13 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c14 c7 c13 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#f8f8f8"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c15 c7 c16 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c17 c7 c16 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#f8f8f8"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c18 c7 c19 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c20 c7 c19 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c21 c7 c22 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c23 c7 c22 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Divider 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: white;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c11 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c9 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c6 c7 c8 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c10 c7 c8 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Joined 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c11 {
  margin-right: 8px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: white;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c13 {
  color: white;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c15 {
  color: white;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c17 {
  color: #2A506F;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: white !important;
}

.c19 {
  color: #2A506F;
  border-color: #2A506F;
}

.c19 svg {
  color: #527699 !important;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: white !important;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c9 {
  margin: 0;
  width: 100%;
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <button
        className="c6 c7 c8 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            DropDown
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c12 c7 c13 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c14 c7 c15 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c16 c7 c17 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c18 c7 c19 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-chevron-down fa-w-14 "
          data-icon="chevron-down"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton No List Formatting 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: white;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c11 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c9 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c6 c7 c8 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c10 c7 c8 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Only Caret Icon 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #FF423D;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c15:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c19 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c19:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c19:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus > circle,
.c19:focus > ellipse,
.c19:focus > line,
.c19:focus > path,
.c19:focus > polygon,
.c19:focus > polyline,
.c19:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus::-moz-focus-inner {
  border: 0;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c20:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c20:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus > circle,
.c20:focus > ellipse,
.c20:focus > line,
.c20:focus > path,
.c20:focus > polygon,
.c20:focus > polyline,
.c20:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: white;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c11 {
  color: white;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: hsl(1.5,100%,49.6%);
  border-color: hsl(1.5,100%,49.6%);
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c13 {
  color: white;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c18 {
  color: #2A506F;
}

.c18:hover:enabled,
.c18:focus:enabled,
.c18:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c18:hover:enabled svg,
.c18:focus:enabled svg,
.c18:active:enabled svg {
  color: white !important;
}

.c21 {
  color: #2A506F;
  border-color: #2A506F;
}

.c21 svg {
  color: #527699 !important;
}

.c21:hover:enabled,
.c21:focus:enabled,
.c21:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c21:hover:enabled svg,
.c21:focus:enabled svg,
.c21:active:enabled svg {
  color: white !important;
}

.c16 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c14 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c9 {
  margin: 0;
  width: 100%;
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <button
        className="c6 c7 c8 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-chevron-down fa-w-14 "
          color="#444444"
          data-icon="chevron-down"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c10 c7 c11 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-chevron-down fa-w-14 "
          color="#f8f8f8"
          data-icon="chevron-down"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c12 c7 c13 c14"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        />
        <button
          className="c15 c7 c13 c16"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#f8f8f8"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c17 c7 c18 c14"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        />
        <button
          className="c19 c7 c18 c16"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c20 c7 c21 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-chevron-down fa-w-14 "
          data-icon="chevron-down"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 448 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Outline + Joined 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c11 {
  margin-right: 8px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  border-color: #00AEEF;
}

.c8 svg {
  color: #527699 !important;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: #00AEEF;
  border-color: #00AEEF;
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c13 {
  color: #2A506F;
  border-color: #FF423D;
}

.c13 svg {
  color: #527699 !important;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: #FF423D;
  border-color: #FF423D;
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c15 {
  color: #2A506F;
  border-color: #527699;
}

.c15 svg {
  color: #527699 !important;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: #527699;
  border-color: #527699;
  color: white;
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: white !important;
}

.c17 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c17 svg {
  color: #527699 !important;
}

.c17:hover:enabled,
.c17:focus:enabled,
.c17:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c17:hover:enabled svg,
.c17:focus:enabled svg,
.c17:active:enabled svg {
  color: #2A506F !important;
}

.c19 {
  color: #2A506F;
  border-color: #2A506F;
}

.c19 svg {
  color: #527699 !important;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: white !important;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c9 {
  margin: 0;
  width: 100%;
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <button
        className="c6 c7 c8 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c12 c7 c13 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c14 c7 c15 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c16 c7 c17 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c18 c7 c19 c9"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c10"
        >
          <div
            className="c2 c11"
          >
            <div>
              DropDown
            </div>
          </div>
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Outline 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #FF423D;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #FF423D;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c15:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c20:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c20:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus > circle,
.c20:focus > ellipse,
.c20:focus > line,
.c20:focus > path,
.c20:focus > polygon,
.c20:focus > polyline,
.c20:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus::-moz-focus-inner {
  border: 0;
}

.c21 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c21:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c21:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus > circle,
.c21:focus > ellipse,
.c21:focus > line,
.c21:focus > path,
.c21:focus > polygon,
.c21:focus > polyline,
.c21:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus::-moz-focus-inner {
  border: 0;
}

.c23 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c23:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c23:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus > circle,
.c23:focus > ellipse,
.c23:focus > line,
.c23:focus > path,
.c23:focus > polygon,
.c23:focus > polyline,
.c23:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: #2A506F;
  border-color: #00AEEF;
}

.c8 svg {
  color: #527699 !important;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: #00AEEF;
  border-color: #00AEEF;
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c13 {
  color: #2A506F;
  border-color: #FF423D;
}

.c13 svg {
  color: #527699 !important;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: #FF423D;
  border-color: #FF423D;
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c16 {
  color: #2A506F;
  border-color: #527699;
}

.c16 svg {
  color: #527699 !important;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: #527699;
  border-color: #527699;
  color: white;
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: white !important;
}

.c19 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c19 svg {
  color: #527699 !important;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: #2A506F !important;
}

.c22 {
  color: #2A506F;
  border-color: #2A506F;
}

.c22 svg {
  color: #527699 !important;
}

.c22:hover:enabled,
.c22:focus:enabled,
.c22:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c22:hover:enabled svg,
.c22:focus:enabled svg,
.c22:active:enabled svg {
  color: white !important;
}

.c11 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c9 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c6 c7 c8 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c10 c7 c8 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c12 c7 c13 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c14 c7 c13 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c15 c7 c16 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c17 c7 c16 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c18 c7 c19 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c20 c7 c19 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c21 c7 c22 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c23 c7 c22 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/DropDownButton Standard 1`] = `
.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c6:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c10:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c10:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus > circle,
.c10:focus > ellipse,
.c10:focus > line,
.c10:focus > path,
.c10:focus > polygon,
.c10:focus > polyline,
.c10:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c10:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c12:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus > circle,
.c12:focus > ellipse,
.c12:focus > line,
.c12:focus > path,
.c12:focus > polygon,
.c12:focus > polyline,
.c12:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c12:focus::-moz-focus-inner {
  border: 0;
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #2A506F;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c14:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c15:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #527699;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #527699;
  color: #f8f8f8;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #527699;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c18:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c18:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus > circle,
.c18:focus > ellipse,
.c18:focus > line,
.c18:focus > path,
.c18:focus > polygon,
.c18:focus > polyline,
.c18:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c18:focus::-moz-focus-inner {
  border: 0;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #DDE1f0;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c20:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c20:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus > circle,
.c20:focus > ellipse,
.c20:focus > line,
.c20:focus > path,
.c20:focus > polygon,
.c20:focus > polyline,
.c20:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus::-moz-focus-inner {
  border: 0;
}

.c21 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c21:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c21:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus > circle,
.c21:focus > ellipse,
.c21:focus > line,
.c21:focus > path,
.c21:focus > polygon,
.c21:focus > polyline,
.c21:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c21:focus::-moz-focus-inner {
  border: 0;
}

.c23 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c23:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c23:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus > circle,
.c23:focus > ellipse,
.c23:focus > line,
.c23:focus > path,
.c23:focus > polygon,
.c23:focus > polyline,
.c23:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c23:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c7:disabled {
  cursor: not-allowed;
}

.c8 {
  color: white;
}

.c8:hover:enabled,
.c8:focus:enabled,
.c8:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c8:hover:enabled svg,
.c8:focus:enabled svg,
.c8:active:enabled svg {
  color: white !important;
}

.c13 {
  color: white;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: hsl(207,45.1%,24%);
  border-color: hsl(207,45.1%,24%);
  color: white;
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: white !important;
}

.c16 {
  color: white;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: hsl(209.60000000000002,30.2%,36.9%);
  border-color: hsl(209.60000000000002,30.2%,36.9%);
  color: white;
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: white !important;
}

.c19 {
  color: #2A506F;
}

.c19:hover:enabled,
.c19:focus:enabled,
.c19:active:enabled {
  box-shadow: none;
  background: hsl(227.39999999999998,38.8%,72.3%);
  border-color: hsl(227.39999999999998,38.8%,72.3%);
  color: white;
  opacity: initial;
}

.c19:hover:enabled svg,
.c19:focus:enabled svg,
.c19:active:enabled svg {
  color: white !important;
}

.c22 {
  color: #2A506F;
  border-color: #2A506F;
}

.c22 svg {
  color: #527699 !important;
}

.c22:hover:enabled,
.c22:focus:enabled,
.c22:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c22:hover:enabled svg,
.c22:focus:enabled svg,
.c22:active:enabled svg {
  color: white !important;
}

.c11 {
  min-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-left: 0;
  margin: 0;
  vertical-align: top;
  padding: 0 16px;
  width: 44px;
}

.c9 {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
  margin: 0;
  width: calc(100% - 44px);
}

.c4 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c4 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c5 {
  margin-left: 8px;
  margin-right: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c6 c7 c8 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c10 c7 c8 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c12 c7 c13 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c14 c7 c13 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#f8f8f8"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c15 c7 c16 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c17 c7 c16 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#f8f8f8"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c18 c7 c19 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c20 c7 c19 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            color="#444444"
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c21 c7 c22 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            DropDown
          </div>
        </button>
        <button
          className="c23 c7 c22 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
    <div
      className="c2 c4 c5"
    >
      <span>
        <button
          className="c21 c7 c22 c9"
          onBlur={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div>
            Max Height
          </div>
        </button>
        <button
          className="c23 c7 c22 c11"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-chevron-down fa-w-14 "
            data-icon="chevron-down"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </button>
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Filters Button props 1`] = `
.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus > circle,
.c7:focus > ellipse,
.c7:focus > line,
.c7:focus > path,
.c7:focus > polygon,
.c7:focus > polyline,
.c7:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  margin-bottom: 16px;
}

.c21 {
  margin-right: 8px;
}

.c8 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c8 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c8:disabled {
  cursor: not-allowed;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c18 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c18 svg {
  color: #527699 !important;
}

.c18:hover:enabled,
.c18:focus:enabled,
.c18:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c18:hover:enabled svg,
.c18:focus:enabled svg,
.c18:active:enabled svg {
  color: #2A506F !important;
}

.c10 {
  margin-right: 30px;
  width: 200px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c14 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c14 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c14 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:hover {
  box-shadow: none;
}

.c14 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c15 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c15 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c19 {
  margin: 0;
  width: 100%;
}

.c16 {
  margin-left: 30px;
  width: 200px;
}

.c13 {
  -webkit-flex-basis: 500px;
  -ms-flex-preferred-size: 500px;
  flex-basis: 500px;
}

.c5 {
  position: relative;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c22 {
  width: 100%;
}

.c22 td {
  border: 1px solid #eee;
  padding: 3px 6px;
}

.c23 {
  background: yellow;
  border: 1px solid black;
  border-radius: 3px;
  padding: 3px 8px;
  margin: 3px 5px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div>
      <div
        className="c2 c4 c5"
      >
        <div
          className="c2 c6"
        >
          <button
            className="c7 c8 c9 c10"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
            width={200}
          >
            <div
              className="c11"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-filter fa-w-16 "
                color="#444444"
                data-icon="filter"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
              <div
                className="c12"
              />
              Add filter
            </div>
          </button>
          <div
            className="c13"
          >
            <div
              className="c14 "
            >
              <input
                onChange={[Function]}
                placeholder="Search entries..."
                style={
                  Object {
                    "color": undefined,
                  }
                }
                value=""
              />
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-search fa-w-16 search-icon"
                data-icon="search"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
          <div
            className=""
          >
            <div
              className="c2 c15 c16"
            >
              <button
                className="c17 c8 c18 c19"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                <div
                  className="c11"
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-chart-pie fa-w-17 "
                    data-icon="chart-pie"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 544 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                  <div
                    className="c12"
                  />
                  <div
                    className="c2 c20"
                  >
                    <div
                      className="c2 c21"
                    >
                      Views
                    </div>
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-chevron-down fa-w-14 "
                      data-icon="chevron-down"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </div>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Bulbasaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                6.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Bulbasaur can be seen napping in bright sunlight. There is a seed on its back. By soaking up the sun's rays, the seed grows progressively larger.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Ivysaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                13
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a bud on this Pokemon's back. To support its weight, Ivysaur's legs and trunk grow thick and strong. If it starts spending more time lying in the sunlight, it's a sign that the bud will bloom into a large flower soon.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Venusaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                3
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Italian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                100
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a large flower on Venusaur's back. The flower is said to take on vivid colors if it gets plenty of nutrition and sunlight. The flower's aroma soothes the emotions of people.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmander
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Lizard
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                French
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                8.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          The flame that burns at the tip of its tail is an indication of its emotions. The flame wavers when Charmander is enjoying itself. If the Pokemon becomes enraged, the flame burns fiercely.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmeleon
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                5
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Greek
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                19
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Sun Jan 01 2012 14:43:02 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Charmeleon mercilessly destroys its foes using its sharp claws. If it encounters a strong foe, it turns aggressive. In this excited state, the flame at the tip of its tail flares with a bluish white color.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charizard
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                6
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                South African
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                90.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Wed Apr 17 2013 15:43:02 GMT+0100 (British Summer Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  10
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Kanto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Charizard flies around the sky in search of powerful opponents. It breathes fire of such great heat that it melts anything. However, it never turns its fiery breath on any opponent weaker than itself.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Squirtle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                7
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Tiny Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Georgian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.5
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Fri Nov 03 2017 08:49:26 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  5
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Johto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Squirtle's shell is not merely used for protection. The shell's rounded shape and the grooves on its surface help minimize resistance in water, enabling this Pokemon to swim at high speeds.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Wartortle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                8
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Polish
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                22.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Its tail is large and covered with a rich, thick fur. The tail becomes increasingly deeper in color as Wartortle ages. The scratches on its shell are evidence of this Pokemon's toughness as a battler.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Blastoise
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Shellfish
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                New Zealand
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                85.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Blastoise has water spouts that protrude from its shell. The water spouts are very accurate. They can shoot bullets of water with enough accuracy to strike empty cans from a distance of over 160 feet.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Caterpie
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                10
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Worm
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Croatian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.3
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                2.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Shield Dust
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Caterpie has a voracious appetite. It can devour leaves bigger than its body right before your eyes. From its antenna, this Pokémon releases a terrifically strong odor.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Staryu
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                120
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Star Shape
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                English
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.8
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                34.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Natural Cure, Illuminate
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Staryu's center section has an organ called the core that shines bright red. If you go to a beach toward the end of summer, the glowing cores of these Pokémon look like the stars in the sky.
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Filters Compact 1`] = `
.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c19 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  line-height: 0;
  padding: 12px;
}

.c7:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus > circle,
.c7:focus > ellipse,
.c7:focus > line,
.c7:focus > path,
.c7:focus > polygon,
.c7:focus > polyline,
.c7:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c15:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c15:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus > circle,
.c15:focus > ellipse,
.c15:focus > line,
.c15:focus > path,
.c15:focus > polygon,
.c15:focus > polyline,
.c15:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c15:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  margin-bottom: 16px;
}

.c8 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c8 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c8:disabled {
  cursor: not-allowed;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c16 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c16 svg {
  color: #527699 !important;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: #2A506F !important;
}

.c10 {
  margin-right: 30px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c12 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c12 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c12 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c12 input:hover {
  box-shadow: none;
}

.c12 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c12 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c12 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c12 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c13 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c13 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c17 {
  margin: 0;
  width: 100%;
}

.c14 {
  margin-left: 30px;
}

.c11 {
  -webkit-flex-basis: 500px;
  -ms-flex-preferred-size: 500px;
  flex-basis: 500px;
}

.c5 {
  position: relative;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c21 {
  width: 100%;
}

.c21 td {
  border: 1px solid #eee;
  padding: 3px 6px;
}

.c22 {
  background: yellow;
  border: 1px solid black;
  border-radius: 3px;
  padding: 3px 8px;
  margin: 3px 5px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div>
      <div
        className="c2 c4 c5"
      >
        <div
          className="c2 c6"
        >
          <button
            className="c7 c8 c9 c10"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-filter fa-w-16 "
              color="#444444"
              data-icon="filter"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </button>
          <div
            className="c11"
          >
            <div
              className="c12 "
            >
              <input
                onChange={[Function]}
                placeholder="Search entries..."
                style={
                  Object {
                    "color": undefined,
                  }
                }
                value=""
              />
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-search fa-w-16 search-icon"
                data-icon="search"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
          <div
            className=""
          >
            <div
              className="c2 c13 c14"
            >
              <button
                className="c15 c8 c16 c17"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                <div
                  className="c18"
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-chart-pie fa-w-17 "
                    data-icon="chart-pie"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 544 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                  <div
                    className="c19"
                  />
                  <div
                    className="c2 c20"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-chevron-down fa-w-14 "
                      data-icon="chevron-down"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </div>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Bulbasaur
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                6.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Bulbasaur can be seen napping in bright sunlight. There is a seed on its back. By soaking up the sun's rays, the seed grows progressively larger.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Ivysaur
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                13
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a bud on this Pokemon's back. To support its weight, Ivysaur's legs and trunk grow thick and strong. If it starts spending more time lying in the sunlight, it's a sign that the bud will bloom into a large flower soon.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Venusaur
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                3
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Italian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                100
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a large flower on Venusaur's back. The flower is said to take on vivid colors if it gets plenty of nutrition and sunlight. The flower's aroma soothes the emotions of people.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmander
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Lizard
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                French
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                8.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          The flame that burns at the tip of its tail is an indication of its emotions. The flame wavers when Charmander is enjoying itself. If the Pokemon becomes enraged, the flame burns fiercely.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmeleon
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                5
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Greek
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                19
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Sun Jan 01 2012 14:43:02 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Charmeleon mercilessly destroys its foes using its sharp claws. If it encounters a strong foe, it turns aggressive. In this excited state, the flame at the tip of its tail flares with a bluish white color.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charizard
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                6
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                South African
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                90.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Wed Apr 17 2013 15:43:02 GMT+0100 (British Summer Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c22"
                >
                  rarity
                  : 
                  10
                </span>
                <span
                  className="c22"
                >
                  region
                  : 
                  Kanto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Charizard flies around the sky in search of powerful opponents. It breathes fire of such great heat that it melts anything. However, it never turns its fiery breath on any opponent weaker than itself.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Squirtle
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                7
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Tiny Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Georgian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.5
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Fri Nov 03 2017 08:49:26 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c22"
                >
                  rarity
                  : 
                  5
                </span>
                <span
                  className="c22"
                >
                  region
                  : 
                  Johto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Squirtle's shell is not merely used for protection. The shell's rounded shape and the grooves on its surface help minimize resistance in water, enabling this Pokemon to swim at high speeds.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Wartortle
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                8
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Polish
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                22.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Its tail is large and covered with a rich, thick fur. The tail becomes increasingly deeper in color as Wartortle ages. The scratches on its shell are evidence of this Pokemon's toughness as a battler.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Blastoise
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Shellfish
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                New Zealand
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                85.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Blastoise has water spouts that protrude from its shell. The water spouts are very accurate. They can shoot bullets of water with enough accuracy to strike empty cans from a distance of over 160 feet.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Caterpie
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                10
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Worm
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Croatian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.3
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                2.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Shield Dust
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Caterpie has a voracious appetite. It can devour leaves bigger than its body right before your eyes. From its antenna, this Pokémon releases a terrifically strong odor.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Staryu
        </h2>
        <table
          className="c21"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                120
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Star Shape
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                English
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.8
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                34.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Natural Cure, Illuminate
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Staryu's center section has an organ called the core that shines bright red. If you go to a beach toward the end of summer, the glowing cores of these Pokémon look like the stars in the sky.
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Filters Dark 1`] = `
.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus > circle,
.c7:focus > ellipse,
.c7:focus > line,
.c7:focus > path,
.c7:focus > polygon,
.c7:focus > polyline,
.c7:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  padding: 16px;
  background-color: #343434;
}

.c4 {
  margin-bottom: 16px;
}

.c21 {
  margin-right: 8px;
}

.c8 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c8 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c8:disabled {
  cursor: not-allowed;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c18 {
  color: #2A506F;
  border-color: #2A506F;
  background: white;
  border: none;
}

.c18:hover:enabled,
.c18:focus:enabled,
.c18:active:enabled {
  box-shadow: none;
  background: white;
  border-color: white;
  color: #2A506F;
  opacity: 0.9;
}

.c18:hover:enabled svg,
.c18:focus:enabled svg,
.c18:active:enabled svg {
  color: #2A506F !important;
}

.c18:disabled {
  opacity: 1;
  color: #c6c8c9;
}

.c10 {
  margin-right: 30px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c14 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c14 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c14 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:hover {
  box-shadow: none;
}

.c14 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c15 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c15 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c19 {
  margin: 0;
  width: 100%;
}

.c16 {
  margin-left: 30px;
}

.c13 {
  -webkit-flex-basis: 500px;
  -ms-flex-preferred-size: 500px;
  flex-basis: 500px;
}

.c5 {
  position: relative;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c22 {
  width: 100%;
}

.c22 td {
  border: 1px solid #eee;
  padding: 3px 6px;
}

.c23 {
  background: yellow;
  border: 1px solid black;
  border-radius: 3px;
  padding: 3px 8px;
  margin: 3px 5px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div>
      <div
        className="c2 c4 c5"
      >
        <div
          className="c2 c6"
        >
          <button
            className="c7 c8 c9 c10"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <div
              className="c11"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-filter fa-w-16 "
                color="#444444"
                data-icon="filter"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
              <div
                className="c12"
              />
              Add filter
            </div>
          </button>
          <div
            className="c13"
          >
            <div
              className="c14 "
            >
              <input
                onChange={[Function]}
                placeholder="Search entries..."
                style={
                  Object {
                    "color": "#fff",
                  }
                }
                value=""
              />
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-search fa-w-16 search-icon"
                data-icon="search"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
          <div
            className=""
          >
            <div
              className="c2 c15 c16"
            >
              <button
                className="c17 c8 c18 c19"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                <div
                  className="c11"
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-chart-pie fa-w-17 "
                    data-icon="chart-pie"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 544 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                  <div
                    className="c12"
                  />
                  <div
                    className="c2 c20"
                  >
                    <div
                      className="c2 c21"
                    >
                      Views
                    </div>
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-chevron-down fa-w-14 "
                      data-icon="chevron-down"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </div>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Bulbasaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                6.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Bulbasaur can be seen napping in bright sunlight. There is a seed on its back. By soaking up the sun's rays, the seed grows progressively larger.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Ivysaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                13
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a bud on this Pokemon's back. To support its weight, Ivysaur's legs and trunk grow thick and strong. If it starts spending more time lying in the sunlight, it's a sign that the bud will bloom into a large flower soon.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Venusaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                3
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Italian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                100
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a large flower on Venusaur's back. The flower is said to take on vivid colors if it gets plenty of nutrition and sunlight. The flower's aroma soothes the emotions of people.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Charmander
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Lizard
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                French
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                8.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          The flame that burns at the tip of its tail is an indication of its emotions. The flame wavers when Charmander is enjoying itself. If the Pokemon becomes enraged, the flame burns fiercely.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Charmeleon
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                5
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Greek
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                19
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Sun Jan 01 2012 14:43:02 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Charmeleon mercilessly destroys its foes using its sharp claws. If it encounters a strong foe, it turns aggressive. In this excited state, the flame at the tip of its tail flares with a bluish white color.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Charizard
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                6
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                South African
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                90.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Wed Apr 17 2013 15:43:02 GMT+0100 (British Summer Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  10
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Kanto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Charizard flies around the sky in search of powerful opponents. It breathes fire of such great heat that it melts anything. However, it never turns its fiery breath on any opponent weaker than itself.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Squirtle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                7
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Tiny Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Georgian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.5
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Fri Nov 03 2017 08:49:26 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  5
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Johto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Squirtle's shell is not merely used for protection. The shell's rounded shape and the grooves on its surface help minimize resistance in water, enabling this Pokemon to swim at high speeds.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Wartortle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                8
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Polish
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                22.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Its tail is large and covered with a rich, thick fur. The tail becomes increasingly deeper in color as Wartortle ages. The scratches on its shell are evidence of this Pokemon's toughness as a battler.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Blastoise
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Shellfish
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                New Zealand
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                85.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Blastoise has water spouts that protrude from its shell. The water spouts are very accurate. They can shoot bullets of water with enough accuracy to strike empty cans from a distance of over 160 feet.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Caterpie
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                10
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Worm
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Croatian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.3
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                2.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Shield Dust
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Caterpie has a voracious appetite. It can devour leaves bigger than its body right before your eyes. From its antenna, this Pokémon releases a terrifically strong odor.
        </p>
      </div>
      <div
        style={
          Object {
            "color": "white",
          }
        }
      >
        <h2>
          Staryu
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                120
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Star Shape
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                English
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.8
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                34.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Natural Cure, Illuminate
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Staryu's center section has an organ called the core that shines bright red. If you go to a beach toward the end of summer, the glowing cores of these Pokémon look like the stars in the sky.
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Filters Disabled 1`] = `
.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus > circle,
.c7:focus > ellipse,
.c7:focus > line,
.c7:focus > path,
.c7:focus > polygon,
.c7:focus > polyline,
.c7:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  opacity: 0.3;
  cursor: default;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  margin-bottom: 16px;
}

.c21 {
  margin-right: 8px;
}

.c8 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c8 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c8:disabled {
  cursor: not-allowed;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c18 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c18 svg {
  color: #527699 !important;
}

.c18:hover:enabled,
.c18:focus:enabled,
.c18:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c18:hover:enabled svg,
.c18:focus:enabled svg,
.c18:active:enabled svg {
  color: #2A506F !important;
}

.c10 {
  margin-right: 30px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c14 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c14 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c14 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:hover {
  box-shadow: none;
}

.c14 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c15 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c15 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c19 {
  margin: 0;
  width: 100%;
}

.c16 {
  margin-left: 30px;
}

.c13 {
  -webkit-flex-basis: 500px;
  -ms-flex-preferred-size: 500px;
  flex-basis: 500px;
}

.c5 {
  position: relative;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c22 {
  width: 100%;
}

.c22 td {
  border: 1px solid #eee;
  padding: 3px 6px;
}

.c23 {
  background: yellow;
  border: 1px solid black;
  border-radius: 3px;
  padding: 3px 8px;
  margin: 3px 5px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div>
      <div
        className="c2 c4 c5"
      >
        <div
          className="c2 c6"
        >
          <button
            className="c7 c8 c9 c10"
            disabled={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <div
              className="c11"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-filter fa-w-16 "
                color="#444444"
                data-icon="filter"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
              <div
                className="c12"
              />
              Add filter
            </div>
          </button>
          <div
            className="c13"
          >
            <div
              className="c14 "
            >
              <input
                disabled={true}
                onChange={[Function]}
                placeholder="Search entries..."
                style={
                  Object {
                    "color": undefined,
                  }
                }
                value=""
              />
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-search fa-w-16 search-icon"
                data-icon="search"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
          <div
            className=""
          >
            <div
              className="c2 c15 c16"
              disabled={true}
            >
              <button
                className="c17 c8 c18 c19"
                disabled={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                <div
                  className="c11"
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-chart-pie fa-w-17 "
                    data-icon="chart-pie"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 544 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                  <div
                    className="c12"
                  />
                  <div
                    className="c2 c20"
                  >
                    <div
                      className="c2 c21"
                    >
                      Views
                    </div>
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-chevron-down fa-w-14 "
                      data-icon="chevron-down"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </div>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Bulbasaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                6.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Bulbasaur can be seen napping in bright sunlight. There is a seed on its back. By soaking up the sun's rays, the seed grows progressively larger.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Ivysaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                13
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a bud on this Pokemon's back. To support its weight, Ivysaur's legs and trunk grow thick and strong. If it starts spending more time lying in the sunlight, it's a sign that the bud will bloom into a large flower soon.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Venusaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                3
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Italian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                100
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a large flower on Venusaur's back. The flower is said to take on vivid colors if it gets plenty of nutrition and sunlight. The flower's aroma soothes the emotions of people.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmander
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Lizard
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                French
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                8.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          The flame that burns at the tip of its tail is an indication of its emotions. The flame wavers when Charmander is enjoying itself. If the Pokemon becomes enraged, the flame burns fiercely.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmeleon
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                5
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Greek
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                19
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Sun Jan 01 2012 14:43:02 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Charmeleon mercilessly destroys its foes using its sharp claws. If it encounters a strong foe, it turns aggressive. In this excited state, the flame at the tip of its tail flares with a bluish white color.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charizard
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                6
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                South African
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                90.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Wed Apr 17 2013 15:43:02 GMT+0100 (British Summer Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  10
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Kanto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Charizard flies around the sky in search of powerful opponents. It breathes fire of such great heat that it melts anything. However, it never turns its fiery breath on any opponent weaker than itself.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Squirtle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                7
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Tiny Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Georgian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.5
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Fri Nov 03 2017 08:49:26 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  5
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Johto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Squirtle's shell is not merely used for protection. The shell's rounded shape and the grooves on its surface help minimize resistance in water, enabling this Pokemon to swim at high speeds.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Wartortle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                8
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Polish
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                22.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Its tail is large and covered with a rich, thick fur. The tail becomes increasingly deeper in color as Wartortle ages. The scratches on its shell are evidence of this Pokemon's toughness as a battler.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Blastoise
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Shellfish
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                New Zealand
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                85.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Blastoise has water spouts that protrude from its shell. The water spouts are very accurate. They can shoot bullets of water with enough accuracy to strike empty cans from a distance of over 160 feet.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Caterpie
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                10
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Worm
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Croatian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.3
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                2.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Shield Dust
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Caterpie has a voracious appetite. It can devour leaves bigger than its body right before your eyes. From its antenna, this Pokémon releases a terrifically strong odor.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Staryu
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                120
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Star Shape
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                English
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.8
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                34.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Natural Cure, Illuminate
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Staryu's center section has an organ called the core that shines bright red. If you go to a beach toward the end of summer, the glowing cores of these Pokémon look like the stars in the sky.
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Filters Render modes 1`] = `
.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c14 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c9:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus > circle,
.c9:focus > ellipse,
.c9:focus > line,
.c9:focus > path,
.c9:focus > polygon,
.c9:focus > polyline,
.c9:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c9:focus::-moz-focus-inner {
  border: 0;
}

.c19 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c19:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c19:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus > circle,
.c19:focus > ellipse,
.c19:focus > line,
.c19:focus > path,
.c19:focus > polygon,
.c19:focus > polyline,
.c19:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c19:focus::-moz-focus-inner {
  border: 0;
}

.c32 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c32:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c32:focus > circle,
.c32:focus > ellipse,
.c32:focus > line,
.c32:focus > path,
.c32:focus > polygon,
.c32:focus > polyline,
.c32:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c32:focus::-moz-focus-inner {
  border: 0;
}

.c36 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c36:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c36:focus > circle,
.c36:focus > ellipse,
.c36:focus > line,
.c36:focus > path,
.c36:focus > polygon,
.c36:focus > polyline,
.c36:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c36:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  padding: 16px;
}

.c6 {
  margin-bottom: 16px;
}

.c23 {
  margin-right: 8px;
}

.c27 {
  margin-top: 16px;
  padding: 16px;
  width: 100%;
  background-color: #f8f9fd;
}

.c28 {
  margin-bottom: 8px;
}

.c38 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
}

.c10 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c10 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c10:disabled {
  cursor: not-allowed;
}

.c11 {
  color: white;
}

.c11:hover:enabled,
.c11:focus:enabled,
.c11:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c11:hover:enabled svg,
.c11:focus:enabled svg,
.c11:active:enabled svg {
  color: white !important;
}

.c20 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c20 svg {
  color: #527699 !important;
}

.c20:hover:enabled,
.c20:focus:enabled,
.c20:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c20:hover:enabled svg,
.c20:focus:enabled svg,
.c20:active:enabled svg {
  color: #2A506F !important;
}

.c33 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c33:hover:enabled,
.c33:focus:enabled,
.c33:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c33:hover:enabled svg,
.c33:focus:enabled svg,
.c33:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c37 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c37:hover:enabled,
.c37:focus:enabled,
.c37:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c37:hover:enabled svg,
.c37:focus:enabled svg,
.c37:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c12 {
  margin-right: 30px;
}

.c43 {
  padding: 4px;
  padding-left: 8px;
  padding-right: 16px;
  font-size: 12px;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c34 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c31 {
  font-weight: 600;
}

.c40 {
  white-space: pre;
}

.c42 {
  white-space: pre;
  font-style: italic;
}

.c30 {
  margin-right: 8px;
}

.c41 {
  font-size: 12px;
  color: #1496E1;
}

.c24 {
  border: 0 none;
  border-top: 1px solid #eee;
  width: 100%;
  height: 0;
}

.c25 {
  margin-top: 40px;
  margin-bottom: 90px;
  color: #eee;
}

.c4 {
  font-weight: normal;
}

.c5 {
  margin: 0;
  font-size: 24px;
}

.c16 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c16 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c16 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c16 input:hover {
  box-shadow: none;
}

.c16 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c16 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c16 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c16 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c39 {
  background-color: #e8f5fc;
  border: 1px solid #1496E1;
  border-radius: 2px;
  line-height: 1.5;
}

.c44 {
  color: #bbc8d6;
}

.c35 {
  margin-top: 8px;
}

.c17 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c17 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c21 {
  margin: 0;
  width: 100%;
}

.c18 {
  margin-left: 30px;
}

.c26 {
  margin-left: 0;
}

.c15 {
  -webkit-flex-basis: 500px;
  -ms-flex-preferred-size: 500px;
  flex-basis: 500px;
}

.c7 {
  position: relative;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <h3
      className="c4 c5"
    >
      <code>
        all
      </code>
    </h3>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <button
          className="c9 c10 c11 c12"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div
            className="c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-filter fa-w-16 "
              color="#444444"
              data-icon="filter"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
            <div
              className="c14"
            />
            Add filter
          </div>
        </button>
        <div
          className="c15"
        >
          <div
            className="c16 "
          >
            <input
              onChange={[Function]}
              placeholder="Search entries..."
              style={
                Object {
                  "color": undefined,
                }
              }
              value=""
            />
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-search fa-w-16 search-icon"
              data-icon="search"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
        </div>
        <div
          className=""
        >
          <div
            className="c2 c17 c18"
          >
            <button
              className="c19 c10 c20 c21"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              type="button"
            >
              <div
                className="c13"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-chart-pie fa-w-17 "
                  data-icon="chart-pie"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 544 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
                <div
                  className="c14"
                />
                <div
                  className="c2 c22"
                >
                  <div
                    className="c2 c23"
                  >
                    Views
                  </div>
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-chevron-down fa-w-14 "
                    data-icon="chevron-down"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 448 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
    <hr
      className="c24 c25"
      color="#eee"
    />
    <h3
      className="c4 c5"
    >
      <code>
        add
      </code>
    </h3>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <button
          className="c9 c10 c11 c12"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div
            className="c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-filter fa-w-16 "
              color="#444444"
              data-icon="filter"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
            <div
              className="c14"
            />
            Add filter
          </div>
        </button>
      </div>
    </div>
    <hr
      className="c24 c25"
      color="#eee"
    />
    <h3
      className="c4 c5"
    >
      <code>
        search
      </code>
    </h3>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className="c15"
        >
          <div
            className="c16 "
          >
            <input
              onChange={[Function]}
              placeholder="Search entries..."
              style={
                Object {
                  "color": undefined,
                }
              }
              value=""
            />
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-search fa-w-16 search-icon"
              data-icon="search"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <hr
      className="c24 c25"
      color="#eee"
    />
    <h3
      className="c4 c5"
    >
      <code>
        views
      </code>
    </h3>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className=""
        >
          <div
            className="c2 c17 c26"
          >
            <button
              className="c19 c10 c20 c21"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              type="button"
            >
              <div
                className="c13"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-chart-pie fa-w-17 "
                  data-icon="chart-pie"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 544 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
                <div
                  className="c14"
                />
                <div
                  className="c2 c22"
                >
                  <div
                    className="c2 c23"
                  >
                    Views
                  </div>
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-chevron-down fa-w-14 "
                    data-icon="chevron-down"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 448 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
    <hr
      className="c24 c25"
      color="#eee"
    />
    <h3
      className="c4 c5"
    >
      <code>
        summary
      </code>
    </h3>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      />
      <div
        className="c2 c27"
      >
        <div
          className="c2 c28 c8"
        >
          <div
            className="c2 c29"
          >
            <div
              className="c30"
            >
              <span
                className="c31 "
              >
                Filters
              </span>
               (
              1
              )
            </div>
            <button
              className="c32 c10 c33 "
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              type="button"
            >
              Clear all
            </button>
          </div>
          <button
            className="c32 c10 c33 "
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <div
              className="c13"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-chart-pie fa-w-17 "
                data-icon="chart-pie"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 544 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
              <div
                className="c14"
              />
              Save as view
            </div>
          </button>
        </div>
        <div
          className="c2 c34"
        >
          <div
            className="c2 c29 c35"
          >
            <button
              className="c36 c10 c37 "
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              type="button"
            >
              <div
                className="c2 c38 c29 c39"
              >
                <div
                  className="c40 c41"
                >
                  Pokemon Name is 
                </div>
                <div
                  className="c31 c41"
                >
                  Squirtle
                </div>
                <div
                  className="c42 c41"
                >
                    or  
                </div>
                <div
                  className="c40 c41"
                >
                  Pokemon Name is 
                </div>
                <div
                  className="c31 c41"
                >
                  Pikachu
                </div>
              </div>
            </button>
            <button
              className="c36 c10 c37 c43 c44"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-times fa-w-11 "
                data-icon="times"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 352 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
    <hr
      className="c24 c25"
      color="#eee"
    />
    <h3
      className="c4 c5"
    >
      You can also use an array of modes
    </h3>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <button
          className="c9 c10 c11 c12"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          type="button"
        >
          <div
            className="c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-filter fa-w-16 "
              color="#444444"
              data-icon="filter"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
            <div
              className="c14"
            />
            Add filter
          </div>
        </button>
        <div
          className="c15"
        >
          <div
            className="c16 "
          >
            <input
              onChange={[Function]}
              placeholder="Search entries..."
              style={
                Object {
                  "color": undefined,
                }
              }
              value=""
            />
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-search fa-w-16 search-icon"
              data-icon="search"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <hr
      className="c24 c25"
      color="#eee"
    />
  </div>
</div>
`;

exports[`Storyshots Next/Filters Standard 1`] = `
.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus > circle,
.c7:focus > ellipse,
.c7:focus > line,
.c7:focus > path,
.c7:focus > polygon,
.c7:focus > polyline,
.c7:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c7:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #DDE1f0;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #DDE1f0;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  margin-bottom: 16px;
}

.c21 {
  margin-right: 8px;
}

.c8 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c8 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c8:disabled {
  cursor: not-allowed;
}

.c9 {
  color: white;
}

.c9:hover:enabled,
.c9:focus:enabled,
.c9:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c9:hover:enabled svg,
.c9:focus:enabled svg,
.c9:active:enabled svg {
  color: white !important;
}

.c18 {
  color: #2A506F;
  border-color: #DDE1f0;
}

.c18 svg {
  color: #527699 !important;
}

.c18:hover:enabled,
.c18:focus:enabled,
.c18:active:enabled {
  box-shadow: none;
  background: #DDE1f0;
  border-color: #DDE1f0;
  color: #2A506F;
  opacity: initial;
}

.c18:hover:enabled svg,
.c18:focus:enabled svg,
.c18:active:enabled svg {
  color: #2A506F !important;
}

.c10 {
  margin-right: 30px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c14 {
  position: relative;
  width: 100%;
  border-bottom: 1px solid #DDE1f0;
  padding-left: 24px;
  padding-top: 4px;
}

.c14 .search-icon {
  color: #bbc8d6;
  position: absolute;
  top: 50%;
  left: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.c14 input {
  outline: none;
  background: transparent;
  box-shadow: none;
  border: none;
  width: 100%;
  font-size: inherit;
  padding: 4px;
  height: auto;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:hover {
  box-shadow: none;
}

.c14 input::-webkit-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::-moz-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input:-ms-input-placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c14 input::placeholder {
  color: #bbc8d6;
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
}

.c15 {
  display: inline-block;
  border-radius: 3px;
  vertical-align: top;
  position: relative;
}

.c15 svg {
  width: 12px;
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c19 {
  margin: 0;
  width: 100%;
}

.c16 {
  margin-left: 30px;
}

.c13 {
  -webkit-flex-basis: 500px;
  -ms-flex-preferred-size: 500px;
  flex-basis: 500px;
}

.c5 {
  position: relative;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c22 {
  width: 100%;
}

.c22 td {
  border: 1px solid #eee;
  padding: 3px 6px;
}

.c23 {
  background: yellow;
  border: 1px solid black;
  border-radius: 3px;
  padding: 3px 8px;
  margin: 3px 5px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div>
      <div
        className="c2 c4 c5"
      >
        <div
          className="c2 c6"
        >
          <button
            className="c7 c8 c9 c10"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            <div
              className="c11"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-filter fa-w-16 "
                color="#444444"
                data-icon="filter"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
              <div
                className="c12"
              />
              Add filter
            </div>
          </button>
          <div
            className="c13"
          >
            <div
              className="c14 "
            >
              <input
                onChange={[Function]}
                placeholder="Search entries..."
                style={
                  Object {
                    "color": undefined,
                  }
                }
                value=""
              />
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-search fa-w-16 search-icon"
                data-icon="search"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </div>
          </div>
          <div
            className=""
          >
            <div
              className="c2 c15 c16"
            >
              <button
                className="c17 c8 c18 c19"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                <div
                  className="c11"
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-chart-pie fa-w-17 "
                    data-icon="chart-pie"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 544 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M527.79 288H290.5l158.03 158.03c6.04 6.04 15.98 6.53 22.19.68 38.7-36.46 65.32-85.61 73.13-140.86 1.34-9.46-6.51-17.85-16.06-17.85zm-15.83-64.8C503.72 103.74 408.26 8.28 288.8.04 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.19-16.8zM224 288V50.71c0-9.55-8.39-17.4-17.84-16.06C86.99 51.49-4.1 155.6.14 280.37 4.5 408.51 114.83 513.59 243.03 511.98c50.4-.63 96.97-16.87 135.26-44.03 7.9-5.6 8.42-17.23 1.57-24.08L224 288z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                  <div
                    className="c12"
                  />
                  <div
                    className="c2 c20"
                  >
                    <div
                      className="c2 c21"
                    >
                      Views
                    </div>
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-chevron-down fa-w-14 "
                      data-icon="chevron-down"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </div>
                </div>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Bulbasaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                6.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Bulbasaur can be seen napping in bright sunlight. There is a seed on its back. By soaking up the sun's rays, the seed grows progressively larger.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Ivysaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Chinese
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                13
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a bud on this Pokemon's back. To support its weight, Ivysaur's legs and trunk grow thick and strong. If it starts spending more time lying in the sunlight, it's a sign that the bud will bloom into a large flower soon.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Venusaur
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                3
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Seed
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Italian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                2
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                100
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Overgrow
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          There is a large flower on Venusaur's back. The flower is said to take on vivid colors if it gets plenty of nutrition and sunlight. The flower's aroma soothes the emotions of people.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmander
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                4
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Lizard
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                French
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                8.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          The flame that burns at the tip of its tail is an indication of its emotions. The flame wavers when Charmander is enjoying itself. If the Pokemon becomes enraged, the flame burns fiercely.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charmeleon
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                5
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Greek
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                19
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Sun Jan 01 2012 14:43:02 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Charmeleon mercilessly destroys its foes using its sharp claws. If it encounters a strong foe, it turns aggressive. In this excited state, the flame at the tip of its tail flares with a bluish white color.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Charizard
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                6
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Flame
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                South African
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.7
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                90.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Blaze
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Wed Apr 17 2013 15:43:02 GMT+0100 (British Summer Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  10
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Kanto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Charizard flies around the sky in search of powerful opponents. It breathes fire of such great heat that it melts anything. However, it never turns its fiery breath on any opponent weaker than itself.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Squirtle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                7
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Tiny Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Georgian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.5
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                Fri Nov 03 2017 08:49:26 GMT+0000 (Greenwich Mean Time)
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td>
                <span
                  className="c23"
                >
                  rarity
                  : 
                  5
                </span>
                <span
                  className="c23"
                >
                  region
                  : 
                  Johto
                </span>
              </td>
            </tr>
          </tbody>
        </table>
        <p>
          Squirtle's shell is not merely used for protection. The shell's rounded shape and the grooves on its surface help minimize resistance in water, enabling this Pokemon to swim at high speeds.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Wartortle
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                8
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Turtle
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Polish
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                22.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Its tail is large and covered with a rich, thick fur. The tail becomes increasingly deeper in color as Wartortle ages. The scratches on its shell are evidence of this Pokemon's toughness as a battler.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Blastoise
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                9
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Shellfish
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                New Zealand
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                1.6
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                85.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Torrent
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                no
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Blastoise has water spouts that protrude from its shell. The water spouts are very accurate. They can shoot bullets of water with enough accuracy to strike empty cans from a distance of over 160 feet.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Caterpie
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                10
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Worm
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                Croatian
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.3
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                2.9
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Shield Dust
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Caterpie has a voracious appetite. It can devour leaves bigger than its body right before your eyes. From its antenna, this Pokémon releases a terrifically strong odor.
        </p>
      </div>
      <div
        style={
          Object {
            "color": null,
          }
        }
      >
        <h2>
          Staryu
        </h2>
        <table
          className="c22"
        >
          <tbody>
            <tr>
              <td>
                National PokeDex Number
              </td>
              <td>
                120
              </td>
            </tr>
            <tr>
              <td>
                Category
              </td>
              <td>
                Star Shape
              </td>
            </tr>
            <tr>
              <td>
                Nationality
              </td>
              <td>
                English
              </td>
            </tr>
            <tr>
              <td>
                Height
              </td>
              <td>
                0.8
              </td>
            </tr>
            <tr>
              <td>
                Weight
              </td>
              <td>
                34.5
              </td>
            </tr>
            <tr>
              <td>
                Abilities
              </td>
              <td>
                Natural Cure, Illuminate
              </td>
            </tr>
            <tr>
              <td>
                First Seen
              </td>
              <td>
                
              </td>
            </tr>
            <tr>
              <td>
                Caught
              </td>
              <td>
                yes
              </td>
            </tr>
            <tr>
              <td>
                Tags
              </td>
              <td />
            </tr>
          </tbody>
        </table>
        <p>
          Staryu's center section has an organ called the core that shines bright red. If you go to a beach toward the end of summer, the glowing cores of these Pokémon look like the stars in the sky.
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Flex Flex direction 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  background-color: red;
}

.c6 {
  background-color: blue;
}

.c7 {
  background-color: green;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <div
        className="c2 c5"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c6"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c7"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Flex Flex property on children 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c5 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 {
  margin: 16px;
}

.c6 {
  background-color: red;
}

.c7 {
  background-color: blue;
}

.c8 {
  background-color: green;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <div
        className="c5 c6"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c7"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c8"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Flex Flex wrap 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  background-color: red;
}

.c6 {
  background-color: blue;
}

.c7 {
  background-color: green;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <div
        className="c2 c5"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c6"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c7"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c5"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c6"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c7"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c5"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c6"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c7"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Flex Justify 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  background-color: red;
}

.c6 {
  background-color: blue;
}

.c7 {
  background-color: green;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <div
        className="c2 c5"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c6"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c7"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Flex Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  background-color: red;
}

.c6 {
  background-color: blue;
}

.c7 {
  background-color: green;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <div
        className="c2 c5"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c6"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
      <div
        className="c2 c7"
        style={
          Object {
            "height": 200,
            "width": 200,
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Array of objects with dependants 1`] = `
.c26 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c26 g {
  fill: inherit;
  stroke: inherit;
}

.c26 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c26 *[stroke*="#"],
.c26 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c26 *[fill-rule],
.c26 *[FILL-RULE],
.c26 *[fill*="#"],
.c26 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c25 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c34 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c35 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c27 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c27:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c27:focus > circle,
.c27:focus > ellipse,
.c27:focus > line,
.c27:focus > path,
.c27:focus > polygon,
.c27:focus > polyline,
.c27:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c27:focus::-moz-focus-inner {
  border: 0;
}

.c31 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c31:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c31:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c31:focus > circle,
.c31:focus > ellipse,
.c31:focus > line,
.c31:focus > path,
.c31:focus > polygon,
.c31:focus > polyline,
.c31:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c31:focus::-moz-focus-inner {
  border: 0;
}

.c40 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c40:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c40:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c40:focus > circle,
.c40:focus > ellipse,
.c40:focus > line,
.c40:focus > path,
.c40:focus > polygon,
.c40:focus > polyline,
.c40:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c40:focus::-moz-focus-inner {
  border: 0;
}

.c22 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c22::-webkit-input-placeholder {
  color: #abb9c5;
}

.c22::-moz-placeholder {
  color: #abb9c5;
}

.c22:-ms-input-placeholder {
  color: #abb9c5;
}

.c22::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c22::-moz-focus-inner {
  border: none;
  outline: none;
}

.c22:-moz-placeholder,
.c22::-moz-placeholder {
  opacity: 1;
}

.c36 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c36::-webkit-input-placeholder {
  color: #abb9c5;
}

.c36::-moz-placeholder {
  color: #abb9c5;
}

.c36:-ms-input-placeholder {
  color: #abb9c5;
}

.c36::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c36::-moz-focus-inner {
  border: none;
  outline: none;
}

.c36:-moz-placeholder,
.c36::-moz-placeholder {
  opacity: 1;
}

.c21 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c23 {
  cursor: pointer;
}

.c18 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c13 {
  box-sizing: border-box;
  -webkit-flex: 2 2 200px;
  -ms-flex: 2 2 200px;
  flex: 2 2 200px;
}

.c39 {
  box-sizing: border-box;
  -webkit-flex: 1 1 100px;
  -ms-flex: 1 1 100px;
  flex: 1 1 100px;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c9 {
  margin-right: 8px;
}

.c42 {
  padding: 30px;
  max-width: 50%;
}

.c28 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c28 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c28:disabled {
  cursor: not-allowed;
}

.c41 {
  color: white;
}

.c41:hover:enabled,
.c41:focus:enabled,
.c41:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c41:hover:enabled svg,
.c41:focus:enabled svg,
.c41:active:enabled svg {
  color: white !important;
}

.c32 {
  color: #2A506F;
  border-color: #2A506F;
}

.c32 svg {
  color: #527699 !important;
}

.c32:hover:enabled,
.c32:focus:enabled,
.c32:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c32:hover:enabled svg,
.c32:focus:enabled svg,
.c32:active:enabled svg {
  color: white !important;
}

.c29 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c29:hover:enabled,
.c29:focus:enabled,
.c29:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c29:hover:enabled svg,
.c29:focus:enabled svg,
.c29:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c30 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
}

.c33 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c43 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c37 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c37:focus {
  border-color: #527699;
}

.c38 {
  width: 100%;
}

.c24 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c15 > button {
  width: 100%;
}

.c16 {
  width: 100%;
}

.c10 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c14 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c25 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <div
                className="c2 c8"
              >
                <div
                  className="c4 c9"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_application_config_variable"
                  >
                    <div>
                      <legend
                        className="c10"
                        id="root_application_config_variable__title"
                      >
                        Application configuration variables
                      </legend>
                      <div
                        className="rendition-form__array-item"
                      >
                        <div
                          className="c2 c11"
                        >
                          <div
                            className="c4 "
                          >
                            <div
                              className="c2 c7 form-group field field-object rendition-form__field--root_application_config_variable_0"
                            >
                              <section>
                                <div
                                  className="c2 c12"
                                >
                                  <div
                                    className="c13 c9"
                                  >
                                    <div
                                      className="c2 c7 form-group field field-undefined rendition-form__field--root_application_config_variable_0_name"
                                    >
                                      <label
                                        className="c14 control-label"
                                        htmlFor="root_application_config_variable_0_name"
                                      >
                                        Name
                                      </label>
                                      <div
                                        className="c15 c16"
                                      >
                                        <button
                                          aria-label="Open Drop"
                                          className="c17 c18"
                                          id="root_application_config_variable_0_name"
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onMouseOut={[Function]}
                                          onMouseOver={[Function]}
                                          type="button"
                                        >
                                          <div
                                            className="c19"
                                          >
                                            <div
                                              className="c20"
                                            >
                                              <div
                                                className="c21"
                                              >
                                                <input
                                                  autoComplete="off"
                                                  className="c22 c23 c24"
                                                  id="root_application_config_variable_0_name__input"
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  readOnly={true}
                                                  tabIndex="-1"
                                                  type="text"
                                                  value=""
                                                />
                                              </div>
                                            </div>
                                            <div
                                              className="c25"
                                              style={
                                                Object {
                                                  "minWidth": "auto",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-label="FormDown"
                                                className="c26"
                                                viewBox="0 0 24 24"
                                              >
                                                <polyline
                                                  fill="none"
                                                  points="18 9 12 15 6 9"
                                                  stroke="#000"
                                                  strokeWidth="2"
                                                />
                                              </svg>
                                            </div>
                                          </div>
                                        </button>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </section>
                            </div>
                          </div>
                          <div
                            className="c2 "
                          >
                            <button
                              className="c27 c28 c29 c30 rendition-form-array-item__remove-item"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                              type="button"
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-trash-alt fa-w-14 "
                                data-icon="trash-alt"
                                data-prefix="far"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 448 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </button>
                          </div>
                        </div>
                      </div>
                      <button
                        className="c31 c28 c32 c33 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c34"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c35"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c9"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_application_environment_variable"
                  >
                    <div>
                      <legend
                        className="c10"
                        id="root_application_environment_variable__title"
                      >
                        Application environment variables
                      </legend>
                      <div
                        className="rendition-form__array-item"
                      >
                        <div
                          className="c2 c11"
                        >
                          <div
                            className="c4 "
                          >
                            <div
                              className="c2 c7 form-group field field-object rendition-form__field--root_application_environment_variable_0"
                            >
                              <section>
                                <div
                                  className="c2 c12"
                                >
                                  <div
                                    className="c13 c9"
                                  >
                                    <div
                                      className="c2 c7 form-group field field-string rendition-form__field--root_application_environment_variable_0_name"
                                    >
                                      <label
                                        className="c14 control-label"
                                        htmlFor="root_application_environment_variable_0_name"
                                      >
                                        Name
                                      </label>
                                      <div
                                        className="c21"
                                      >
                                        
                                        <input
                                          autoFocus={false}
                                          className="c36 c37 c38"
                                          disabled={false}
                                          id="root_application_environment_variable_0_name"
                                          label="Name"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder=""
                                          readOnly={false}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </div>
                                  <div
                                    className="c39 c9"
                                  >
                                    <div
                                      className="c2 c7 form-group field field-string rendition-form__field--root_application_environment_variable_0_value"
                                    >
                                      <label
                                        className="c14 control-label"
                                        htmlFor="root_application_environment_variable_0_value"
                                      >
                                        Value
                                      </label>
                                      <div
                                        className="c21"
                                      >
                                        
                                        <input
                                          autoFocus={false}
                                          className="c36 c37 c38"
                                          disabled={false}
                                          id="root_application_environment_variable_0_value"
                                          label="Value"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          placeholder=""
                                          readOnly={false}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </section>
                            </div>
                          </div>
                          <div
                            className="c2 "
                          >
                            <button
                              className="c27 c28 c29 c30 rendition-form-array-item__remove-item"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseOut={[Function]}
                              onMouseOver={[Function]}
                              type="button"
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-trash-alt fa-w-14 "
                                data-icon="trash-alt"
                                data-prefix="far"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 448 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </button>
                          </div>
                        </div>
                      </div>
                      <button
                        className="c31 c28 c32 c33 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c34"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c35"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c40 c28 c41 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c42"
    >
      <div
        className="c43 "
      >
        <pre>
          {
    "application_config_variable": [
        {}
    ],
    "application_environment_variable": [
        {}
    ]
}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Custom submit button text 1`] = `
.c28 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c28 g {
  fill: inherit;
  stroke: inherit;
}

.c28 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c28 *[stroke*="#"],
.c28 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c28 *[fill-rule],
.c28 *[FILL-RULE],
.c28 *[fill*="#"],
.c28 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c34 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c29 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c29:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c29:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus > circle,
.c29:focus > ellipse,
.c29:focus > line,
.c29:focus > path,
.c29:focus > polygon,
.c29:focus > polyline,
.c29:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus::-moz-focus-inner {
  border: 0;
}

.c35 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c35:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c35:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus > circle,
.c35:focus > ellipse,
.c35:focus > line,
.c35:focus > path,
.c35:focus > polygon,
.c35:focus > polyline,
.c35:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c24 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c24::-webkit-input-placeholder {
  color: #abb9c5;
}

.c24::-moz-placeholder {
  color: #abb9c5;
}

.c24:-ms-input-placeholder {
  color: #abb9c5;
}

.c24::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c24::-moz-focus-inner {
  border: none;
  outline: none;
}

.c24:-moz-placeholder,
.c24::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c25 {
  cursor: pointer;
}

.c21 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c37 {
  padding: 30px;
  max-width: 50%;
}

.c30 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c30 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c30:disabled {
  cursor: not-allowed;
}

.c36 {
  color: white;
}

.c36:hover:enabled,
.c36:focus:enabled,
.c36:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c36:hover:enabled svg,
.c36:focus:enabled svg,
.c36:active:enabled svg {
  color: white !important;
}

.c31 {
  color: #2A506F;
  border-color: #2A506F;
}

.c31 svg {
  color: #527699 !important;
}

.c31:hover:enabled,
.c31:focus:enabled,
.c31:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c31:hover:enabled svg,
.c31:focus:enabled svg,
.c31:active:enabled svg {
  color: white !important;
}

.c32 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c38 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c16 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c26 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c18 > button {
  width: 100%;
}

.c19 {
  width: 100%;
}

.c17 * {
  box-sizing: border-box;
}

.c17 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c17 pre {
  background-color: #f4f4f4;
}

.c17 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c17 code,
.c17 kbd,
.c17 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c17 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c17 dl {
  padding: 0;
}

.c17 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c17 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c17 td,
.c17 th {
  padding: 0;
}

.c17 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c17 table th {
  font-weight: 600;
}

.c17 table th,
.c17 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c17 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c17 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c17 blockquote {
  margin: 0;
}

.c17 blockquote,
.c17 dl,
.c17 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c17 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c17 blockquote > :first-child {
  margin-top: 0;
}

.c17 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c27 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c18 c19"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c20 c21"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c22"
                        >
                          <div
                            className="c23"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c24 c25 c26"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c27"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c28"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c16 c17 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c29 c30 c31 c32 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c33"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c34"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c35 c30 c36 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Save
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c37"
    >
      <div
        className="c38 "
      >
        <pre>
          {}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Disabled form 1`] = `
.c28 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c28 g {
  fill: inherit;
  stroke: inherit;
}

.c28 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c28 *[stroke*="#"],
.c28 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c28 *[fill-rule],
.c28 *[FILL-RULE],
.c28 *[fill*="#"],
.c28 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c34 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c29 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c29:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c29:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus > circle,
.c29:focus > ellipse,
.c29:focus > line,
.c29:focus > path,
.c29:focus > polygon,
.c29:focus > polyline,
.c29:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus::-moz-focus-inner {
  border: 0;
}

.c35 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c35:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c35:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus > circle,
.c35:focus > ellipse,
.c35:focus > line,
.c35:focus > path,
.c35:focus > polygon,
.c35:focus > polyline,
.c35:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  opacity: 0.4;
  cursor: default;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c24 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c24::-webkit-input-placeholder {
  color: #abb9c5;
}

.c24::-moz-placeholder {
  color: #abb9c5;
}

.c24:-ms-input-placeholder {
  color: #abb9c5;
}

.c24::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c24::-moz-focus-inner {
  border: none;
  outline: none;
}

.c24:-moz-placeholder,
.c24::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c25 {
  cursor: default;
}

.c21 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c37 {
  padding: 30px;
  max-width: 50%;
}

.c30 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c30 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c30:disabled {
  cursor: not-allowed;
}

.c36 {
  color: white;
}

.c36:hover:enabled,
.c36:focus:enabled,
.c36:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c36:hover:enabled svg,
.c36:focus:enabled svg,
.c36:active:enabled svg {
  color: white !important;
}

.c31 {
  color: #2A506F;
  border-color: #2A506F;
}

.c31 svg {
  color: #527699 !important;
}

.c31:hover:enabled,
.c31:focus:enabled,
.c31:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c31:hover:enabled svg,
.c31:focus:enabled svg,
.c31:active:enabled svg {
  color: white !important;
}

.c32 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c38 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c16 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: not-allowed;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c26 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c18 > button {
  width: 100%;
}

.c19 {
  width: 100%;
}

.c17 * {
  box-sizing: border-box;
}

.c17 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c17 pre {
  background-color: #f4f4f4;
}

.c17 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c17 code,
.c17 kbd,
.c17 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c17 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c17 dl {
  padding: 0;
}

.c17 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c17 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c17 td,
.c17 th {
  padding: 0;
}

.c17 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c17 table th {
  font-weight: 600;
}

.c17 table th,
.c17 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c17 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c17 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c17 blockquote {
  margin: 0;
}

.c17 blockquote,
.c17 dl,
.c17 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c17 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c17 blockquote > :first-child {
  margin-top: 0;
}

.c17 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c27 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox disabled"
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={true}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={true}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c18 c19"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c20 c21"
                        disabled={true}
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c22"
                        >
                          <div
                            className="c23"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c24 c25 c26"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c27"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c28"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c16 c17 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c29 c30 c31 c32 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c33"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c34"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c35 c30 c36 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c37"
    >
      <div
        className="c38 "
      >
        <pre>
          {}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Group titles 1`] = `
.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c16:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus > circle,
.c16:focus > ellipse,
.c16:focus > line,
.c16:focus > path,
.c16:focus > polygon,
.c16:focus > polyline,
.c16:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c16:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c19 {
  padding: 30px;
  max-width: 50%;
}

.c17 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c17 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c17:disabled {
  cursor: not-allowed;
}

.c18 {
  color: white;
}

.c18:hover:enabled,
.c18:focus:enabled,
.c18:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c18:hover:enabled svg,
.c18:focus:enabled svg,
.c18:active:enabled svg {
  color: white !important;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c20 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Networking
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-object rendition-form__field--root_vpn"
                  >
                    <section>
                      <legend
                        className="c8"
                        id="root_vpn__title"
                      >
                        Virtual Private Network
                      </legend>
                      <div
                        className="c2 c9"
                      >
                        <div
                          className="c4 c10"
                        >
                          <div
                            className="c2 c7 form-group field field-string rendition-form__field--root_vpn_endpoint"
                          >
                            <label
                              className="c11 control-label"
                              htmlFor="root_vpn_endpoint"
                            >
                              Endpoint
                            </label>
                            <div
                              className="c12"
                            >
                              
                              <input
                                autoFocus={false}
                                className="c13 c14 c15"
                                disabled={false}
                                id="root_vpn_endpoint"
                                label="Endpoint"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <div
                          className="c4 c10"
                        >
                          <div
                            className="c2 c7 form-group field field-string rendition-form__field--root_vpn_certificate"
                          >
                            <label
                              className="c11 control-label"
                              htmlFor="root_vpn_certificate"
                            >
                              Certificate
                            </label>
                            <div
                              className="c12"
                            >
                              
                              <input
                                autoFocus={false}
                                className="c13 c14 c15"
                                disabled={false}
                                id="root_vpn_certificate"
                                label="Certificate"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                placeholder=""
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </section>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-object rendition-form__field--root_wifiNetwork"
                  >
                    <section>
                      <legend
                        className="c8"
                        id="root_wifiNetwork__title"
                      >
                        WiFi Network
                      </legend>
                      <div
                        className="c2 c9"
                      >
                        <div
                          className="c4 c10"
                        >
                          <div
                            className="c2 c7 form-group field field-object rendition-form__field--root_wifiNetwork_wifi"
                          >
                            <section>
                              <div
                                className="c2 c9"
                              >
                                <div
                                  className="c4 c10"
                                >
                                  <div
                                    className="c2 c7 form-group field field-string rendition-form__field--root_wifiNetwork_wifi_ssid"
                                  >
                                    <label
                                      className="c11 control-label"
                                      htmlFor="root_wifiNetwork_wifi_ssid"
                                    >
                                      Network SSID
                                    </label>
                                    <div
                                      className="c12"
                                    >
                                      
                                      <input
                                        autoFocus={false}
                                        className="c13 c14 c15"
                                        disabled={false}
                                        id="root_wifiNetwork_wifi_ssid"
                                        label="Network SSID"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder=""
                                        readOnly={false}
                                        required={false}
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </section>
                          </div>
                        </div>
                        <div
                          className="c4 c10"
                        >
                          <div
                            className="c2 c7 form-group field field-object rendition-form__field--root_wifiNetwork_wifiSecurity"
                          >
                            <section>
                              <div
                                className="c2 c9"
                              >
                                <div
                                  className="c4 c10"
                                >
                                  <div
                                    className="c2 c7 form-group field field-string rendition-form__field--root_wifiNetwork_wifiSecurity_psk"
                                  >
                                    <label
                                      className="c11 control-label"
                                      htmlFor="root_wifiNetwork_wifiSecurity_psk"
                                    >
                                      Network Passphrase
                                    </label>
                                    <div
                                      className="c12"
                                    >
                                      
                                      <input
                                        autoFocus={false}
                                        className="c13 c14 c15"
                                        disabled={false}
                                        id="root_wifiNetwork_wifiSecurity_psk"
                                        label="Network Passphrase"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        placeholder=""
                                        readOnly={false}
                                        required={false}
                                        type="text"
                                        value=""
                                      />
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </section>
                          </div>
                        </div>
                      </div>
                    </section>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c16 c17 c18 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c19"
    >
      <div
        className="c20 "
      >
        <pre>
          {
    "vpn": {},
    "wifiNetwork": {
        "wifi": {},
        "wifiSecurity": {}
    }
}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Help Text 1`] = `
.c30 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c30 g {
  fill: inherit;
  stroke: inherit;
}

.c30 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c30 *[stroke*="#"],
.c30 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c30 *[fill-rule],
.c30 *[FILL-RULE],
.c30 *[fill*="#"],
.c30 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c24 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c25 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c35 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c36 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c22 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c31 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c31:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c31:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c31:focus > circle,
.c31:focus > ellipse,
.c31:focus > line,
.c31:focus > path,
.c31:focus > polygon,
.c31:focus > polyline,
.c31:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c31:focus::-moz-focus-inner {
  border: 0;
}

.c37 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c37:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c37:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c37:focus > circle,
.c37:focus > ellipse,
.c37:focus > line,
.c37:focus > path,
.c37:focus > polygon,
.c37:focus > polyline,
.c37:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c37:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c26 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c26::-webkit-input-placeholder {
  color: #abb9c5;
}

.c26::-moz-placeholder {
  color: #abb9c5;
}

.c26:-ms-input-placeholder {
  color: #abb9c5;
}

.c26::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c26::-moz-focus-inner {
  border: none;
  outline: none;
}

.c26:-moz-placeholder,
.c26::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c27 {
  cursor: pointer;
}

.c23 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c39 {
  padding: 30px;
  max-width: 50%;
}

.c32 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c32 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c32:disabled {
  cursor: not-allowed;
}

.c38 {
  color: white;
}

.c38:hover:enabled,
.c38:focus:enabled,
.c38:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c38:hover:enabled svg,
.c38:focus:enabled svg,
.c38:active:enabled svg {
  color: white !important;
}

.c33 {
  color: #2A506F;
  border-color: #2A506F;
}

.c33 svg {
  color: #527699 !important;
}

.c33:hover:enabled,
.c33:focus:enabled,
.c33:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c33:hover:enabled svg,
.c33:focus:enabled svg,
.c33:active:enabled svg {
  color: white !important;
}

.c34 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c40 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c16 {
  margin-top: 4px;
  color: #527699;
}

.c19 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c18 {
  margin: 0;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c28 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c20 > button {
  width: 100%;
}

.c21 {
  width: 100%;
}

.c17 * {
  box-sizing: border-box;
}

.c17 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c17 pre {
  background-color: #f4f4f4;
}

.c17 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c17 code,
.c17 kbd,
.c17 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c17 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c17 dl {
  padding: 0;
}

.c17 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c17 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c17 td,
.c17 th {
  padding: 0;
}

.c17 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c17 table th {
  font-weight: 600;
}

.c17 table th,
.c17 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c17 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c17 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c17 blockquote {
  margin: 0;
}

.c17 blockquote,
.c17 dl,
.c17 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c17 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c17 blockquote > :first-child {
  margin-top: 0;
}

.c17 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c29 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                    <div
                      className="c16 c17 rendition-form-help"
                    >
                      <div>
                        <p
                          className="c18"
                        >
                          Once the 
                          <code>
                            Name
                          </code>
                           is set it cannot be changed
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c19 c17 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c19 c17 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c20 c21"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c22 c23"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c24"
                        >
                          <div
                            className="c25"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c26 c27 c28"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c29"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c30"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c19 c17 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c31 c32 c33 c34 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c35"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c36"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c37 c32 c38 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c39"
    >
      <div
        className="c40 "
      >
        <pre>
          {}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Hidden submit button 1`] = `
.c28 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c28 g {
  fill: inherit;
  stroke: inherit;
}

.c28 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c28 *[stroke*="#"],
.c28 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c28 *[fill-rule],
.c28 *[FILL-RULE],
.c28 *[fill*="#"],
.c28 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c34 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c29 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c29:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c29:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus > circle,
.c29:focus > ellipse,
.c29:focus > line,
.c29:focus > path,
.c29:focus > polygon,
.c29:focus > polyline,
.c29:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c24 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c24::-webkit-input-placeholder {
  color: #abb9c5;
}

.c24::-moz-placeholder {
  color: #abb9c5;
}

.c24:-ms-input-placeholder {
  color: #abb9c5;
}

.c24::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c24::-moz-focus-inner {
  border: none;
  outline: none;
}

.c24:-moz-placeholder,
.c24::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c25 {
  cursor: pointer;
}

.c21 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c35 {
  padding: 30px;
  max-width: 50%;
}

.c30 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c30 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c30:disabled {
  cursor: not-allowed;
}

.c31 {
  color: #2A506F;
  border-color: #2A506F;
}

.c31 svg {
  color: #527699 !important;
}

.c31:hover:enabled,
.c31:focus:enabled,
.c31:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c31:hover:enabled svg,
.c31:focus:enabled svg,
.c31:active:enabled svg {
  color: white !important;
}

.c32 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c36 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c16 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c26 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c18 > button {
  width: 100%;
}

.c19 {
  width: 100%;
}

.c17 * {
  box-sizing: border-box;
}

.c17 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c17 pre {
  background-color: #f4f4f4;
}

.c17 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c17 code,
.c17 kbd,
.c17 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c17 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c17 dl {
  padding: 0;
}

.c17 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c17 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c17 td,
.c17 th {
  padding: 0;
}

.c17 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c17 table th {
  font-weight: 600;
}

.c17 table th,
.c17 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c17 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c17 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c17 blockquote {
  margin: 0;
}

.c17 blockquote,
.c17 dl,
.c17 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c17 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c17 blockquote > :first-child {
  margin-top: 0;
}

.c17 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c27 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c18 c19"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c20 c21"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c22"
                        >
                          <div
                            className="c23"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c24 c25 c26"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c27"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c28"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c16 c17 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c29 c30 c31 c32 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c33"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c34"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <span />
        </form>
      </div>
    </div>
    <div
      className="c4 c35"
    >
      <div
        className="c36 "
      >
        <pre>
          {}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Preset values 1`] = `
.c28 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c28 g {
  fill: inherit;
  stroke: inherit;
}

.c28 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c28 *[stroke*="#"],
.c28 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c28 *[fill-rule],
.c28 *[FILL-RULE],
.c28 *[fill*="#"],
.c28 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c34 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c29 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c29:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c29:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus > circle,
.c29:focus > ellipse,
.c29:focus > line,
.c29:focus > path,
.c29:focus > polygon,
.c29:focus > polyline,
.c29:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus::-moz-focus-inner {
  border: 0;
}

.c35 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c35:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c35:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus > circle,
.c35:focus > ellipse,
.c35:focus > line,
.c35:focus > path,
.c35:focus > polygon,
.c35:focus > polyline,
.c35:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c24 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c24::-webkit-input-placeholder {
  color: #abb9c5;
}

.c24::-moz-placeholder {
  color: #abb9c5;
}

.c24:-ms-input-placeholder {
  color: #abb9c5;
}

.c24::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c24::-moz-focus-inner {
  border: none;
  outline: none;
}

.c24:-moz-placeholder,
.c24::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c25 {
  cursor: pointer;
}

.c21 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c37 {
  padding: 30px;
  max-width: 50%;
}

.c30 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c30 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c30:disabled {
  cursor: not-allowed;
}

.c36 {
  color: white;
}

.c36:hover:enabled,
.c36:focus:enabled,
.c36:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c36:hover:enabled svg,
.c36:focus:enabled svg,
.c36:active:enabled svg {
  color: white !important;
}

.c31 {
  color: #2A506F;
  border-color: #2A506F;
}

.c31 svg {
  color: #527699 !important;
}

.c31:hover:enabled,
.c31:focus:enabled,
.c31:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c31:hover:enabled svg,
.c31:focus:enabled svg,
.c31:active:enabled svg {
  color: white !important;
}

.c32 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c38 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c16 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c26 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c18 > button {
  width: 100%;
}

.c19 {
  width: 100%;
}

.c17 * {
  box-sizing: border-box;
}

.c17 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c17 pre {
  background-color: #f4f4f4;
}

.c17 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c17 code,
.c17 kbd,
.c17 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c17 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c17 dl {
  padding: 0;
}

.c17 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c17 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c17 td,
.c17 th {
  padding: 0;
}

.c17 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c17 table th {
  font-weight: 600;
}

.c17 table th,
.c17 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c17 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c17 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c17 blockquote {
  margin: 0;
}

.c17 blockquote,
.c17 dl,
.c17 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c17 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c17 blockquote > :first-child {
  margin-top: 0;
}

.c17 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c27 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value="Squirtle"
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c18 c19"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c20 c21"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c22"
                        >
                          <div
                            className="c23"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c24 c25 c26"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c27"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c28"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c16 c17 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c29 c30 c31 c32 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c33"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c34"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c35 c30 c36 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c37"
    >
      <div
        className="c38 "
      >
        <pre>
          {
    "Name": "Squirtle"
}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Secondary form button 1`] = `
.c28 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c28 g {
  fill: inherit;
  stroke: inherit;
}

.c28 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c28 *[stroke*="#"],
.c28 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c28 *[fill-rule],
.c28 *[FILL-RULE],
.c28 *[fill*="#"],
.c28 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c34 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c29 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c29:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c29:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus > circle,
.c29:focus > ellipse,
.c29:focus > line,
.c29:focus > path,
.c29:focus > polygon,
.c29:focus > polyline,
.c29:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus::-moz-focus-inner {
  border: 0;
}

.c35 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c35:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c35:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus > circle,
.c35:focus > ellipse,
.c35:focus > line,
.c35:focus > path,
.c35:focus > polygon,
.c35:focus > polyline,
.c35:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c24 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c24::-webkit-input-placeholder {
  color: #abb9c5;
}

.c24::-moz-placeholder {
  color: #abb9c5;
}

.c24:-ms-input-placeholder {
  color: #abb9c5;
}

.c24::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c24::-moz-focus-inner {
  border: none;
  outline: none;
}

.c24:-moz-placeholder,
.c24::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c25 {
  cursor: pointer;
}

.c21 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c38 {
  padding: 30px;
  max-width: 50%;
}

.c30 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c30 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c30:disabled {
  cursor: not-allowed;
}

.c36 {
  color: white;
}

.c36:hover:enabled,
.c36:focus:enabled,
.c36:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c36:hover:enabled svg,
.c36:focus:enabled svg,
.c36:active:enabled svg {
  color: white !important;
}

.c31 {
  color: #2A506F;
  border-color: #2A506F;
}

.c31 svg {
  color: #527699 !important;
}

.c31:hover:enabled,
.c31:focus:enabled,
.c31:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c31:hover:enabled svg,
.c31:focus:enabled svg,
.c31:active:enabled svg {
  color: white !important;
}

.c32 {
  margin-top: 16px;
}

.c37 {
  margin-left: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c39 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c16 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c26 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c18 > button {
  width: 100%;
}

.c19 {
  width: 100%;
}

.c17 * {
  box-sizing: border-box;
}

.c17 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c17 pre {
  background-color: #f4f4f4;
}

.c17 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c17 code,
.c17 kbd,
.c17 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c17 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c17 dl {
  padding: 0;
}

.c17 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c17 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c17 td,
.c17 th {
  padding: 0;
}

.c17 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c17 table th {
  font-weight: 600;
}

.c17 table th,
.c17 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c17 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c17 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c17 blockquote {
  margin: 0;
}

.c17 blockquote,
.c17 dl,
.c17 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c17 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c17 blockquote > :first-child {
  margin-top: 0;
}

.c17 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c27 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c18 c19"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c20 c21"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c22"
                        >
                          <div
                            className="c23"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c24 c25 c26"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c27"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c28"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c16 c17 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c29 c30 c31 c32 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c33"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c34"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c35 c30 c36 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
          <button
            className="c29 c30 c31 c37"
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="button"
          >
            Skip
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c38"
    >
      <div
        className="c39 "
      >
        <pre>
          {}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Simple 1`] = `
.c28 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c28 g {
  fill: inherit;
  stroke: inherit;
}

.c28 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c28 *[stroke*="#"],
.c28 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c28 *[fill-rule],
.c28 *[FILL-RULE],
.c28 *[fill*="#"],
.c28 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c23 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c34 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c29 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c29:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c29:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus > circle,
.c29:focus > ellipse,
.c29:focus > line,
.c29:focus > path,
.c29:focus > polygon,
.c29:focus > polyline,
.c29:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c29:focus::-moz-focus-inner {
  border: 0;
}

.c35 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c35:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c35:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus > circle,
.c35:focus > ellipse,
.c35:focus > line,
.c35:focus > path,
.c35:focus > polygon,
.c35:focus > polyline,
.c35:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c35:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c24 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c24::-webkit-input-placeholder {
  color: #abb9c5;
}

.c24::-moz-placeholder {
  color: #abb9c5;
}

.c24:-ms-input-placeholder {
  color: #abb9c5;
}

.c24::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c24::-moz-focus-inner {
  border: none;
  outline: none;
}

.c24:-moz-placeholder,
.c24::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c25 {
  cursor: pointer;
}

.c21 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c37 {
  padding: 30px;
  max-width: 50%;
}

.c30 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c30 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c30:disabled {
  cursor: not-allowed;
}

.c36 {
  color: white;
}

.c36:hover:enabled,
.c36:focus:enabled,
.c36:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c36:hover:enabled svg,
.c36:focus:enabled svg,
.c36:active:enabled svg {
  color: white !important;
}

.c31 {
  color: #2A506F;
  border-color: #2A506F;
}

.c31 svg {
  color: #527699 !important;
}

.c31:hover:enabled,
.c31:focus:enabled,
.c31:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c31:hover:enabled svg,
.c31:focus:enabled svg,
.c31:active:enabled svg {
  color: white !important;
}

.c32 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c38 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c16 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c26 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c18 > button {
  width: 100%;
}

.c19 {
  width: 100%;
}

.c17 * {
  box-sizing: border-box;
}

.c17 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c17 pre {
  background-color: #f4f4f4;
}

.c17 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c17 code,
.c17 kbd,
.c17 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c17 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c17 dl {
  padding: 0;
}

.c17 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c17 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c17 td,
.c17 th {
  padding: 0;
}

.c17 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c17 table th {
  font-weight: 600;
}

.c17 table th,
.c17 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c17 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c17 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c17 blockquote {
  margin: 0;
}

.c17 blockquote,
.c17 dl,
.c17 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c17 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c17 blockquote > :first-child {
  margin-top: 0;
}

.c17 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c27 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c16 c17 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c18 c19"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c20 c21"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c22"
                        >
                          <div
                            className="c23"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c24 c25 c26"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c27"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c28"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c16 c17 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c29 c30 c31 c32 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c33"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c34"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c35 c30 c36 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c37"
    >
      <div
        className="c38 "
      >
        <pre>
          {}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form UI schema 1`] = `
.c40 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c40 g {
  fill: inherit;
  stroke: inherit;
}

.c40 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c40 *[stroke*="#"],
.c40 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c40 *[fill-rule],
.c40 *[FILL-RULE],
.c40 *[fill*="#"],
.c40 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c34 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c35 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c39 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c44 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c45 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c22 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  line-height: 0;
}

.c22:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c22:focus > circle,
.c22:focus > ellipse,
.c22:focus > line,
.c22:focus > path,
.c22:focus > polygon,
.c22:focus > polyline,
.c22:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c22:focus::-moz-focus-inner {
  border: 0;
}

.c32 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c41 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c41:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c41:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c41:focus > circle,
.c41:focus > ellipse,
.c41:focus > line,
.c41:focus > path,
.c41:focus > polygon,
.c41:focus > polyline,
.c41:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c41:focus::-moz-focus-inner {
  border: 0;
}

.c46 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c46:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c46:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c46:focus > circle,
.c46:focus > ellipse,
.c46:focus > line,
.c46:focus > path,
.c46:focus > polygon,
.c46:focus > polyline,
.c46:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c46:focus::-moz-focus-inner {
  border: 0;
}

.c13 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c13::-webkit-input-placeholder {
  color: #abb9c5;
}

.c13::-moz-placeholder {
  color: #abb9c5;
}

.c13:-ms-input-placeholder {
  color: #abb9c5;
}

.c13::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c13::-moz-focus-inner {
  border: none;
  outline: none;
}

.c13:-moz-placeholder,
.c13::-moz-placeholder {
  opacity: 1;
}

.c36 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c36::-webkit-input-placeholder {
  color: #abb9c5;
}

.c36::-moz-placeholder {
  color: #abb9c5;
}

.c36:-ms-input-placeholder {
  color: #abb9c5;
}

.c36::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c36::-moz-focus-inner {
  border: none;
  outline: none;
}

.c36:-moz-placeholder,
.c36::-moz-placeholder {
  opacity: 1;
}

.c12 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c37 {
  cursor: pointer;
}

.c33 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c16 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c16::-webkit-input-placeholder {
  color: #abb9c5;
}

.c16::-moz-placeholder {
  color: #abb9c5;
}

.c16:-ms-input-placeholder {
  color: #abb9c5;
}

.c16::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c16::-moz-focus-inner {
  border: none;
  outline: none;
}

.c16:-moz-placeholder,
.c16::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c48 {
  padding: 30px;
  max-width: 50%;
}

.c23 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c23 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c23:disabled {
  cursor: not-allowed;
}

.c47 {
  color: white;
}

.c47:hover:enabled,
.c47:focus:enabled,
.c47:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c47:hover:enabled svg,
.c47:focus:enabled svg,
.c47:active:enabled svg {
  color: white !important;
}

.c42 {
  color: #2A506F;
  border-color: #2A506F;
}

.c42 svg {
  color: #527699 !important;
}

.c42:hover:enabled,
.c42:focus:enabled,
.c42:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c42:hover:enabled svg,
.c42:focus:enabled svg,
.c42:active:enabled svg {
  color: white !important;
}

.c24 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c24:hover:enabled,
.c24:focus:enabled,
.c24:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c24:hover:enabled svg,
.c24:focus:enabled svg,
.c24:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c25 {
  padding: 8px;
}

.c43 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c49 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c19 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c14:focus {
  border-color: #527699;
}

.c18 {
  height: 48px;
  padding: 14px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c18:focus {
  border-color: #527699;
}

.c15 {
  width: 100%;
}

.c21 {
  padding-right: 38px;
  width: 100%;
}

.c17 {
  padding: 14px 20px;
  color: #2A506F;
  cursor: auto;
  resize: vertical;
  display: block;
  width: 100%;
}

.c17:focus {
  border-color: #527699;
}

.c38 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 46px;
  padding: 14px;
  padding-right: 0px;
  padding-left: 20px;
}

.c30 > button {
  width: 100%;
}

.c31 {
  width: 100%;
}

.c20 * {
  box-sizing: border-box;
}

.c20 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c20 pre {
  background-color: #f4f4f4;
}

.c20 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c20 code,
.c20 kbd,
.c20 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c20 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c20 dl {
  padding: 0;
}

.c20 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c20 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c20 td,
.c20 th {
  padding: 0;
}

.c20 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c20 table th {
  font-weight: 600;
}

.c20 table th,
.c20 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c20 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c20 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c20 blockquote {
  margin: 0;
}

.c20 blockquote,
.c20 dl,
.c20 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c20 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c20 blockquote > :first-child {
  margin-top: 0;
}

.c20 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c27 {
  padding-bottom: 4px;
  position: relative;
  margin-top: 8px;
  margin-bottom: 16px;
  font-size: 10px;
}

.c26 {
  position: absolute;
  right: 8px;
  top: 50%;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
}

.c29 {
  -webkit-transition: all ease-out 150ms;
  transition: all ease-out 150ms;
  position: absolute;
  height: 4px;
  background-color: red;
  min-width: 5px;
  bottom: 0;
}

.c28 {
  margin: 0;
  margin-bottom: 8px;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c39 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <textarea
                      autoFocus={false}
                      className="c16 c17 form-control"
                      disabled={false}
                      id="root_Description"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder=""
                      readOnly={false}
                      required={false}
                      rows={5}
                      value=""
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c18 c15"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c19 c20 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c12"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c13 c14 c15"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c19 c20 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      style={
                        Object {
                          "position": "relative",
                        }
                      }
                    >
                      <div
                        className="c12"
                      >
                        
                        <input
                          autoFocus={false}
                          className="c13 c14 c21"
                          disabled={false}
                          id="root_poke_password"
                          label="Poke Password"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          placeholder=""
                          readOnly={false}
                          required={false}
                          type="password"
                          value="Secret password"
                        />
                      </div>
                      <button
                        className="c22 c23 c24 c25 c26"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-eye-slash fa-w-20 fa-fw "
                          data-icon="eye-slash"
                          data-prefix="far"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 640 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </button>
                    </div>
                    <div
                      className="c27"
                    >
                      <p
                        className="c28"
                      >
                        Password strength: 
                        <em>
                          Strong
                        </em>
                      </p>
                      <div
                        className="c29"
                        style={
                          Object {
                            "backgroundColor": "green",
                            "width": "75%",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c30 c31"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c32 c33"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c34"
                        >
                          <div
                            className="c35"
                          >
                            <div
                              className="c12"
                            >
                              <input
                                autoComplete="off"
                                className="c36 c37 c38"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c39"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c40"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c19 c20 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c41 c23 c42 c43 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c44"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c45"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c46 c23 c47 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c48"
    >
      <div
        className="c49 "
      >
        <pre>
          {
    "poke_password": "Secret password"
}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form Warnings 1`] = `
.c32 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c32 g {
  fill: inherit;
  stroke: inherit;
}

.c32 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c32 *[stroke*="#"],
.c32 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c32 *[fill-rule],
.c32 *[FILL-RULE],
.c32 *[fill*="#"],
.c32 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c26 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c31 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c37 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c38 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  width: 8px;
}

.c24 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c33 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c33:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c33:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c33:focus > circle,
.c33:focus > ellipse,
.c33:focus > line,
.c33:focus > path,
.c33:focus > polygon,
.c33:focus > polyline,
.c33:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c33:focus::-moz-focus-inner {
  border: 0;
}

.c39 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c39:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c39:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c39:focus > circle,
.c39:focus > ellipse,
.c39:focus > line,
.c39:focus > path,
.c39:focus > polygon,
.c39:focus > polyline,
.c39:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c39:focus::-moz-focus-inner {
  border: 0;
}

.c18 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c18::-webkit-input-placeholder {
  color: #abb9c5;
}

.c18::-moz-placeholder {
  color: #abb9c5;
}

.c18:-ms-input-placeholder {
  color: #abb9c5;
}

.c18::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c18::-moz-focus-inner {
  border: none;
  outline: none;
}

.c18:-moz-placeholder,
.c18::-moz-placeholder {
  opacity: 1;
}

.c28 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c28::-webkit-input-placeholder {
  color: #abb9c5;
}

.c28::-moz-placeholder {
  color: #abb9c5;
}

.c28:-ms-input-placeholder {
  color: #abb9c5;
}

.c28::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c28::-moz-focus-inner {
  border: none;
  outline: none;
}

.c28:-moz-placeholder,
.c28::-moz-placeholder {
  opacity: 1;
}

.c17 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c29 {
  cursor: pointer;
}

.c25 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c10 {
  margin-right: 8px;
}

.c41 {
  padding: 30px;
  max-width: 50%;
}

.c34 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c34 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c34:disabled {
  cursor: not-allowed;
}

.c40 {
  color: white;
}

.c40:hover:enabled,
.c40:focus:enabled,
.c40:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c40:hover:enabled svg,
.c40:focus:enabled svg,
.c40:active:enabled svg {
  color: white !important;
}

.c35 {
  color: #2A506F;
  border-color: #2A506F;
}

.c35 svg {
  color: #527699 !important;
}

.c35:hover:enabled,
.c35:focus:enabled,
.c35:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c35:hover:enabled svg,
.c35:focus:enabled svg,
.c35:active:enabled svg {
  color: white !important;
}

.c36 {
  margin-top: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c42 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c13 {
  margin-bottom: auto;
  margin-right: 8px;
  color: #FCA321;
}

.c21 {
  margin-bottom: 4px;
  font-size: 12px;
  color: #527699;
}

.c14 {
  color: #ad6800;
}

.c16 {
  margin: 0;
}

.c12 {
  margin-bottom: 8px;
}

.c19 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c19:focus {
  border-color: #527699;
}

.c20 {
  width: 100%;
}

.c30 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c22 > button {
  width: 100%;
}

.c23 {
  width: 100%;
}

.c15 * {
  box-sizing: border-box;
}

.c15 code {
  background-color: #f4f4f4;
  padding: 0.2em 0px;
  margin: 0px;
  border-radius: 3px;
  line-height: 1.2;
}

.c15 pre {
  background-color: #f4f4f4;
}

.c15 pre > code {
  display: block;
  background: none;
  overflow-y: auto;
}

.c15 code,
.c15 kbd,
.c15 pre {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c15 kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #2A506F;
  vertical-align: middle;
  background-color: rgba(244,244,244,0.7);
  border: solid 1px #c6c8c9;
  border-bottom-color: hsl(200,2.7%,70.4%);
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 hsl(200,2.7%,70.4%);
}

.c15 dl {
  padding: 0;
}

.c15 dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: 600;
}

.c15 dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.c15 td,
.c15 th {
  padding: 0;
}

.c15 table {
  border-spacing: 0;
  border-collapse: collapse;
  display: block;
  width: 100%;
  overflow: auto;
}

.c15 table th {
  font-weight: 600;
}

.c15 table th,
.c15 table td {
  padding: 6px 13px;
  border: 1px solid #c6c8c9;
}

.c15 table tr {
  background-color: #fff;
  border-top: 1px solid #f4f4f4;
}

.c15 table tr:nth-child(2n) {
  background-color: #f4f4f4;
}

.c15 blockquote {
  margin: 0;
}

.c15 blockquote,
.c15 dl,
.c15 table {
  margin-top: 0;
  margin-bottom: 16px;
}

.c15 blockquote {
  padding: 0 1em;
  color: #2A506F;
  border-left: 0.25em solid #c6c8c9;
}

.c15 blockquote > :first-child {
  margin-top: 0;
}

.c15 blockquote > :last-child {
  margin-bottom: 0;
}

.c8 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c11 {
  display: inline-block;
  font-size: 12px;
  margin-bottom: 4px;
  color: #2A506F;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c31 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <legend
                className="c8"
                id="root__title"
              >
                Pokèmon
              </legend>
              <div
                className="c2 c9"
              >
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Name"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Name"
                    >
                      Name
                    </label>
                    <div
                      className="c2 c3 c12"
                    >
                      <div
                        className="c13"
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-exclamation-triangle fa-w-18 "
                          data-icon="exclamation-triangle"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 576 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </div>
                      <span
                        className="c14"
                      >
                        <div
                          className="c15"
                        >
                          <div>
                            <p
                              className="c16"
                            >
                              Once the 
                              <code>
                                Name
                              </code>
                               is set it cannot be changed
                            </p>
                          </div>
                        </div>
                      </span>
                    </div>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoComplete="off"
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_Name"
                        label="Name"
                        list="dummy-datalist"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                    <datalist
                      id="dummy-datalist"
                    />
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Height"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Height"
                    >
                      Height
                    </label>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_Height"
                        label="Height"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_Weight"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Weight"
                    >
                      Weight
                    </label>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_Weight"
                        label="Weight"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Description"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Description"
                    >
                      Description
                    </label>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_Description"
                        label="Description"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Category"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Category"
                    >
                      Category
                    </label>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_Category"
                        label="Category"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_Abilities"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_Abilities"
                    >
                      Abilities
                    </label>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_Abilities"
                        label="Abilities"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-number rendition-form__field--root_pokedex_number"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_pokedex_number"
                    >
                      National Pokèdex Number
                    </label>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_pokedex_number"
                        label="National Pokèdex Number"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="number"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-boolean rendition-form__field--root_caught"
                  >
                    <div
                      className="checkbox "
                    >
                      <label>
                        <input
                          autoFocus={false}
                          checked={false}
                          disabled={false}
                          id="root_caught"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          type="checkbox"
                        />
                        <span>
                          caught
                        </span>
                      </label>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_first_seen"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_first_seen"
                    >
                      First seen
                    </label>
                    <div
                      className="c21 c15 rendition-form-description"
                      id="root_first_seen__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          The first time you saw this pokèmon
                        </p>
                      </div>
                    </div>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_first_seen"
                        label="First seen"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="datetime-local"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_poke_password"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_poke_password"
                    >
                      Poke Password
                    </label>
                    <div
                      className="c21 c15 rendition-form-description"
                      id="root_poke_password__description"
                    >
                      <div>
                        <p
                          className=""
                        >
                          Password to access the pokèmon's abilities
                        </p>
                      </div>
                    </div>
                    <div
                      className="c17"
                    >
                      
                      <input
                        autoFocus={false}
                        className="c18 c19 c20"
                        disabled={false}
                        id="root_poke_password"
                        label="Poke Password"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        placeholder=""
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-string rendition-form__field--root_environment"
                  >
                    <label
                      className="c11 control-label"
                      htmlFor="root_environment"
                    >
                      environment
                    </label>
                    <div
                      className="c22 c23"
                    >
                      <button
                        aria-label="Open Drop"
                        className="c24 c25"
                        id="root_environment"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c26"
                        >
                          <div
                            className="c27"
                          >
                            <div
                              className="c17"
                            >
                              <input
                                autoComplete="off"
                                className="c28 c29 c30"
                                id="root_environment__input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                readOnly={true}
                                tabIndex="-1"
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                          <div
                            className="c31"
                            style={
                              Object {
                                "minWidth": "auto",
                              }
                            }
                          >
                            <svg
                              aria-label="FormDown"
                              className="c32"
                              viewBox="0 0 24 24"
                            >
                              <polyline
                                fill="none"
                                points="18 9 12 15 6 9"
                                stroke="#000"
                                strokeWidth="2"
                              />
                            </svg>
                          </div>
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c4 c10"
                >
                  <div
                    className="c2 c7 form-group field field-array rendition-form__field--root_tags"
                  >
                    <div>
                      <legend
                        className="c8"
                        id="root_tags__title"
                      >
                        Tags
                      </legend>
                      <div
                        className="c21 c15 rendition-form-description"
                        id="root_tags__description"
                      >
                        <div>
                          <p
                            className=""
                          >
                            Add useful tags to your pokèmon
                          </p>
                        </div>
                      </div>
                      <button
                        className="c33 c34 c35 c36 rendition-form-array-item__add-item"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        type="button"
                      >
                        <div
                          className="c37"
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-plus fa-w-14 "
                            data-icon="plus"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 448 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                          <div
                            className="c38"
                          />
                          Add item
                        </div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c39 c34 c40 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c41"
    >
      <div
        className="c42 "
      >
        <pre>
          {}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Form patternProperties 1`] = `
.c14 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c14:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus > circle,
.c14:focus > ellipse,
.c14:focus > line,
.c14:focus > path,
.c14:focus > polygon,
.c14:focus > polyline,
.c14:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c14:focus::-moz-focus-inner {
  border: 0;
}

.c20 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #00AEEF;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  background-color: #00AEEF;
  color: #444444;
  border-radius: 20px;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c20:hover {
  box-shadow: 0px 0px 0px 2px #00AEEF;
}

.c20:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus > circle,
.c20:focus > ellipse,
.c20:focus > line,
.c20:focus > path,
.c20:focus > polygon,
.c20:focus > polyline,
.c20:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c20:focus::-moz-focus-inner {
  border: 0;
}

.c12 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c12::-webkit-input-placeholder {
  color: #abb9c5;
}

.c12::-moz-placeholder {
  color: #abb9c5;
}

.c12:-ms-input-placeholder {
  color: #abb9c5;
}

.c12::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c12::-moz-focus-inner {
  border: none;
  outline: none;
}

.c12:-moz-placeholder,
.c12::-moz-placeholder {
  opacity: 1;
}

.c18 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  opacity: 0.4;
  cursor: default;
}

.c18::-webkit-input-placeholder {
  color: #abb9c5;
}

.c18::-moz-placeholder {
  color: #abb9c5;
}

.c18:-ms-input-placeholder {
  color: #abb9c5;
}

.c18::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c18::-moz-focus-inner {
  border: none;
  outline: none;
}

.c18:-moz-placeholder,
.c18::-moz-placeholder {
  opacity: 1;
}

.c11 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 {
  margin: 30px;
}

.c7 {
  margin-bottom: 8px;
}

.c9 {
  margin-right: 8px;
}

.c22 {
  padding: 30px;
  max-width: 50%;
}

.c15 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c15 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c15:disabled {
  cursor: not-allowed;
}

.c21 {
  color: white;
}

.c21:hover:enabled,
.c21:focus:enabled,
.c21:active:enabled {
  box-shadow: none;
  background: hsl(196.29999999999995,100%,37.5%);
  border-color: hsl(196.29999999999995,100%,37.5%);
  color: white;
  opacity: initial;
}

.c21:hover:enabled svg,
.c21:focus:enabled svg,
.c21:active:enabled svg {
  color: white !important;
}

.c16 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c16:hover:enabled,
.c16:focus:enabled,
.c16:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c16:hover:enabled svg,
.c16:focus:enabled svg,
.c16:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c17 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c23 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c13 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c13:focus {
  border-color: #527699;
}

.c19 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: not-allowed;
}

.c19:focus {
  border-color: #527699;
}

.c10 {
  font-size: 14px;
  color: #252629;
  margin-top: 16px;
  margin-bottom: 8px;
  width: 100%;
}

.c6 section {
  margin: 0;
  padding: 0;
  border: 0;
}

.c6 label {
  font-size: 12px;
}

.c6 input {
  font-size: 14px;
}

.c6 .panel-danger,
.c6 .error-detail {
  font-size: 12px;
  margin-top: 4px;
  margin-bottom: 4px;
  list-style-type: none;
  padding-left: 0;
}

.c6 .text-danger {
  color: #FF423D;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <div
        className="c2 c6"
      >
        <form
          className="rjsf"
          noValidate={false}
          onSubmit={[Function]}
        >
          <div
            className="c2 c7 form-group field field-object rendition-form__field--root"
          >
            <section>
              <div
                className="c2 c8"
              >
                <div
                  className="c4 c9"
                >
                  <div
                    className="c2 c7 form-group field field-object rendition-form__field--root_dynamicObject"
                  >
                    <section>
                      <legend
                        className="c10"
                        id="root_dynamicObject__title"
                      >
                        Rules
                      </legend>
                      <div
                        className="c2 c8"
                      >
                        <div
                          className="c4 c9"
                        >
                          <table>
                            <thead>
                              <tr>
                                <th>
                                  Key
                                </th>
                                <th>
                                  Rule
                                </th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td>
                                  <div
                                    className="c11"
                                  >
                                    <input
                                      autoComplete="off"
                                      className="c12 c13 rendition-form-pattern-properties__key-field"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      pattern="^[0-9]+$"
                                      placeholder="Key"
                                      value="123"
                                    />
                                  </div>
                                </td>
                                <td>
                                  <div
                                    className="c11"
                                  >
                                    <input
                                      autoComplete="off"
                                      className="c12 c13 rendition-form-pattern-properties__value-field"
                                      id="foo"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Rule"
                                      value="foo"
                                    />
                                  </div>
                                  <button
                                    className="c14 c15 c16 c17 rendition-form-pattern-properties__remove-field"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseOut={[Function]}
                                    onMouseOver={[Function]}
                                    type="button"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-trash-alt fa-w-14 "
                                      data-icon="trash-alt"
                                      data-prefix="far"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 448 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </button>
                                </td>
                              </tr>
                              <tr>
                                <td>
                                  <div
                                    className="c11"
                                  >
                                    <input
                                      autoComplete="off"
                                      className="c18 c19 rendition-form-pattern-properties__key-field"
                                      disabled={true}
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      pattern="^[0-9]+$"
                                      placeholder="Key"
                                      value=""
                                    />
                                  </div>
                                </td>
                                <td>
                                  <div
                                    className="c11"
                                  >
                                    <input
                                      autoComplete="off"
                                      className="c12 c13 rendition-form-pattern-properties__value-field"
                                      id="foo"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      placeholder="Rule"
                                      value=""
                                    />
                                  </div>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    </section>
                  </div>
                </div>
              </div>
            </section>
          </div>
          <button
            className="c20 c15 c21 "
            onBlur={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
    <div
      className="c4 c22"
    >
      <div
        className="c23 "
      >
        <pre>
          {
    "dynamicObject": {
        "123": "foo"
    }
}
        </pre>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Heading Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  font-weight: normal;
}

.c8 {
  font-weight: normal;
  font-weight: 600;
}

.c5 {
  margin: 0;
  font-size: 58px;
}

.c6 {
  margin: 0;
  font-size: 34px;
}

.c7 {
  margin: 0;
  font-size: 24px;
}

.c9 {
  margin: 0;
  font-size: 18px;
}

.c10 {
  margin: 0;
  font-size: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <h1
      className="c4 c5"
    >
      Heading h1
    </h1>
    <h2
      className="c4 c6"
    >
      Heading h2
    </h2>
    <h3
      className="c4 c7"
    >
      Heading h3
    </h3>
    <h4
      className="c8 c9"
    >
      Heading h4
    </h4>
    <h5
      className="c8 c10"
    >
      Heading h5
    </h5>
  </div>
</div>
`;

exports[`Storyshots Next/HighlightedName Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c25 {
  margin-top: 48px;
  margin-bottom: 48px;
  margin-left: 16px;
  margin-right: 16px;
}

.c4 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #bf4066;
}

.c7 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #53aca0;
}

.c8 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #842d86;
}

.c9 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #611f93;
}

.c10 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #87c5c4;
}

.c11 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #93761f;
}

.c12 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #783a61;
}

.c13 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #86582d;
}

.c14 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #af6ce0;
}

.c15 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #ac5359;
}

.c16 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #e0a26c;
}

.c17 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #5357ac;
}

.c18 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #79d28c;
}

.c19 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #2d3386;
}

.c20 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #2d82d2;
}

.c21 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #8840bf;
}

.c22 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #6c77e0;
}

.c23 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #65931f;
}

.c24 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #87aac5;
}

.c26 {
  padding: 8px;
  font-size: 14px;
  color: #fff;
  background-color: #ac5368;
}

.c27 {
  padding: 8px;
  font-size: 14px;
  color: #2A506F;
  background-color: #eee;
}

.c29 {
  padding: 8px;
  font-size: 14px;
  color: #2A506F;
  background-color: #87c5b0;
}

.c31 {
  padding: 8px;
  font-size: 14px;
  color: #2A506F;
  background-color: maroon;
}

.c5 {
  display: inline-block;
  border-radius: 2px;
  line-height: 1;
}

.c6 {
  margin-right: 8px;
}

.c28 {
  margin-right: 8px;
  background-color: #eee;
}

.c30 {
  margin-right: 8px;
  color: black;
}

.c32 {
  margin-right: 8px;
  color: yellow;
  background-color: maroon;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c0 c1"
  >
    <div
      className="c2 c3"
    >
      <span
        className="c4 c5 c6"
      >
        Frontend
      </span>
      <span
        className="c7 c5 c6"
      >
        Backend
      </span>
      <span
        className="c8 c5 c6"
      >
        Logger
      </span>
      <span
        className="c9 c5 c6"
      >
        Emitter
      </span>
      <span
        className="c10 c5 c6"
      >
        Builder
      </span>
    </div>
    <div
      className="c2 c3"
    >
      <span
        className="c11 c5 c6"
      >
        API
      </span>
      <span
        className="c12 c5 c6"
      >
        Reporter
      </span>
      <span
        className="c13 c5 c6"
      >
        Sense
      </span>
      <span
        className="c14 c5 c6"
      >
        Sound
      </span>
      <span
        className="c15 c5 c6"
      >
        Bluetooth
      </span>
    </div>
    <div
      className="c2 c3"
    >
      <span
        className="c16 c5 c6"
      >
        balenaOS
      </span>
      <span
        className="c17 c5 c6"
      >
        balenaEtcher
      </span>
      <span
        className="c18 c5 c6"
      >
        balenaCloud
      </span>
      <span
        className="c19 c5 c6"
      >
        balenaFin
      </span>
      <span
        className="c17 c5 c6"
      >
        balenaEngine
      </span>
    </div>
    <div
      className="c2 c3"
    >
      <span
        className="c20 c5 c6"
      >
        Base Images
      </span>
      <span
        className="c21 c5 c6"
      >
        Docs
      </span>
      <span
        className="c22 c5 c6"
      >
        Blog
      </span>
      <span
        className="c23 c5 c6"
      >
        Forum
      </span>
      <span
        className="c24 c5 c6"
      >
        Projects
      </span>
    </div>
    <div
      className="c2 c25"
    >
      <span
        className="c26 c5 c6"
      >
        Default with Different Text
      </span>
      <span
        className="c27 c5 c28"
      >
        Custom Light Background
      </span>
      <span
        className="c29 c5 c30"
      >
        Custom Text Color
      </span>
      <span
        className="c31 c5 c32"
      >
        Custom Background and Text Color
      </span>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Input Emphasized 1`] = `
.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c5::-webkit-input-placeholder {
  color: #abb9c5;
}

.c5::-moz-placeholder {
  color: #abb9c5;
}

.c5:-ms-input-placeholder {
  color: #abb9c5;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c10 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  opacity: 0.4;
  cursor: default;
}

.c10::-webkit-input-placeholder {
  color: #abb9c5;
}

.c10::-moz-placeholder {
  color: #abb9c5;
}

.c10:-ms-input-placeholder {
  color: #abb9c5;
}

.c10::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c10::-moz-focus-inner {
  border: none;
  outline: none;
}

.c10:-moz-placeholder,
.c10::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  height: 48px;
  padding: 14px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c6:focus {
  border-color: #527699;
}

.c8 {
  height: 48px;
  padding: 14px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
  border-color: #FF423D;
}

.c8:focus {
  border-color: #527699;
}

.c9 {
  height: 48px;
  padding: 14px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
  border-color: #1AC135;
}

.c9:focus {
  border-color: #527699;
}

.c11 {
  height: 48px;
  padding: 14px;
  padding-left: 20px;
  color: #2A506F;
  cursor: not-allowed;
}

.c11:focus {
  border-color: #527699;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c6 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c8 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c9 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c10 c11 c7"
        disabled={true}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Input Input types 1`] = `
.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c5::-webkit-input-placeholder {
  color: #abb9c5;
}

.c5::-moz-placeholder {
  color: #abb9c5;
}

.c5:-ms-input-placeholder {
  color: #abb9c5;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c6:focus {
  border-color: #527699;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <label>
      <div>
        Text
      </div>
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6 c7"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Placeholder Text"
          type="text"
        />
      </div>
    </label>
    <label>
      <div>
        Number
      </div>
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6 c7"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Placeholder Number"
          type="number"
        />
      </div>
    </label>
    <label>
      <div>
        Date
      </div>
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6 c7"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Placeholder Date"
          type="date"
        />
      </div>
    </label>
    <label>
      <div>
        Month
      </div>
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6 c7"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Placeholder Month"
          type="month"
        />
      </div>
    </label>
    <label>
      <div>
        Password
      </div>
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6 c7"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Placeholder Password"
          type="password"
        />
      </div>
    </label>
    <label>
      <div>
        Time
      </div>
      <div
        className="c4"
      >
        <input
          autoComplete="off"
          className="c5 c6 c7"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Placeholder Time"
          type="time"
        />
      </div>
    </label>
  </div>
</div>
`;

exports[`Storyshots Next/Input Monospace 1`] = `
.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c5::-webkit-input-placeholder {
  color: #abb9c5;
}

.c5::-moz-placeholder {
  color: #abb9c5;
}

.c5:-ms-input-placeholder {
  color: #abb9c5;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c10 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  opacity: 0.4;
  cursor: default;
}

.c10::-webkit-input-placeholder {
  color: #abb9c5;
}

.c10::-moz-placeholder {
  color: #abb9c5;
}

.c10:-ms-input-placeholder {
  color: #abb9c5;
}

.c10::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c10::-moz-focus-inner {
  border: none;
  outline: none;
}

.c10:-moz-placeholder,
.c10::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c6:focus {
  border-color: #527699;
}

.c8 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
  border-color: #FF423D;
}

.c8:focus {
  border-color: #527699;
}

.c9 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
  border-color: #1AC135;
}

.c9:focus {
  border-color: #527699;
}

.c11 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: not-allowed;
}

.c11:focus {
  border-color: #527699;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c6 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c8 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c9 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c10 c11 c7"
        disabled={true}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Input Standard 1`] = `
.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c5::-webkit-input-placeholder {
  color: #abb9c5;
}

.c5::-moz-placeholder {
  color: #abb9c5;
}

.c5:-ms-input-placeholder {
  color: #abb9c5;
}

.c5::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c10 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  opacity: 0.4;
  cursor: default;
}

.c10::-webkit-input-placeholder {
  color: #abb9c5;
}

.c10::-moz-placeholder {
  color: #abb9c5;
}

.c10:-ms-input-placeholder {
  color: #abb9c5;
}

.c10::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c10::-moz-focus-inner {
  border: none;
  outline: none;
}

.c10:-moz-placeholder,
.c10::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
}

.c6:focus {
  border-color: #527699;
}

.c8 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
  border-color: #FF423D;
}

.c8:focus {
  border-color: #527699;
}

.c9 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: auto;
  border-color: #1AC135;
}

.c9:focus {
  border-color: #527699;
}

.c11 {
  height: 38px;
  padding: 10px;
  padding-left: 20px;
  color: #2A506F;
  cursor: not-allowed;
}

.c11:focus {
  border-color: #527699;
}

.c7 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c6 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c8 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c5 c9 c7"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
    <div
      className="c4"
    >
      <input
        autoComplete="off"
        className="c10 c11 c7"
        disabled={true}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Placeholder Text"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/List Ordered List 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c5 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c5:active,
.c5:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c6 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c2 {
  padding: 0;
  margin: 0;
  list-style: none;
}

.c2 > li {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > li:first-child {
  margin-top: 0;
}

.c2 > li:last-child {
  margin-bottom: 0;
}

.c2 > li:before {
  text-align: center;
}

.c3 {
  counter-reset: ordered-list-counter;
}

.c3 > li {
  margin: 16px 0;
  counter-increment: ordered-list-counter;
}

.c3 > li:before {
  content: counter(ordered-list-counter);
  margin-right: 8px;
  background: #1496E1;
  height: 1.5em;
  width: 1.5em;
  min-width: 1.5em;
  line-height: 1.5em;
  color: white;
  border-radius: 50%;
}

.c4 {
  margin: 16px;
}

<div
  className="c0 c1"
>
  <ol
    className="c2 c3 c4"
  >
    <li>
      <div
        className=""
      >
        You can put 
        <a
          className="c5 c6"
          color="primary.main"
          href={[Function]}
        >
          a link
        </a>
      </div>
    </li>
    <li>
      <div
        className=""
      >
        And also some 
        <code>
          code
        </code>
      </div>
    </li>
    <li>
      <div
        className=""
      >
        Multiline text
        <div
          className=""
        >
          that breaks into multiple lines
        </div>
      </div>
    </li>
  </ol>
</div>
`;

exports[`Storyshots Next/List Unordered List 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c5 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c5:active,
.c5:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c6 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c2 {
  padding: 0;
  margin: 0;
  list-style: none;
}

.c2 > li {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > li:first-child {
  margin-top: 0;
}

.c2 > li:last-child {
  margin-bottom: 0;
}

.c2 > li:before {
  text-align: center;
}

.c3 > li {
  margin: 4px 0;
}

.c3 > li:before {
  content: '\\2022';
  margin-right: 8px;
  -webkit-transform: translateY( -1px );
  -ms-transform: translateY( -1px );
  transform: translateY( -1px );
  color: #527699;
}

.c4 {
  margin: 16px;
}

<div
  className="c0 c1"
>
  <ul
    className="c2 c3 c4"
  >
    <li>
      <div
        className=""
      >
        You can put 
        <a
          className="c5 c6"
          color="primary.main"
          href={[Function]}
        >
          a link
        </a>
      </div>
    </li>
    <li>
      <div
        className=""
      >
        And also some 
        <code>
          code
        </code>
      </div>
    </li>
    <li>
      <div
        className=""
      >
        Multiline text
        <div
          className=""
        >
          that breaks into multiple lines
        </div>
      </div>
    </li>
  </ul>
</div>
`;

exports[`Storyshots Next/Map Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  height: 600px;
}

.c4 {
  height: 100%;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4"
    >
      <div />
      <div>
        Loading...
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Select Advanced 1`] = `
.c15 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c15 g {
  fill: inherit;
  stroke: inherit;
}

.c15 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c15 *[stroke*="#"],
.c15 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c15 *[fill-rule],
.c15 *[FILL-RULE],
.c15 *[fill*="#"],
.c15 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c11 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c11::-webkit-input-placeholder {
  color: #abb9c5;
}

.c11::-moz-placeholder {
  color: #abb9c5;
}

.c11:-ms-input-placeholder {
  color: #abb9c5;
}

.c11::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c11::-moz-focus-inner {
  border: none;
  outline: none;
}

.c11:-moz-placeholder,
.c11::-moz-placeholder {
  opacity: 1;
}

.c10 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c12 {
  cursor: pointer;
}

.c7 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c4 > button {
  width: 100%;
}

.c5 {
  margin: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c14 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Passed an object as option"
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Object 1"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Select Standard 1`] = `
.c15 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c15 g {
  fill: inherit;
  stroke: inherit;
}

.c15 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c15 *[stroke*="#"],
.c15 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c15 *[fill-rule],
.c15 *[FILL-RULE],
.c15 *[fill*="#"],
.c15 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c11 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c11::-webkit-input-placeholder {
  color: #abb9c5;
}

.c11::-moz-placeholder {
  color: #abb9c5;
}

.c11:-ms-input-placeholder {
  color: #abb9c5;
}

.c11::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c11::-moz-focus-inner {
  border: none;
  outline: none;
}

.c11:-moz-placeholder,
.c11::-moz-placeholder {
  opacity: 1;
}

.c10 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c12 {
  cursor: pointer;
}

.c7 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c16 {
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c4 > button {
  width: 100%;
}

.c5 {
  margin: 16px;
}

.c17 {
  margin: 16px;
  width: 300px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c14 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Select one..."
                readOnly={true}
                tabIndex="-1"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Opened option"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Custom render"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c16"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Plain option"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
    <div
      className="c4 c17"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Custom width"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Select States 1`] = `
.c15 {
  display: inline-block;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #2A506F;
  stroke: #2A506F;
}

.c15 g {
  fill: inherit;
  stroke: inherit;
}

.c15 *:not([stroke])[fill="none"] {
  stroke-width: 0;
}

.c15 *[stroke*="#"],
.c15 *[STROKE*="#"] {
  stroke: inherit;
  fill: none;
}

.c15 *[fill-rule],
.c15 *[FILL-RULE],
.c15 *[fill*="#"],
.c15 *[FILL*="#"] {
  fill: inherit;
  stroke: none;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1;
  -ms-flex: 1 1;
  flex: 1 1;
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c11 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  outline: none;
  border: none;
}

.c11::-webkit-input-placeholder {
  color: #abb9c5;
}

.c11::-moz-placeholder {
  color: #abb9c5;
}

.c11:-ms-input-placeholder {
  color: #abb9c5;
}

.c11::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c11::-moz-focus-inner {
  border: none;
  outline: none;
}

.c11:-moz-placeholder,
.c11::-moz-placeholder {
  opacity: 1;
}

.c10 {
  position: relative;
  width: 100%;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c12 {
  cursor: pointer;
}

.c17 {
  cursor: default;
}

.c7 {
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  color: #2A506F;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 46px;
  padding: 14px;
  padding-right: 0px;
  padding-left: 20px;
}

.c18 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  font-weight: normal;
  height: 36px;
  padding: 10px;
  padding-right: 0px;
  padding-left: 20px;
}

.c4 > button {
  width: 100%;
}

.c19 > button {
  width: 100%;
  border-color: #FF423D;
}

.c5 {
  margin: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

@media only screen and (max-width:768px) {
  .c14 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c13"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Emphasized"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
    <div
      className="c4 c5"
    >
      <button
        aria-label="Open Drop"
        className="c16 c7"
        disabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c17 c18"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Disabled"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
    <div
      className="c19 c5"
    >
      <button
        aria-label="Open Drop"
        className="c6 c7"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <input
                autoComplete="off"
                className="c11 c12 c18"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={true}
                tabIndex="-1"
                type="text"
                value="Invalid"
              />
            </div>
          </div>
          <div
            className="c14"
            style={
              Object {
                "minWidth": "auto",
              }
            }
          >
            <svg
              aria-label="FormDown"
              className="c15"
              viewBox="0 0 24 24"
            >
              <polyline
                fill="none"
                points="18 9 12 15 6 9"
                stroke="#000"
                strokeWidth="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Spinner Standard 1`] = `
.c13 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c13:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus > circle,
.c13:focus > ellipse,
.c13:focus > line,
.c13:focus > path,
.c13:focus > polygon,
.c13:focus > polyline,
.c13:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c13:focus::-moz-focus-inner {
  border: 0;
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 1px solid #2A506F;
  border-radius: 20px;
  color: #444444;
  padding: 4px 30px;
  font-size: 14px;
  line-height: 1.5;
  -webkit-transition-property: color,background-color,border-color,box-shadow;
  transition-property: color,background-color,border-color,box-shadow;
  -webkit-transition-duration: 0.1s;
  transition-duration: 0.1s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}

.c17:hover {
  box-shadow: 0px 0px 0px 2px #2A506F;
}

.c17:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus > circle,
.c17:focus > ellipse,
.c17:focus > line,
.c17:focus > path,
.c17:focus > polygon,
.c17:focus > polyline,
.c17:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c17:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c23 {
  padding: 48px;
}

.c14 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c14 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c14:disabled {
  cursor: not-allowed;
}

.c18 {
  color: #2A506F;
  border-color: #2A506F;
}

.c18 svg {
  color: #527699 !important;
}

.c18:hover:enabled,
.c18:focus:enabled,
.c18:active:enabled {
  box-shadow: none;
  background: #2A506F;
  border-color: #2A506F;
  color: white;
  opacity: initial;
}

.c18:hover:enabled svg,
.c18:focus:enabled svg,
.c18:active:enabled svg {
  color: white !important;
}

.c15 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c15:hover:enabled,
.c15:focus:enabled,
.c15:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c15:hover:enabled svg,
.c15:focus:enabled svg,
.c15:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c19 {
  margin-top: 16px;
  margin-bottom: 16px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c24 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c11 {
  margin-top: 0;
  margin-left: 8px;
  color: #527699;
}

.c12 {
  color: #2A506F;
}

.c16 {
  margin-top: 8px;
  margin-left: 0;
  color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c8 {
  background: transparent !important;
  width: 20px;
  height: 20px;
  border: 4px solid;
  color: #527699;
  border-radius: 100%;
  border-bottom-color: transparent;
  display: inline-block;
  -webkit-animation: fvBJul 1s 0s infinite linear;
  animation: fvBJul 1s 0s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.c10 {
  background: transparent !important;
  width: 40px;
  height: 40px;
  border: 6px solid;
  color: #527699;
  border-radius: 100%;
  border-bottom-color: transparent;
  display: inline-block;
  -webkit-animation: fvBJul 1s 0s infinite linear;
  animation: fvBJul 1s 0s infinite linear;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.c20 {
  position: relative;
}

.c25 {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 4;
}

.c22 {
  opacity: 1;
  -webkit-transition: opacity 250ms;
  transition: opacity 250ms;
  z-index: 3;
}

.c26 {
  opacity: 0.4;
  -webkit-transition: opacity 250ms;
  transition: opacity 250ms;
  z-index: 3;
}

.c7 {
  margin: 16px;
}

.c21 {
  margin-bottom: 16px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c3 c4"
    >
      <div
        className="c2 c3"
      >
        <div
          className=""
        >
          Standard
        </div>
        <div
          className="c2 c5 c6 c7"
        >
          <div
            className="c8"
          />
        </div>
      </div>
      <div
        className="c2 c3"
      >
        <div
          className=""
        >
          Emphasized
        </div>
        <div
          className="c2 c5 c9 c7"
        >
          <div
            className="c10"
          />
        </div>
      </div>
      <div
        className="c2 c3"
      >
        <div
          className=""
        >
          Standard with label
        </div>
        <div
          className="c2 c5 c6 c7"
        >
          <div
            className="c8"
          />
          <div
            className="c11"
          >
            Loading...
          </div>
        </div>
      </div>
      <div
        className="c2 c3"
      >
        <div
          className=""
        >
          Custom label component
        </div>
        <div
          className="c2 c5 c6 c7"
        >
          <div
            className="c8"
          />
          <div
            className="c11"
          >
            <div
              className="c12"
            >
              Building image 
              <button
                className="c13 c14 c15 "
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
                type="button"
              >
                12345
              </button>
              ...
            </div>
          </div>
        </div>
      </div>
      <div
        className="c2 c3"
      >
        <div
          className=""
        >
          Emphasized with label
        </div>
        <div
          className="c2 c5 c9 c7"
        >
          <div
            className="c10"
          />
          <div
            className="c16"
          >
            Loading...
          </div>
        </div>
      </div>
    </div>
    <div
      className=""
    >
      With Children
    </div>
    <button
      className="c17 c14 c18 c19"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      type="button"
    >
      Toggle spinner
    </button>
    <div
      className="c20 c21"
    >
      <div
        className="c22"
      >
        <div
          className="c2 c23"
          style={
            Object {
              "backgroundColor": "#f8f9fd",
            }
          }
        >
          No active spinner (nothing to see here)
        </div>
      </div>
    </div>
    <div
      className="c20 "
    >
      <div
        className="c2 c24 c25"
      >
        <div
          className="c2 c5 c9"
        >
          <div
            className="c10"
          />
          <div
            className="c16"
          >
            Loading...
          </div>
        </div>
      </div>
      <div
        className="c26"
      >
        <div
          className="c2 c23"
          style={
            Object {
              "backgroundColor": "#f8f9fd",
            }
          }
        >
          Spinning, the wrapped children are made opaque
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Steps Ordered 1`] = `
.c27 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-right: 12px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c30 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border: solid 1px #00AEEF;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 20px;
  width: 20px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 4px;
}

.c36 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c36:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c36:focus > circle,
.c36:focus > ellipse,
.c36:focus > line,
.c36:focus > path,
.c36:focus > polygon,
.c36:focus > polyline,
.c36:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c36:focus::-moz-focus-inner {
  border: 0;
}

.c31 {
  box-sizing: border-box;
  stroke-width: 2px;
  stroke: #00AEEF;
  width: 20px;
  height: 20px;
}

.c26 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  cursor: pointer;
}

.c26:hover input:not([disabled]) + div,
.c26:hover input:not([disabled]) + span {
  border-color: #DDE1f0;
}

.c29 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c29:checked + span > span {
  left: calc( 40px - 20px );
  background: #00AEEF;
}

.c28 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c6 {
  margin-left: auto;
  margin-right: auto;
}

.c9 {
  font-size: 14px;
}

.c11 {
  margin-right: 8px;
  color: #1AC135;
}

.c16 {
  margin-left: 16px;
  margin-right: 16px;
}

.c18 {
  margin-right: 8px;
  color: #00AEEF;
}

.c21 {
  margin-right: 8px;
  color: #bbc8d6;
}

.c24 {
  margin-bottom: 38px;
}

.c33 {
  margin-left: 8px;
  margin-right: 38px;
  min-height: 24px;
}

.c37 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c37 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c37:disabled {
  cursor: not-allowed;
}

.c38 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c38:hover:enabled,
.c38:focus:enabled,
.c38:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c38:hover:enabled svg,
.c38:focus:enabled svg,
.c38:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c4 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid transparent;
  background-color: white;
  color: inherit;
}

.c32 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c39 {
  position: absolute;
  font-size: 14px;
  padding: 8px;
  top: 28px;
  right: 8px;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
}

.c39 svg {
  height: 14px;
  width: 14px;
}

.c20 {
  font-weight: 600;
}

.c23 {
  color: #5b82a7;
}

.c34 {
  font-weight: normal;
  font-weight: 600;
}

.c35 {
  margin: 0;
  font-size: 14px;
  color: #527699;
}

.c25 > label > div > div,
.c25 > label > div > span {
  background-color: white;
}

.c25 > label > span {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
}

.c25 label input + div {
  border-color: #00AEEF;
  background: #00AEEF;
}

.c25 label input + div > svg {
  stroke: #fff;
}

.c25 label[disabled] {
  opacity: 0.4;
}

.c25 label:hover input:not([disabled]) + span > span {
  border-color: #009dd7;
  background: #009dd7;
}

.c25 label:hover input:not([disabled]) + div {
  border-color: #527699!important;
}

.c25 label:hover input:not([disabled]) + div {
  border-color: #009dd7 !important;
  background: #009dd7;
}

.c14 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c14:active,
.c14:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c15 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 24px;
}

.c19 {
  font-size: 16px;
  height: 24px;
  width: 24px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-variant-numeric: tabular-nums;
}

.c22 {
  font-size: 16px;
  height: 24px;
  width: 24px;
  border: 1px solid;
  border-radius: 50%;
}

.c5 {
  margin: 16px;
}

@media only screen and (max-width:768px) {
  .c27 {
    margin-right: 6px;
  }
}

@media only screen and (max-width:768px) {
  .c30 {
    border: solid 1px #00AEEF;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4 c5"
  >
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c14 c15"
            color="primary.main"
            onClick={[Function]}
          >
            Do this
          </a>
        </div>
        <div
          className="c2 c16 c17"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c18 c12 c13 fa-layers"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-circle fa-w-16 "
              data-icon="circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
            <div
              className="c19 fa-layers-text fa-inverse"
            >
              2
            </div>
          </div>
          <div
            className="c20 "
          >
            then this
          </div>
        </div>
        <div
          className="c2 c16 c17"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c21 c12 c13 fa-layers"
          >
            <div
              className="c2 c22"
            />
            <div
              className="c19 fa-layers-text"
            >
              3
            </div>
          </div>
          <a
            className="c14 c15"
            color="primary.main"
            onClick={[Function]}
          >
            and then this
          </a>
        </div>
        <div
          className="c2 c16 c17"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#bbc8d6"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c21 c12 c13 fa-layers"
          >
            <div
              className="c2 c22"
            />
            <div
              className="c19 fa-layers-text"
            >
              4
            </div>
          </div>
          <div
            className="c23"
          >
            and finally this!
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2 c24 c17"
  >
    <div
      className="c25 "
    >
      <label
        checked={true}
        className="c26"
        onClick={[Function]}
      >
        <div
          checked={true}
          className="c27 c28"
        >
          <input
            checked={true}
            className="c29"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            type="checkbox"
          />
          <div
            checked={true}
            className="c30 "
          >
            <svg
              checked={true}
              className="c31"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
            >
              <path
                d="M6,11.3 L10.3,16 L18,6.2"
                fill="none"
              />
            </svg>
          </div>
        </div>
        <span>
          Step 2 is complete
        </span>
      </label>
    </div>
  </div>
  <div
    className="c2 c3 c32 c5"
  >
    <div
      className="c2 c33 c17"
    >
      <h6
        className="c34 c35"
      >
        With title
      </h6>
    </div>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c14 c15"
            color="primary.main"
            onClick={[Function]}
          >
            Do this
          </a>
        </div>
        <div
          className="c2 c16 c17"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c18 c12 c13 fa-layers"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-circle fa-w-16 "
              data-icon="circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
            <div
              className="c19 fa-layers-text fa-inverse"
            >
              2
            </div>
          </div>
          <div
            className="c20 "
          >
            then this
          </div>
        </div>
        <div
          className="c2 c16 c17"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c21 c12 c13 fa-layers"
          >
            <div
              className="c2 c22"
            />
            <div
              className="c19 fa-layers-text"
            >
              3
            </div>
          </div>
          <a
            className="c14 c15"
            color="primary.main"
            onClick={[Function]}
          >
            and then this
          </a>
        </div>
        <div
          className="c2 c16 c17"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#bbc8d6"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c21 c12 c13 fa-layers"
          >
            <div
              className="c2 c22"
            />
            <div
              className="c19 fa-layers-text"
            >
              4
            </div>
          </div>
          <div
            className="c23"
          >
            and finally this!
          </div>
        </div>
      </div>
    </div>
    <button
      aria-label="Dismiss"
      className="c36 c37 c38 c39"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      title="Dismiss"
      type="button"
    >
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-times fa-w-11 "
        data-icon="times"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 352 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </button>
  </div>
  <div
    className="c2 c24 c17"
  >
    <div
      className="c25 "
    >
      <label
        checked={true}
        className="c26"
        onClick={[Function]}
      >
        <div
          checked={true}
          className="c27 c28"
        >
          <input
            checked={true}
            className="c29"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            type="checkbox"
          />
          <div
            checked={true}
            className="c30 "
          >
            <svg
              checked={true}
              className="c31"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
            >
              <path
                d="M6,11.3 L10.3,16 L18,6.2"
                fill="none"
              />
            </svg>
          </div>
        </div>
        <span>
          Step 2 is complete
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Steps Standard 1`] = `
.c25 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #00AEEF;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c25:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c25:focus > circle,
.c25:focus > ellipse,
.c25:focus > line,
.c25:focus > path,
.c25:focus > polygon,
.c25:focus > polyline,
.c25:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c25:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c6 {
  margin-left: auto;
  margin-right: auto;
}

.c9 {
  font-size: 14px;
}

.c11 {
  margin-right: 8px;
  color: #1AC135;
}

.c15 {
  margin-left: 16px;
  margin-right: 16px;
}

.c17 {
  margin-right: 8px;
  color: #bbc8d6;
}

.c21 {
  margin-left: 8px;
  margin-right: 38px;
  min-height: 24px;
}

.c26 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c26 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c26:disabled {
  cursor: not-allowed;
}

.c27 {
  color: #00AEEF;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c27:hover:enabled,
.c27:focus:enabled,
.c27:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(196.29999999999995,100%,37.5%);
  opacity: initial;
}

.c27:hover:enabled svg,
.c27:focus:enabled svg,
.c27:active:enabled svg {
  color: hsl(196.29999999999995,100%,37.5%) !important;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c4 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c20 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 38px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid #DDE1f0;
  background-color: white;
  color: inherit;
}

.c29 {
  position: relative;
  margin: 0;
  padding: 16px;
  padding-right: 16px;
  box-shadow: 0 0 10px 0 rgba(221,225,240,0.15);
  border-radius: 10px;
  border: 1px solid transparent;
  background-color: white;
  color: inherit;
}

.c28 {
  position: absolute;
  font-size: 14px;
  padding: 8px;
  top: 28px;
  right: 8px;
  -webkit-transform: translate(0,-50%);
  -ms-transform: translate(0,-50%);
  transform: translate(0,-50%);
}

.c28 svg {
  height: 14px;
  width: 14px;
}

.c14 {
  color: #5b82a7;
}

.c22 {
  margin-right: 8px;
  font-size: 14px;
  color: #bbc8d6;
}

.c23 {
  font-weight: normal;
  font-weight: 600;
}

.c24 {
  margin: 0;
  font-size: 14px;
  color: #527699;
}

.c18 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c18:active,
.c18:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c19 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 24px;
}

.c5 {
  margin: 16px;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4 c5"
  >
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <div
            className="c14"
          >
            These are
          </div>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <div
            className="c14"
          >
            all completed
          </div>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <div
            className="c14"
          >
            and not clickable
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2 c3 c4 c5"
  >
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c17 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            This one
          </a>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            Doesn't have
          </a>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c17 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            Title or dismiss button
          </a>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            That's it (no icon)
          </a>
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2 c3 c20 c5"
  >
    <div
      className="c2 c21 c16"
    >
      <div
        className="c22"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-map-signs fa-w-16 "
          data-icon="map-signs"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 512 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </div>
      <h6
        className="c23 c24"
      >
        Beginners Guide
      </h6>
    </div>
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c17 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            Do this
          </a>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            And then this
          </a>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c17 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            And finally this
          </a>
        </div>
      </div>
    </div>
    <button
      aria-label="Dismiss"
      className="c25 c26 c27 c28"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
      title="Dismiss"
      type="button"
    >
      <svg
        aria-hidden="true"
        className="svg-inline--fa fa-times fa-w-11 "
        data-icon="times"
        data-prefix="fas"
        focusable="false"
        role="img"
        style={Object {}}
        viewBox="0 0 352 512"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
          fill="currentColor"
          style={Object {}}
        />
      </svg>
    </button>
  </div>
  <div
    className="c2 c3 c29 c5"
  >
    <div
      className="c2 c6 c7"
    >
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c17 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            Do this
          </a>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c11 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            And then this
          </a>
        </div>
        <div
          className="c2 c15 c16"
        >
          <svg
            height="9"
            viewBox="0 0 29.4 9"
            width="29.4"
            x="0"
            xmlns="http://www.w3.org/2000/svg"
            y="0"
          >
            <g
              transform="translate(1.000000, 4.000000)"
            >
              <path
                d="M20-4c0.1,0,0.2,0,0.2,0.1l0,0l7.9,4c0.3,0.1,0.4,0.5,0.2,0.7c-0.1,0.1-0.1,0.2-0.2,0.2l0,0
			l-8,3.9c-0.3,0.1-0.6,0-0.7-0.2c0-0.1-0.1-0.2-0.1-0.2l0,0l0-3.5l-3.9,0C15.2,1,15,0.8,15,0.5l0-0.1C15,0.2,15.2,0,15.5,0l0,0
			l3.9,0l0-3.5C19.4-3.7,19.6-4,20-4L20-4z M7.5-0.1l4,0c0.3,0,0.5,0.2,0.5,0.5s-0.2,0.5-0.5,0.5l0,0l-4,0C7.2,0.9,7,0.7,7,0.4
			C7,0.1,7.2-0.1,7.5-0.1L7.5-0.1z M-0.5-0.2l4,0C3.8-0.1,4,0.1,4,0.4S3.8,0.9,3.5,0.9l0,0l-4,0C-0.8,0.8-1,0.6-1,0.3
			C-1,0-0.8-0.2-0.5-0.2L-0.5-0.2z"
                fill="#5b82a7"
                fillRule="nonzero"
              />
            </g>
          </svg>
        </div>
      </div>
      <div
        className="c2 c8"
      >
        <div
          className="c2 c9 c10"
        >
          <div
            className="c2 c17 c12 c13"
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-check-circle fa-w-16 "
              data-icon="check-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </div>
          <a
            className="c18 c19"
            color="primary.main"
            onClick={[Function]}
          >
            And finally this
          </a>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Tabs Compact 1`] = `
.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0px;
  border-bottom: solid 1px #00AEEF;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-bottom: 6px;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0px;
  border-bottom: solid 1px #DDE1f0;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-bottom: 6px;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c8:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus > circle,
.c8:focus > ellipse,
.c8:focus > line,
.c8:focus > path,
.c8:focus > polygon,
.c8:focus > polyline,
.c8:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c8:focus::-moz-focus-inner {
  border: 0;
}

.c11 {
  font-size: 14px;
  line-height: 1.5;
  color: #00AEEF;
}

.c13 {
  font-size: 14px;
  line-height: 1.5;
  color: #2A506F;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c10 {
  margin: 0px;
  padding: 4px 16px;
}

.c10:hover {
  color: #009dd7;
}

.c14 {
  min-height: 0;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  max-width: 400px;
}

.c15 {
  margin-top: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c5 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  height: 100%;
  width: 100%;
}

.c5 div[role='tabpanel'] {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 > div {
  -webkit-scroll-snap-type: x mandatory;
  -moz-scroll-snap-type: x mandatory;
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory;
  overflow-x: scroll;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.c5 div[role=tabpanel] {
  overflow-x: auto;
}

.c5 div > button[role=tab] > div {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-scroll-snap-align: center;
  -moz-scroll-snap-align: center;
  -ms-scroll-snap-align: center;
  scroll-snap-align: center;
}

.c6 {
  padding: 16px;
}

@media only screen and (max-width:768px) {
  .c9 {
    margin: 0px;
  }
}

@media only screen and (max-width:768px) {
  .c9 {
    border-bottom: solid 1px #00AEEF;
  }
}

@media only screen and (max-width:768px) {
  .c9 {
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c12 {
    margin: 0px;
  }
}

@media only screen and (max-width:768px) {
  .c12 {
    border-bottom: solid 1px #DDE1f0;
  }
}

@media only screen and (max-width:768px) {
  .c12 {
    padding-bottom: 3px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c4 c5 c6"
      role="tablist"
    >
      <div
        className="c7 "
      >
        <button
          aria-expanded={true}
          aria-selected={true}
          className="c8"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c9 c10"
          >
            <span
              className="c11"
            >
              Tab 1
            </span>
          </div>
        </button>
        <button
          aria-expanded={false}
          aria-selected={false}
          className="c8"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c12 c10"
          >
            <span
              className="c13"
            >
              Tab 2
            </span>
          </div>
        </button>
        <button
          aria-expanded={false}
          aria-selected={false}
          className="c8"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c12 c10"
          >
            <span
              className="c13"
            >
              Tab 3
            </span>
          </div>
        </button>
        <button
          aria-expanded={false}
          aria-selected={false}
          className="c8"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c12 c10"
          >
            <span
              className="c13"
            >
              This is a very long tab name
            </span>
          </div>
        </button>
        <button
          aria-expanded={false}
          aria-selected={false}
          className="c8"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c12 c10"
          >
            <span
              className="c13"
            >
              This is another very long tab name
            </span>
          </div>
        </button>
        <button
          aria-expanded={false}
          aria-selected={false}
          className="c8"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
          role="tab"
          type="button"
        >
          <div
            className="c12 c10"
          >
            <span
              className="c13"
            >
              And this is a third very long tab name testing
            </span>
          </div>
        </button>
      </div>
      <div
        aria-label="Tab 1 Tab Contents"
        className="c14"
        role="tabpanel"
      >
        <div
          className="c15"
        >
          Here is tab #1
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Tabs Long tab names 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0px;
  border-bottom: solid 1px #00AEEF;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-bottom: 6px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0px;
  border-bottom: solid 1px #DDE1f0;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-bottom: 6px;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c9 {
  font-size: 14px;
  line-height: 1.5;
  color: #00AEEF;
}

.c11 {
  font-size: 14px;
  line-height: 1.5;
  color: #2A506F;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c8 {
  margin: 0px;
  padding: 4px 16px;
}

.c8:hover {
  color: #009dd7;
}

.c12 {
  min-height: 0;
}

.c13 {
  margin-top: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c3 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  height: 100%;
}

.c3 div[role='tabpanel'] {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c4 {
  padding: 16px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin: 0px;
  }
}

@media only screen and (max-width:768px) {
  .c7 {
    border-bottom: solid 1px #00AEEF;
  }
}

@media only screen and (max-width:768px) {
  .c7 {
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c10 {
    margin: 0px;
  }
}

@media only screen and (max-width:768px) {
  .c10 {
    border-bottom: solid 1px #DDE1f0;
  }
}

@media only screen and (max-width:768px) {
  .c10 {
    padding-bottom: 3px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
    role="tablist"
  >
    <div
      className="c5 "
    >
      <button
        aria-expanded={true}
        aria-selected={true}
        className="c6"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        role="tab"
        type="button"
      >
        <div
          className="c7 c8"
        >
          <span
            className="c9"
          >
            This is a very long tab name
          </span>
        </div>
      </button>
      <button
        aria-expanded={false}
        aria-selected={false}
        className="c6"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        role="tab"
        type="button"
      >
        <div
          className="c10 c8"
        >
          <span
            className="c11"
          >
            This is another very long tab name
          </span>
        </div>
      </button>
      <button
        aria-expanded={false}
        aria-selected={false}
        className="c6"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        role="tab"
        type="button"
      >
        <div
          className="c10 c8"
        >
          <span
            className="c11"
          >
            And this is a third very long tab name
          </span>
        </div>
      </button>
    </div>
    <div
      aria-label="This is a very long tab name Tab Contents"
      className="c12"
      role="tabpanel"
    >
      <div
        className="c13"
      >
        Here is tab #1
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Tabs Standard 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0px;
  border-bottom: solid 1px #00AEEF;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-bottom: 6px;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin: 0px;
  border-bottom: solid 1px #DDE1f0;
  min-width: 0;
  min-height: 0;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-bottom: 6px;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c6:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus > circle,
.c6:focus > ellipse,
.c6:focus > line,
.c6:focus > path,
.c6:focus > polygon,
.c6:focus > polyline,
.c6:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c6:focus::-moz-focus-inner {
  border: 0;
}

.c9 {
  font-size: 14px;
  line-height: 1.5;
  color: #00AEEF;
}

.c11 {
  font-size: 14px;
  line-height: 1.5;
  color: #2A506F;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c8 {
  margin: 0px;
  padding: 4px 16px;
}

.c8:hover {
  color: #009dd7;
}

.c12 {
  min-height: 0;
}

.c13 {
  margin-top: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c3 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  height: 100%;
}

.c3 div[role='tabpanel'] {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c4 {
  padding: 16px;
}

@media only screen and (max-width:768px) {
  .c7 {
    margin: 0px;
  }
}

@media only screen and (max-width:768px) {
  .c7 {
    border-bottom: solid 1px #00AEEF;
  }
}

@media only screen and (max-width:768px) {
  .c7 {
    padding-bottom: 3px;
  }
}

@media only screen and (max-width:768px) {
  .c10 {
    margin: 0px;
  }
}

@media only screen and (max-width:768px) {
  .c10 {
    border-bottom: solid 1px #DDE1f0;
  }
}

@media only screen and (max-width:768px) {
  .c10 {
    padding-bottom: 3px;
  }
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3 c4"
    role="tablist"
  >
    <div
      className="c5 "
    >
      <button
        aria-expanded={true}
        aria-selected={true}
        className="c6"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        role="tab"
        type="button"
      >
        <div
          className="c7 c8"
        >
          <span
            className="c9"
          >
            Tab 1
          </span>
        </div>
      </button>
      <button
        aria-expanded={false}
        aria-selected={false}
        className="c6"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        role="tab"
        type="button"
      >
        <div
          className="c10 c8"
        >
          <span
            className="c11"
          >
            Tab 2
          </span>
        </div>
      </button>
      <button
        aria-expanded={false}
        aria-selected={false}
        className="c6"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        role="tab"
        type="button"
      >
        <div
          className="c10 c8"
        >
          <span
            className="c11"
          >
            Tab 3
          </span>
        </div>
      </button>
    </div>
    <div
      aria-label="Tab 1 Tab Contents"
      className="c12"
      role="tabpanel"
    >
      <div
        className="c13"
      >
        Here is tab #1
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Tag Actionable 1`] = `
.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: #2A506F;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c11:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus > circle,
.c11:focus > ellipse,
.c11:focus > line,
.c11:focus > path,
.c11:focus > polygon,
.c11:focus > polyline,
.c11:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #00AEEF;
}

.c11:focus::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
}

.c12 {
  font-weight: 600;
  font-size: 14px;
  height: 38px;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c12 svg {
  color: inherit !important;
  font-size: 0.925em;
}

.c12:disabled {
  cursor: not-allowed;
}

.c13 {
  color: #2A506F;
  height: auto;
  font-weight: 600;
  border-radius: 0;
}

.c13:hover:enabled,
.c13:focus:enabled,
.c13:active:enabled {
  box-shadow: none;
  background: none;
  border-color: none;
  color: hsl(207,45.1%,24%);
  opacity: initial;
}

.c13:hover:enabled svg,
.c13:focus:enabled svg,
.c13:active:enabled svg {
  color: hsl(207,45.1%,24%) !important;
}

.c14 {
  padding: 4px;
  padding-left: 8px;
  padding-right: 16px;
  font-size: 12px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  white-space: pre;
}

.c10 {
  font-weight: 600;
}

.c9 {
  font-size: 12px;
  color: #1496E1;
}

.c7 {
  background-color: #e8f5fc;
  border: 1px solid #1496E1;
  border-radius: 2px;
  line-height: 1.5;
}

.c15 {
  color: #bbc8d6;
}

.c5 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c8 c9"
        >
          Closable: 
        </div>
        <div
          className="c10 c9"
        >
          tag
        </div>
      </div>
      <button
        className="c11 c12 c13 c14 c15"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c11 c12 c13 "
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c6 c4 c7"
        >
          <div
            className="c8 c9"
          >
            Clickable: 
          </div>
          <div
            className="c10 c9"
          >
            tag
          </div>
        </div>
      </button>
    </div>
    <div
      className="c2 c4 c5"
    >
      <button
        className="c11 c12 c13 "
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <div
          className="c2 c6 c4 c7"
        >
          <div
            className="c8 c9"
          >
            Clickable and 
          </div>
          <div
            className="c10 c9"
          >
            closable
          </div>
        </div>
      </button>
      <button
        className="c11 c12 c13 c14 c15"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
        type="button"
      >
        <svg
          aria-hidden="true"
          className="svg-inline--fa fa-times fa-w-11 "
          data-icon="times"
          data-prefix="fas"
          focusable="false"
          role="img"
          style={Object {}}
          viewBox="0 0 352 512"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
            fill="currentColor"
            style={Object {}}
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Tag Multiple values in a tag 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  white-space: pre;
}

.c10 {
  font-weight: 600;
}

.c11 {
  white-space: pre;
  font-style: italic;
}

.c9 {
  font-size: 12px;
  color: #1496E1;
}

.c7 {
  background-color: #e8f5fc;
  border: 1px solid #1496E1;
  border-radius: 2px;
  line-height: 1.5;
}

.c5 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c8 c9"
        >
          Tag1 contains 
        </div>
        <div
          className="c10 c9"
        >
          value1
        </div>
        <div
          className="c11 c9"
        >
            or  
        </div>
        <div
          className="c8 c9"
        >
          Tag2 contains 
        </div>
        <div
          className="c10 c9"
        >
          value2
        </div>
      </div>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c8 c9"
        >
          Tag3 contains 
        </div>
        <div
          className="c10 c9"
        >
          value3
        </div>
        <div
          className="c11 c9"
        >
            and  
        </div>
        <div
          className="c8 c9"
        >
          Tag4 contains 
        </div>
        <div
          className="c10 c9"
        >
          value4
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/Tag Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c6 {
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 8px;
  padding-right: 8px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c8 {
  white-space: pre;
}

.c10 {
  font-weight: 600;
}

.c11 {
  font-style: italic;
}

.c9 {
  font-size: 12px;
  color: #1496E1;
}

.c7 {
  background-color: #e8f5fc;
  border: 1px solid #1496E1;
  border-radius: 2px;
  line-height: 1.5;
}

.c5 {
  margin: 8px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c8 c9"
        >
          Tag1: 
        </div>
        <div
          className="c10 c9"
        >
          value1
        </div>
      </div>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c8 c9"
        >
          Tag2 has 
        </div>
        <div
          className="c10 c9"
        >
          operator
        </div>
      </div>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c10 c9"
        >
          only value
        </div>
      </div>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c8 c9"
        >
          only name
        </div>
      </div>
    </div>
    <div
      className="c2 c4 c5"
    >
      <div
        className="c2 c6 c4 c7"
      >
        <div
          className="c11 c9"
        >
          no value
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Next/TextWithCopy Always showing the copy icon 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  width: 300px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  display: inline-block;
  white-space: nowrap;
}

.c4 .text-with-copy__content {
  white-space: normal;
  word-wrap: break-word;
  margin-right: 4px;
}

.c4 > .text-with-copy__copy_wrapper {
  display: inline-block;
}

.c4 .text-with-copy__copy {
  cursor: pointer;
  visibility: visible;
}

.c4 code {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 2px;
  white-space: normal;
  word-wrap: break-word;
  font-size: 1em;
  margin-right: 4px;
  display: inline-block;
}

.c4:hover .text-with-copy__copy {
  visibility: visible;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <span
      className="c4 text-with-copy"
      title="This value has been copied to your clipboard!"
    >
      <span
        className="text-with-copy__content"
      >
        click the icon
      </span>
      <span
        className="text-with-copy__copy_wrapper"
        onClick={[Function]}
      >
        <div
          className="c2 text-with-copy__copy"
          onClick={[Function]}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-14 "
            data-icon="copy"
            data-prefix="far"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Next/TextWithCopy Code 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  display: inline-block;
  white-space: nowrap;
}

.c4 .text-with-copy__content {
  white-space: normal;
  word-wrap: break-word;
  margin-right: 4px;
}

.c4 > .text-with-copy__copy_wrapper {
  display: inline-block;
}

.c4 .text-with-copy__copy {
  cursor: pointer;
  visibility: hidden;
}

.c4 code {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 2px;
  white-space: normal;
  word-wrap: break-word;
  font-size: 1em;
  margin-right: 4px;
  display: inline-block;
}

.c4:hover .text-with-copy__copy {
  visibility: visible;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <span
      className="c4 text-with-copy"
      title="This value has been copied to your clipboard!"
    >
      <code
        title="This value has been copied to your clipboard!"
      >
        22ab7io
      </code>
      <span
        className="text-with-copy__copy_wrapper"
        onClick={[Function]}
      >
        <div
          className="c2 text-with-copy__copy"
          onClick={[Function]}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-14 "
            data-icon="copy"
            data-prefix="far"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </span>
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c4 text-with-copy"
      title="This value has been copied to your clipboard!"
    >
      <code
        title="This value has been copied to your clipboard!"
      >
        3555432
      </code>
      <span
        className="text-with-copy__copy_wrapper"
        onClick={[Function]}
      >
        <div
          className="c2 text-with-copy__copy"
          onClick={[Function]}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-14 "
            data-icon="copy"
            data-prefix="far"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </span>
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c4 text-with-copy"
      title="Specify only the copy prop"
    >
      <code
        title="Specify only the copy prop"
      >
        Specify only the copy prop
      </code>
      <span
        className="text-with-copy__copy_wrapper"
        onClick={[Function]}
      >
        <div
          className="c2 text-with-copy__copy"
          onClick={[Function]}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-14 "
            data-icon="copy"
            data-prefix="far"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </span>
    </span>
  </div>
  <div
    className="c2 c3"
  >
    <span
      className="c4 text-with-copy"
    >
      <code
        title="Or only the text prop"
      >
        Or only the text prop
      </code>
      <span
        className="text-with-copy__copy_wrapper"
        onClick={[Function]}
      >
        <div
          className="c2 text-with-copy__copy"
          onClick={[Function]}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-14 "
            data-icon="copy"
            data-prefix="far"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Next/TextWithCopy Inside clickable element 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c7 {
  margin-right: 48px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  opacity: 1;
  display: inline-block;
}

.c4:active,
.c4:hover {
  color: hsl(196.29999999999995,100%,37.5%);
}

.c5 {
  color: #00AEEF;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c8 {
  display: inline-block;
  white-space: nowrap;
}

.c8 .text-with-copy__content {
  white-space: normal;
  word-wrap: break-word;
  margin-right: 4px;
}

.c8 > .text-with-copy__copy_wrapper {
  display: inline-block;
}

.c8 .text-with-copy__copy {
  cursor: pointer;
  visibility: hidden;
}

.c8 code {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 2px;
  white-space: normal;
  word-wrap: break-word;
  font-size: 1em;
  margin-right: 4px;
  display: inline-block;
}

.c8:hover .text-with-copy__copy {
  visibility: visible;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <a
      className="c4 c5"
      color="primary.main"
      href="#foobar"
      style={
        Object {
          "display": "block",
        }
      }
    >
      <div
        className="c2 c6"
      >
        <div
          className="c2 c7"
        >
          Link Text
        </div>
        <div
          className="c2 "
        >
          <span
            className="c8 text-with-copy"
            title="This value has been copied to your clipboard!"
          >
            <span
              className="text-with-copy__content"
            >
              hover & click the icon
            </span>
            <span
              className="text-with-copy__copy_wrapper"
              onClick={[Function]}
            >
              <div
                className="c2 text-with-copy__copy"
                onClick={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-copy fa-w-14 "
                  data-icon="copy"
                  data-prefix="far"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 448 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </div>
            </span>
          </span>
        </div>
      </div>
    </a>
  </div>
</div>
`;

exports[`Storyshots Next/TextWithCopy Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  display: inline-block;
  white-space: nowrap;
}

.c4 .text-with-copy__content {
  white-space: normal;
  word-wrap: break-word;
  margin-right: 4px;
}

.c4 > .text-with-copy__copy_wrapper {
  display: inline-block;
}

.c4 .text-with-copy__copy {
  cursor: pointer;
  visibility: hidden;
}

.c4 code {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 2px;
  white-space: normal;
  word-wrap: break-word;
  font-size: 1em;
  margin-right: 4px;
  display: inline-block;
}

.c4:hover .text-with-copy__copy {
  visibility: visible;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <span
      className="c4 text-with-copy"
      title="This value has been copied to your clipboard!"
    >
      <span
        className="text-with-copy__content"
      >
        <i>
          hover
        </i>
         & 
        <b>
          click
        </b>
         the icon
      </span>
      <span
        className="text-with-copy__copy_wrapper"
        onClick={[Function]}
      >
        <div
          className="c2 text-with-copy__copy"
          onClick={[Function]}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-14 "
            data-icon="copy"
            data-prefix="far"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Next/TextWithCopy Wrapping text 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
  width: 300px;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

.c4 {
  display: inline-block;
  white-space: nowrap;
}

.c4 .text-with-copy__content {
  white-space: normal;
  word-wrap: break-word;
  margin-right: 4px;
}

.c4 > .text-with-copy__copy_wrapper {
  display: inline-block;
}

.c4 .text-with-copy__copy {
  cursor: pointer;
  visibility: hidden;
}

.c4 code {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 2px;
  white-space: normal;
  word-wrap: break-word;
  font-size: 1em;
  margin-right: 4px;
  display: inline-block;
}

.c4:hover .text-with-copy__copy {
  visibility: visible;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <span
      className="c4 text-with-copy"
      title="This value has been copied to your clipboard!"
    >
      <span
        className="text-with-copy__content"
      >
        hover & click ... ... ... ... ... ... ... ... ... ... ... ... the icon on the wrapped text
      </span>
      <span
        className="text-with-copy__copy_wrapper"
        onClick={[Function]}
      >
        <div
          className="c2 text-with-copy__copy"
          onClick={[Function]}
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-copy fa-w-14 "
            data-icon="copy"
            data-prefix="far"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </div>
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Next/Textarea AutoRows 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c4 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c4::-webkit-input-placeholder {
  color: #abb9c5;
}

.c4::-moz-placeholder {
  color: #abb9c5;
}

.c4:-ms-input-placeholder {
  color: #abb9c5;
}

.c4::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4:-moz-placeholder,
.c4::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  padding: 14px 20px;
  color: #2A506F;
  cursor: auto;
  resize: vertical;
  display: block;
  width: 100%;
}

.c5:focus {
  border-color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <textarea
      className="c4 c5 "
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="This input will grow to match the text it contains"
      rows={1}
      value=""
    />
  </div>
</div>
`;

exports[`Storyshots Next/Textarea Disabled 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c4 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
  opacity: 0.4;
  cursor: default;
}

.c4::-webkit-input-placeholder {
  color: #abb9c5;
}

.c4::-moz-placeholder {
  color: #abb9c5;
}

.c4:-ms-input-placeholder {
  color: #abb9c5;
}

.c4::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4:-moz-placeholder,
.c4::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  padding: 14px 20px;
  color: #2A506F;
  cursor: not-allowed;
  resize: vertical;
  display: block;
  width: 100%;
}

.c5:focus {
  border-color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <textarea
      className="c4 c5 "
      disabled={true}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Placeholder text"
    />
  </div>
</div>
`;

exports[`Storyshots Next/Textarea MaxRows 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c4 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c4::-webkit-input-placeholder {
  color: #abb9c5;
}

.c4::-moz-placeholder {
  color: #abb9c5;
}

.c4:-ms-input-placeholder {
  color: #abb9c5;
}

.c4::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4:-moz-placeholder,
.c4::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  padding: 14px 20px;
  color: #2A506F;
  cursor: auto;
  resize: vertical;
  display: block;
  width: 100%;
}

.c5:focus {
  border-color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <textarea
      className="c4 c5 "
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="This input has a maxiumum size of 8 rows"
      rows={1}
      value=""
    />
  </div>
</div>
`;

exports[`Storyshots Next/Textarea MinRows 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c4 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c4::-webkit-input-placeholder {
  color: #abb9c5;
}

.c4::-moz-placeholder {
  color: #abb9c5;
}

.c4:-ms-input-placeholder {
  color: #abb9c5;
}

.c4::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4:-moz-placeholder,
.c4::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  padding: 14px 20px;
  color: #2A506F;
  cursor: auto;
  resize: vertical;
  display: block;
  width: 100%;
}

.c5:focus {
  border-color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <textarea
      className="c4 c5 "
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="This input has a minimum size of 4 rows"
      rows={4}
      value=""
    />
  </div>
</div>
`;

exports[`Storyshots Next/Textarea Monospace 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c4 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c4::-webkit-input-placeholder {
  color: #abb9c5;
}

.c4::-moz-placeholder {
  color: #abb9c5;
}

.c4:-ms-input-placeholder {
  color: #abb9c5;
}

.c4::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4:-moz-placeholder,
.c4::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
  padding: 14px 20px;
  color: #2A506F;
  cursor: auto;
  resize: vertical;
  display: block;
  width: 100%;
}

.c5:focus {
  border-color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <textarea
      className="c4 c5 "
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Placeholder text"
    />
  </div>
</div>
`;

exports[`Storyshots Next/Textarea Read only 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c4 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c4::-webkit-input-placeholder {
  color: #abb9c5;
}

.c4::-moz-placeholder {
  color: #abb9c5;
}

.c4:-ms-input-placeholder {
  color: #abb9c5;
}

.c4::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4:-moz-placeholder,
.c4::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  padding: 14px 20px;
  color: #2A506F;
  cursor: auto;
  resize: vertical;
  display: block;
  width: 100%;
}

.c5:focus {
  border-color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <textarea
      className="c4 c5 "
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Placeholder text"
      readOnly={true}
      value="Read only value"
    />
  </div>
</div>
`;

exports[`Storyshots Next/Textarea Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c4 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 400;
  margin: 0;
  border: 1px solid #DDE1f0;
  border-radius: 4px;
}

.c4::-webkit-input-placeholder {
  color: #abb9c5;
}

.c4::-moz-placeholder {
  color: #abb9c5;
}

.c4:-ms-input-placeholder {
  color: #abb9c5;
}

.c4::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c4::-moz-focus-inner {
  border: none;
  outline: none;
}

.c4:-moz-placeholder,
.c4::-moz-placeholder {
  opacity: 1;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c5 {
  padding: 14px 20px;
  color: #2A506F;
  cursor: auto;
  resize: vertical;
  display: block;
  width: 100%;
}

.c5:focus {
  border-color: #527699;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <textarea
      className="c4 c5 "
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      placeholder="Placeholder text"
    />
  </div>
</div>
`;

exports[`Storyshots Next/Txt Standard 1`] = `
.c0 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  line-height: 1.5;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  box-sizing: border-box;
}

.c3 {
  margin: 16px;
}

.c4 {
  text-align: center;
}

.c5 {
  text-align: right;
}

.c6 {
  font-weight: 600;
}

.c7 {
  font-style: italic;
}

.c8 {
  font-family: 'Ubuntu Mono','Courier New',monospace;
}

.c12 {
  white-space: pre;
}

.c9 {
  color: blue;
}

.c10 {
  color: red;
}

.c11 {
  color: yellow;
}

.c1 {
  font-family: 'Source Sans Pro',Helvetica,sans-serif;
  font-size: 14px;
  color: #2A506F;
}

<div
  className="c0 c1"
>
  <div
    className="c2 c3"
  >
    <div
      className=""
    >
      Standard txt
    </div>
    <div
      className="c4 "
    >
      Centered
    </div>
    <div
      className="c5 "
    >
      Right
    </div>
    <div
      className="c6 "
    >
      Bold
    </div>
    <div
      className="c7 "
    >
      Italic
    </div>
    <div
      className="c8 "
    >
      Monospace
    </div>
    <span
      className="c9"
    >
      Inline 
    </span>
    <span
      className="c10"
    >
      Inline 
    </span>
    <span
      className="c11"
    >
      Inline 
    </span>
    <div
      className="c12 "
    >
      Space   is   preserved
    </div>
  </div>
</div>
`;
